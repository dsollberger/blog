<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Median Data Scientist on The Median Data Scientist</title>
    <link>/</link>
    <description>Recent content in The Median Data Scientist on The Median Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Duolingo Leagues</title>
      <link>/post/duolingo-leagues/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/duolingo-leagues/</guid>
      <description>&lt;p&gt;&lt;code&gt;Duolingo&lt;/code&gt;, the language learning app, places users in groups of 50 and assigns a &lt;code&gt;league&lt;/code&gt; to each user to encourage competition. The leagues are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bronze, Silver, Gold, Sapphire, Ruby, Emerald, Amethyst, Pearl, Obsidian, and Diamond (in that increasing order)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;what-proportion-of-duolingo-users-are-in-each-league&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What proportion of Duolingo users are in each league?&lt;/h1&gt;
&lt;p&gt;The rules are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;everyone starts in the Bronze League&lt;/li&gt;
&lt;li&gt;the top 15 percent of each group gets promoted to the next league up (measured weekly)&lt;/li&gt;
&lt;li&gt;the bottom 10 percent of each group is related downward&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, I will try out some stochastic processes calculations to answer that question.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;leagues &amp;lt;- c(&amp;quot;Bronze&amp;quot;, &amp;quot;Silver&amp;quot;, &amp;quot;Gold&amp;quot;, &amp;quot;Sapphire&amp;quot;, &amp;quot;Ruby&amp;quot;,
             &amp;quot;Emerald&amp;quot;, &amp;quot;Amethyst&amp;quot;, &amp;quot;Pearl&amp;quot;, &amp;quot;Obsidian&amp;quot;, &amp;quot;Diamond&amp;quot;)

transition_matrix &amp;lt;- matrix( rep(0, 100), 10)

# trying shortcuts
diag(transition_matrix[-10,-1]) &amp;lt;- 15 #top 15 percent of each group gets promoted
diag(transition_matrix[-1,-10]) &amp;lt;- 10 #bottom 10 percent of each group is relegated
diag(transition_matrix)         &amp;lt;- 75 #the rest stay where they are

# fix the corners
transition_matrix[1,1]    &amp;lt;- 85
transition_matrix[10, 10] &amp;lt;- 85

# make row-stochastic (i.e. so each row adds up to one)
transition_matrix &amp;lt;- transition_matrix/100

# R allows user to label rows and columns
rownames(transition_matrix) &amp;lt;- leagues
colnames(transition_matrix) &amp;lt;- leagues

print(transition_matrix)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          Bronze Silver Gold Sapphire Ruby Emerald Amethyst Pearl Obsidian
## Bronze     0.85   0.15 0.00     0.00 0.00    0.00     0.00  0.00     0.00
## Silver     0.10   0.75 0.15     0.00 0.00    0.00     0.00  0.00     0.00
## Gold       0.00   0.10 0.75     0.15 0.00    0.00     0.00  0.00     0.00
## Sapphire   0.00   0.00 0.10     0.75 0.15    0.00     0.00  0.00     0.00
## Ruby       0.00   0.00 0.00     0.10 0.75    0.15     0.00  0.00     0.00
## Emerald    0.00   0.00 0.00     0.00 0.10    0.75     0.15  0.00     0.00
## Amethyst   0.00   0.00 0.00     0.00 0.00    0.10     0.75  0.15     0.00
## Pearl      0.00   0.00 0.00     0.00 0.00    0.00     0.10  0.75     0.15
## Obsidian   0.00   0.00 0.00     0.00 0.00    0.00     0.00  0.10     0.75
## Diamond    0.00   0.00 0.00     0.00 0.00    0.00     0.00  0.00     0.10
##          Diamond
## Bronze      0.00
## Silver      0.00
## Gold        0.00
## Sapphire    0.00
## Ruby        0.00
## Emerald     0.00
## Amethyst    0.00
## Pearl       0.00
## Obsidian    0.15
## Diamond     0.85&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Knowing some about stochastic processes, we can either implement an initial distribution and employ matrix-vector multiplication over many iterations, or we can find an eigenvector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;findStatDist &amp;lt;- function(P){
  # This function will compute the stationary distribution for a transition matrix
  # Input: row-stochastic matrix P
  # Output: row vector pi_vec
  
  # obtain left-eigenvector for lambda = 1
  x &amp;lt;- eigen(t(P))$vectors[,1] 
  
  # normalize the eigenvector in the one-norm
  pi_vec &amp;lt;- x / sum(x)
  pi_vec #return this vector
}

answer &amp;lt;- as.data.frame(round(100*findStatDist(transition_matrix)))

# R allows user to label rows and columns
rownames(answer) &amp;lt;- leagues
colnames(answer) &amp;lt;- &amp;quot;percentage&amp;quot;

print(answer)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          percentage
## Bronze            3
## Silver            4
## Gold              5
## Sapphire          7
## Ruby              9
## Emerald          11
## Amethyst         13
## Pearl            15
## Obsidian         16
## Diamond          17&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hikes I&#39;ve Completed</title>
      <link>/post/hikes-i-ve-completed/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/hikes-i-ve-completed/</guid>
      <description>&lt;p&gt;Here I will plot some of the hikes I have done as elevation (from sea level) versus distance. I was inspired by &lt;a href=&#34;https://www.reddit.com/r/dataisbeautiful/comments/bwm184/my_first_attempt_at_data_visualization_hikes_ive/&#34;&gt;this Reddit post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today’s code was great practice with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_segment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_label_repel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and using &lt;code&gt;xlim&lt;/code&gt; and &lt;code&gt;ylim&lt;/code&gt; to expand the plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggrepel)
library(tidyverse)
library(readxl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_info &amp;lt;- read_excel(&amp;quot;hikes.xlsx&amp;quot;, sheet = &amp;quot;info&amp;quot;)
df_info %&amp;gt;% print()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 6
##   Region    trail                distance trailhead elevation  peak
##   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Tahoe     Mt Tallac                 5.1      6445      3290  9735
## 2 Tahoe     Flume                     6.4      6980      1420  8400
## 3 Tahoe     Mt Rose                   5.4      8388      2388 10776
## 4 Tahoe     Relay Peak                4.7      8388      1515  9903
## 5 Tahoe     Donner Peak               1.9      6175       882  7057
## 6 Yosemite  Four-Mile                 4.7      4000      3200  7200
## 7 Yosemite  Nevada Falls              4.4      4000      2191  6191
## 8 Yosemite  Upper Yosemite Falls      3.6      4000      3175  7175
## 9 Mt Diablo Waterfall                 4         374      1709  2083&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_info %&amp;gt;%
  mutate(start = 0) %&amp;gt;% #the first x-value for each line segment
  ggplot() +
  geom_segment(aes(x = start, y = trailhead, 
                   xend = distance, yend = peak, 
                   color = Region)) +
  geom_label_repel(aes(x = distance, y = peak, 
                       color = Region,
                       label = trail),
                   box.padding = 1,
                   segment.color = &amp;quot;grey50&amp;quot;,
                   segment.size = 0.5) +
  geom_point(aes(x = distance, y = peak, color = Region), size = 5) +
  labs(title = &amp;quot;Hikes I&amp;#39;ve Completed&amp;quot;,
       subtitle = &amp;quot;Derek Sollberger&amp;quot;,
       caption = &amp;quot;2010 to 2019&amp;quot;,
       x = &amp;quot;One-Way Distance (in miles)&amp;quot;,
       y = &amp;quot;Elevation (in feet)&amp;quot;) +
  theme_minimal() +
  xlim(0,8) +
  ylim(0, 15000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-11-hikes-i-ve-completed_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gender of Frasier Characters</title>
      <link>/post/gender-of-frasier-characters/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/gender-of-frasier-characters/</guid>
      <description>&lt;p&gt;“I am not a man…”&lt;/p&gt;
&lt;p&gt;For work, I need to take a list of names and try to infer the gender. Here I try an R package on the character names in the TV show &lt;em&gt;Fraiser&lt;/em&gt;.&lt;/p&gt;
&lt;div id=&#34;the-gender-package&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The gender package&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;gender&amp;quot;) #works fine

## user needs to download database too
#install_genderdata_package() #did not work (&amp;quot;error reading from connection&amp;quot;)

## as suggested by the bug report at https://github.com/ropensci/drat/issues/6
#install.packages(&amp;quot;devtools&amp;quot;)
#library(devtools)
#devtools::install_github(&amp;quot;ropensci/genderdata&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;trial-run&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Trial Run&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gender)
library(ggpubr)
library(tidyverse)

gender(&amp;quot;frasier&amp;quot;, method = &amp;quot;ssa&amp;quot;, years = c(1940, 1990))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 6
##   name    proportion_male proportion_female gender year_min year_max
##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 frasier               1                 0 male       1940     1990&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cast-of-characters&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Cast of Characters&lt;/h1&gt;
&lt;p&gt;Now I will try to run the &lt;code&gt;gender&lt;/code&gt; function over a list of names (criteria: characters that appeared in at least 6 episodes).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#making a data frame of characters (i.e. the TV show characters)
name &amp;lt;- c(&amp;quot;frasier&amp;quot;, &amp;quot;daphne&amp;quot;, &amp;quot;niles&amp;quot;, &amp;quot;roz&amp;quot;, &amp;quot;martin&amp;quot;, 
          &amp;quot;eddie&amp;quot;, &amp;quot;bulldog&amp;quot;, &amp;quot;kenny&amp;quot;, &amp;quot;gil&amp;quot;, &amp;quot;noel&amp;quot;, 
          &amp;quot;gertrude&amp;quot;, &amp;quot;donny&amp;quot;, &amp;quot;lilith&amp;quot;, &amp;quot;bebe&amp;quot;, &amp;quot;mel&amp;quot;,
          &amp;quot;ronee&amp;quot;, &amp;quot;alice&amp;quot;, &amp;quot;julia&amp;quot;, &amp;quot;frederick&amp;quot;, &amp;quot;simon&amp;quot;,
          &amp;quot;lana&amp;quot;, &amp;quot;sherry&amp;quot;, &amp;quot;kirby&amp;quot;, &amp;quot;charlotte&amp;quot;)
start_year &amp;lt;- 1940
end_year &amp;lt;- 1990
df &amp;lt;- data.frame(name, start_year, end_year, stringsAsFactors=FALSE)
main_cast &amp;lt;- df %&amp;gt;% slice(1:5)

gender_df(df, method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 23 x 6
##    name      proportion_male proportion_female gender year_min year_max
##  * &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 alice              0.0033            0.997  female     1940     1990
##  2 bebe               0                 1      female     1940     1990
##  3 charlotte          0.0026            0.997  female     1940     1990
##  4 daphne             0.0004            1.00   female     1940     1990
##  5 donny              0.996             0.0039 male       1940     1990
##  6 eddie              0.959             0.0414 male       1940     1990
##  7 frasier            1                 0      male       1940     1990
##  8 frederick          0.995             0.0052 male       1940     1990
##  9 gertrude           0.0008            0.999  female     1940     1990
## 10 gil                1                 0      male       1940     1990
## # ... with 13 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sorting-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sorting the Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results &amp;lt;- gender_df(df, method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;))

results_classified &amp;lt;- results %&amp;gt;%
  select(name, proportion_male, gender) %&amp;gt;%
  arrange(desc(proportion_male)) 

ggtexttable(results_classified, rows = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-09-gender-of-frasier-characters_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that “Mel” is a female character in the TV show. The calculations are tougher when the input is a nickname.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# just the main cast
main_cast_classified &amp;lt;- gender_df(main_cast, 
          method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, 
          year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;)) %&amp;gt;%
  select(name, proportion_male, gender) %&amp;gt;%
  arrange(desc(proportion_male))

ggtexttable(main_cast_classified, rows = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-09-gender-of-frasier-characters_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;4/6/2019&lt;/p&gt;
&lt;p&gt;Dear DatASci,&lt;/p&gt;
&lt;p&gt;I write to ask you for your input in developing a group response to these recent events.&lt;/p&gt;
&lt;p&gt;Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here: &lt;a href=&#34;https://www.datacamp.com/community/blog/note-to-our-community&#34; class=&#34;uri&#34;&gt;https://www.datacamp.com/community/blog/note-to-our-community&lt;/a&gt;. To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event. The employee reported the event a few months later, which means that the official statement finally appeared about a full year later. Furthermore, DataCamp only released that statement after a unified complaint from over 100 instructors.&lt;/p&gt;
&lt;p&gt;At this moment, I wish to personally condemn the perpetrator and the leadership at DataCamp over their actions and mismanagement of their company culture.&lt;/p&gt;
&lt;p&gt;It is simple to state that I do not condone the behavior of that employee and the peers. However, it is difficult to reconcile the event with my relationship with the DataCamp company itself. The educational material has allowed me to increase my status at my own workplace, and I have subsequently and frequently recommended DataCamp to those who also wished to improve their technical skills. During the Spring semester and Summer session of 2018, I led efforts to connect our DatASci club and graduate students with the online courses offered by DataCamp.&lt;/p&gt;
&lt;p&gt;In addition to coordinating the use of the education product, I have met several wonderful DataCamp employees and instructors at conferences—all while being unaware of negligent events happening in the background. I might have even met the perpetrator too.&lt;/p&gt;
&lt;p&gt;This news coming out of DataCamp is quite antithetical to the culture of the data science community. Just the day before in the Twitter space, we were praising the data science community on being diverse, inclusive, and very genial to programmers of all skill levels. Unfortunately, the actions made by DataCamp is a step backward and will leave a scar. We can do better.&lt;/p&gt;
&lt;p&gt;The views here presented in this letter are my own and do not reflect the opinion or stances of my colleagues at UC Merced for the simple reason that this letter is the dissemination of the news to my peers in the DatASci graduate student organization and my coworkers at UC Merced. If we need to solidify a view of the DataCamp business and our relationship with this education partner and the values of vendors, I will welcome future conversation about these matters.&lt;/p&gt;
&lt;p&gt;Sincerely,
Derek Sollberger
Continuing Lecturer at UC Merced&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;4/6/2019&lt;/p&gt;

&lt;p&gt;Dear DatASci,&lt;/p&gt;

&lt;p&gt;I write to ask you for your input in developing a group response to these recent events.&lt;/p&gt;

&lt;p&gt;Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here:  &lt;a href=&#34;https://www.datacamp.com/community/blog/note-to-our-community&#34; target=&#34;_blank&#34;&gt;https://www.datacamp.com/community/blog/note-to-our-community&lt;/a&gt;.  To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event.  The employee reported the event a few months later, which means that the official statement finally appeared about a full year later.  Furthermore, DataCamp only released that statement after a unified complaint from over 100 instructors.&lt;/p&gt;

&lt;p&gt;At this moment, I wish to personally condemn the perpetrator and the leadership at DataCamp over their actions and mismanagement of their company culture.&lt;/p&gt;

&lt;p&gt;It is simple to state that I do not condone the behavior of that employee and the peers.  However, it is difficult to reconcile the event with my relationship with the DataCamp company itself.  The educational material has allowed me to increase my status at my own workplace, and I have subsequently and frequently recommended DataCamp to those who also wished to improve their technical skills.  During the Spring semester and Summer session of 2018, I led efforts to connect our DatASci club and graduate students with the online courses offered by DataCamp.&lt;/p&gt;

&lt;p&gt;In addition to coordinating the use of the education product, I have met several wonderful DataCamp employees and instructors at conferences&amp;mdash;all while being unaware of negligent events happening in the background.  I might have even met the perpetrator too.&lt;/p&gt;

&lt;p&gt;This news coming out of DataCamp is quite antithetical to the culture of the data science community.  Just the day before in the Twitter space, we were praising the data science community on being diverse, inclusive, and very genial to programmers of all skill levels.  Unfortunately, the actions made by DataCamp is a step backward and will leave a scar.  We can do better.&lt;/p&gt;

&lt;p&gt;The views here presented in this letter are my own and do not reflect the opinion or stances of my colleagues at UC Merced for the simple reason that this letter is the dissemination of the news to my peers in the DatASci graduate student organization and my coworkers at UC Merced.  If we need to solidify a view of the DataCamp business and our relationship with this education partner and the values of vendors, I will welcome future conversation about these matters.&lt;/p&gt;

&lt;p&gt;Sincerely,
Derek Sollberger
Continuing Lecturer at UC Merced&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random Walks (draft)</title>
      <link>/post/random-walks-draft/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/random-walks-draft/</guid>
      <description>&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;p-12&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;p = 1/2&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# parameters
p &amp;lt;- 0.5
Tmax = 60

# start at the origin
x = 0
y = 0
t = 0
df &amp;lt;- data.frame(x,y,t)

# random walk
for(i in 1:Tmax){
  t &amp;lt;- t + 1
  if(runif(1) &amp;lt; p){
    x &amp;lt;- x - 1
  } else {
    x &amp;lt;- x + 1
  }
  
  # reset process if dot leaves view
  if(abs(x) &amp;gt; 10){
    x &amp;lt;- 0
  }
  
  this_step &amp;lt;- data.frame(x,y,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x,y)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_point(color = &amp;quot;blue&amp;quot;, size = 10) +
  labs(title = &amp;quot;Random Walk (p = 1/2)&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1) +
  shadow_wake(colour = &amp;quot;gray&amp;quot;, wake_length = 0.2, alpha = 0.4)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-2-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;histogram&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;histogram&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 1/2
Tmax = 60
N &amp;lt;- 100 # number of starting &amp;quot;dots&amp;quot;

# start at the origin
x &amp;lt;- rep(0,N)
t &amp;lt;- rep(0,N)
df &amp;lt;- data.frame(x,t)

# random walk
for(i in 1:Tmax){
  for(j in 1:N){
    if(runif(1) &amp;lt; p){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  t &amp;lt;- rep(i,N)
  
  this_step &amp;lt;- data.frame(x,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_bar(fill = &amp;quot;blue&amp;quot;, stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Random Walk (p = 1/2)&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-3-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-random-walks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Multiple Random Walks&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pL &amp;lt;- 3/4
pM &amp;lt;- 1/2
pR &amp;lt;- 7/16
Tmax = 60
N &amp;lt;- 300 # number of starting &amp;quot;dots&amp;quot; (use a number divisible by 3)

# start at the origin
x &amp;lt;- rep(0,N)
t &amp;lt;- rep(0,N)
group &amp;lt;- c(rep(&amp;quot;transient left&amp;quot;, N/3),
           rep(&amp;quot;recurrent&amp;quot;, N/3), 
           rep(&amp;quot;transient right&amp;quot;, N/3))
df &amp;lt;- data.frame(x,t, group)

# random walk
for(i in 1:Tmax){
  for(j in 1:(N/3)){
    if(runif(1) &amp;lt; pL){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  for(j in (N/3+1):(2*N/3)){
    if(runif(1) &amp;lt; pM){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  for(j in (2*N/3+1):N){
    if(runif(1) &amp;lt; pR){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  
  t &amp;lt;- rep(i,N)
  this_step &amp;lt;- data.frame(x,t,group)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_bar(aes(fill = group),
           stat = &amp;quot;count&amp;quot;, position=position_dodge()) +
  labs(title = &amp;quot;Random Walks&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(trans=&amp;#39;log2&amp;#39;, breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-4-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drunkards-walk&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Drunkard’s Walk&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# parameters
Tmax = 60

# start at the origin
x = 0
y = 0
t = 0
df &amp;lt;- data.frame(x,y,t)

# random walk
for(i in 1:Tmax){
  t &amp;lt;- t + 1
  rand_num &amp;lt;- runif(1)
  if(rand_num &amp;lt; 0.25){
    x &amp;lt;- x - 1
  } else if(rand_num &amp;lt; 0.5){
    y &amp;lt;- y - 1
  } else if(rand_num &amp;lt; 0.75){
    x &amp;lt;- x + 1
  } else {
    y &amp;lt;- y + 1
  }
  
  # reset process if dot leaves view
  if(abs(x) &amp;gt; 10){
    x &amp;lt;- 0
    y &amp;lt;- 0
  }
  if(abs(y) &amp;gt; 10){
    x &amp;lt;- 0
    y &amp;lt;- 0
  }
  
  this_step &amp;lt;- data.frame(x,y,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x,y)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_point(color = &amp;quot;blue&amp;quot;, size = 10) +
  labs(title = &amp;quot;Drunkard&amp;#39;s Walk&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = -10:10) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1) +
  shadow_wake(colour = &amp;quot;gray&amp;quot;, wake_length = 0.2, alpha = 0.4)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-5-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Valentine&#39;s Day 2019</title>
      <link>/post/valentine-s-day-2019/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/valentine-s-day-2019/</guid>
      <description>&lt;p&gt;In this short project, I hope to draw a heart through an animation of appearing dots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)
library(&amp;quot;ggforce&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;draw-a-heart&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Draw a Heart&lt;/h1&gt;
&lt;p&gt;Here I will place two circles centered at &lt;span class=&#34;math inline&#34;&gt;\((\pm 1, 1)\)&lt;/span&gt; with the same radius &lt;span class=&#34;math inline&#34;&gt;\(r = \sqrt{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;circles &amp;lt;- data.frame(
  x0 = c(-1,1),
  y0 = rep(1,2),
  r = rep(1, 2)
)

right_pt &amp;lt;- (sqrt(2) + 1) / sqrt(2)
left_pt &amp;lt;-  -1*right_pt
f &amp;lt;- function(x){abs(x) - sqrt(2)}

ggplot(data.frame(x = c(left_pt, right_pt)), aes(x)) +
  coord_fixed() +
  geom_circle(aes(x0 = x0, y0 = y0, r = r), data = circles, inherit.aes = FALSE) +
  stat_function(fun = f, geom = &amp;quot;line&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generate-some-dots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Generate Some Dots&lt;/h1&gt;
&lt;p&gt;Now let’s see if I can get some red dots into a heart shape and green dots outside of the heart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# initialization
N &amp;lt;- 10000
x &amp;lt;- runif(N, -2, 2)
y &amp;lt;- runif(N, -sqrt(2), 2)
colors = c(&amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;, rep(&amp;quot;green&amp;quot;, N-2)) #factor levels set early
state = rep(1, N)

# separate colors
for (i in 4:N){
  if (y[i] &amp;lt; 1){
    if (y[i] &amp;gt; (abs(x[i]) - sqrt(2))){colors[i] = &amp;quot;red&amp;quot;}
  } else {
    if(sqrt((x[i] - 1)^2 + (y[i] - 1)^2) &amp;lt; 1 | 
       sqrt((x[i] + 1)^2 + (y[i] - 1)^2) &amp;lt; 1){colors[i] = &amp;quot;red&amp;quot;}
  }
}

dot_df &amp;lt;- data.frame(x,y, colors, state)
dot_df %&amp;gt;%
  ggplot(aes(x = x, y = y)) +
    coord_fixed() +
    geom_point(color = colors) +
    theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation&lt;/h1&gt;
&lt;p&gt;My initial plan was to have the dots appear one at a time to gradually make the heart, but the data storage was prohibitive. This back up plan was to literally make a new set of dots for each animation frame—and color the dots again!—and it comes with a neat “heartbeat” effect. The render time for the animated GIF was about 2 minutes on my computer.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max_iter &amp;lt;- 14 #number of animation frames

for(j in 1:max_iter){
  x &amp;lt;- runif(N, -2, 2)
  y &amp;lt;- runif(N, -sqrt(2), 2)
  colors = c(&amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;, rep(&amp;quot;green&amp;quot;, N-2)) #factor levels set early
  
  for (i in 4:N){
    if (y[i] &amp;lt; 1){
      if (y[i] &amp;gt; (abs(x[i]) - sqrt(2))){colors[i] = &amp;quot;red&amp;quot;}
    } else {
      if(sqrt((x[i] - 1)^2 + (y[i] - 1)^2) &amp;lt; 1 | 
         sqrt((x[i] + 1)^2 + (y[i] - 1)^2) &amp;lt; 1){colors[i] = &amp;quot;red&amp;quot;}
    }
  }

  state &amp;lt;- rep(j, N)
  this_df &amp;lt;- data.frame(x, y, colors, state)
  #colnames(this_df) &amp;lt;- c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;, &amp;quot;colors&amp;quot;, &amp;quot;state&amp;quot;)
  dot_df &amp;lt;- rbind(dot_df, this_df)
}

dot_df %&amp;gt;%
  ggplot(aes(x = x, y = y)) +
    coord_fixed() +
    geom_point(color = dot_df$colors) +
    labs(title = &amp;quot;Valentine&amp;#39;s Day 2019&amp;quot;,
         subtitle = &amp;quot;Frame: {closest_state}&amp;quot;,
         caption = &amp;quot;Made by Derek Sollberger with the #gganimate package&amp;quot;) +
    theme_minimal() +
    transition_states(state, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-4-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lattice&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;ggstance&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     geom_errorbarh, GeomErrorbarh&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
##  learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
##  learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## The &amp;#39;mosaic&amp;#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;mosaic&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:Matrix&amp;#39;:
## 
##     mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:dplyr&amp;#39;:
## 
##     count, do, tally&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     stat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     max, mean, min, prod, range, sample, sum&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Weather)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$city)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$year)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample-statistics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sample Statistics&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(Weather$high_temp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 71.32421&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(Weather$precip)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(Weather$avg_wind)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.865026&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plotting&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regression&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Regression&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hypothesis-testing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Hypothesis Testing&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;animation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>

&lt;h1 id=&#34;packages&#34;&gt;Packages&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;gganimate&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: lattice
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;ggstance&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
##  learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
##  learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;mosaic&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;data&#34;&gt;Data&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(Weather)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$city)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$year)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;sample-statistics&#34;&gt;Sample Statistics&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mean(Weather$high_temp)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 71.32421
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;median(Weather$precip)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sd(Weather$avg_wind)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 3.865026
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;plotting&#34;&gt;Plotting&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;regression&#34;&gt;Regression&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;hypothesis-testing&#34;&gt;Hypothesis Testing&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;animation&#34;&gt;Animation&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gganatogram and gganimate</title>
      <link>/post/gganatogram-and-gganimate/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gganatogram-and-gganimate/</guid>
      <description>&lt;p&gt;Today I wanted to see if I could create a slideshow of pictures from the &lt;code&gt;gganatogram&lt;/code&gt; package. I wanted to combine them with the &lt;code&gt;gganimate&lt;/code&gt; package, but I have not figured out how to get that to work. (In particular, the &lt;code&gt;gganatogram()&lt;/code&gt; function seems to return a different list layout than &lt;code&gt;ggplot&lt;/code&gt; objects.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganatogram)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggpolypath&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganimate)
library(profvis)

N &amp;lt;- 25 # number of cell samples&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_cell_parts &amp;lt;- nrow(cell_key$cell)

# randomly select a random number of cell parts
part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))

cell_num &amp;lt;- rep(1, length(part_picker))
this_cell &amp;lt;- cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ]
cell_samples &amp;lt;- cbind(this_cell, cell_num)


for(j in 2:N){
  part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))
  cell_num &amp;lt;- rep(j, length(part_picker))
  this_cell &amp;lt;- cbind( cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ], cell_num)
  cell_samples &amp;lt;- rbind(cell_samples, this_cell)
  
  # figure_list[j] &amp;lt;- gganatogram(data = this_cell,
  #           outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) + 
  # theme_void() + 
  # coord_fixed()
  
  png(filename = paste0(j, &amp;quot;.png&amp;quot;))
  
  p &amp;lt;- gganatogram(data = this_cell,
            outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) +
  theme_void() +
  coord_fixed() +
    labs(title = &amp;quot;Sample of Cell Parts&amp;quot;,
         subtitle = paste0(&amp;quot;sample &amp;quot;, j, &amp;quot; of &amp;quot;, N),
         caption = &amp;quot;Bio 18, UC Merced&amp;quot;)
  
  plot(p)
  
  dev.off()
  
  # pause(0.5)
}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/cell_samples.gif&#34; alt=&#34;the picture&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;the picture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;What I ended up doing to produce the picture above was using the &lt;code&gt;png()&lt;/code&gt; and &lt;code&gt;dev.off()&lt;/code&gt; functions to simply output individual pictures into my computer, and then using the &lt;a href=&#34;https://gifmaker.me/&#34;&gt;GIFmaker&lt;/a&gt; website to combine the images into an animated GIF.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curse of Dimensionality</title>
      <link>/post/curse-of-dimensionality/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/curse-of-dimensionality/</guid>
      <description>&lt;p&gt;Today, I hope to present a quick glimpse at the phenomenon called the “Curse of Dimensionality”. For this demonstration, I am simply calculating how much random data stays within two standard deviations (in the Euclidean norm) as we go from one dimension to higher dimensions.&lt;/p&gt;
&lt;div id=&#34;random-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Random Data&lt;/h3&gt;
&lt;p&gt;Here are 10 vectors of 100 random numbers each sampled from the standard normal distribution stored as a matrix …&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;X &amp;lt;- matrix(rnorm(1000), nrow = 100, ncol = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… and as a data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(X)
head(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           X1          X2          X3          X4         X5         X6
## 1  0.0256453  0.28398713  0.67057945  1.09584061  0.3824753  1.4061483
## 2 -0.6176034 -0.40257645  1.13756561 -0.25761710 -0.1488482 -0.1959629
## 3 -0.5235474 -0.68893524 -0.70737197  0.80125649  0.4926702 -1.9662689
## 4 -0.3737617  0.06833939 -0.02937106 -0.60665832  0.2656111  1.2102051
## 5 -0.9429225  0.05136859  1.89588703  0.30911255 -0.2143345 -0.2801334
## 6  0.4515558 -0.31945406 -2.42236506  0.06607036  0.3371893 -0.3928504
##             X7         X8          X9         X10
## 1  0.671601688 -1.9165923 -0.81464512  0.01496321
## 2 -0.005786507  0.2001263  1.59233921  0.53711798
## 3 -0.712297275  0.8505601 -2.58287100  1.04165643
## 4  0.892004771 -1.0628529  0.37102924  0.19434494
## 5 -1.365184181  0.3970239  0.08127754  2.02421067
## 6  0.746595767 -1.1335422 -0.54150029 -0.56877836&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;one-dimension&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;One Dimension&lt;/h3&gt;
&lt;p&gt;For normally distributed data, we expect that about 95% of data falls within two standard deviations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x1 &amp;lt;- X[,1]
within2sd &amp;lt;- abs(x1) &amp;lt;= 2
df1 &amp;lt;- data.frame(x1, within2sd)
mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.96&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 96 percent of the data in the first vector is within two standard deviations of the mean.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
df1 %&amp;gt;% 
  ggplot(aes(x = x1, , y = 0, color = within2sd)) +
  geom_point() + 
  labs(title = &amp;quot;One Dimension of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Two Dimensions&lt;/h3&gt;
&lt;p&gt;However, when we go into two or more dimensions, the colloquial “95%” expection starts to fade. To aid calculations, the &lt;code&gt;row_norms&lt;/code&gt; function in the &lt;code&gt;slam&lt;/code&gt; package uses the Euclidean norm by default. To aid visualization, we will use a helper function (found on Stack Overflow at &lt;a href=&#34;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&lt;/a&gt;) to draw one circle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(slam)
within2sd &amp;lt;- row_norms(X[,1:2]) &amp;lt;= 2

gg_circle &amp;lt;- function(r = 1, xc = 0, yc = 0, color=&amp;quot;black&amp;quot;, fill=NA, ...) {
    x &amp;lt;- xc + r*cos(seq(0, pi, length.out=100))
    ymax &amp;lt;- yc + r*sin(seq(0, pi, length.out=100))
    ymin &amp;lt;- yc + r*sin(seq(0, -pi, length.out=100))
    annotate(&amp;quot;ribbon&amp;quot;, x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}

df2 &amp;lt;- data.frame(X[,1:2], within2sd)
df2 %&amp;gt;%
  ggplot(aes(x = X1, y = X2, color = within2sd)) +
  geom_point() + 
  gg_circle(r = 2, color = &amp;quot;red&amp;quot;) +
  coord_fixed() + 
  labs(title = &amp;quot;Two Dimensions of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.88&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 88 percent of the data in the first 2 vectors is within two standard deviations of the mean.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;higher-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Higher Dimensions&lt;/h3&gt;
&lt;p&gt;Plotting scatterplots in higher dimensions is much more complicated, but we can still perform the &lt;code&gt;norm&lt;/code&gt; calculations pretty quickly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 10 #total number of dimensions
within2sd &amp;lt;- rep(0, N) #initialization

# one dimension
within2sd[1] &amp;lt;- mean(abs(x1) &amp;lt;= 2)

# higher dimensions
for(d in 2:N){
  within2sd[d] &amp;lt;- mean(row_norms(X[,1:d]) &amp;lt;= 2)
}

# plot
dimensions &amp;lt;- 1:N
df &amp;lt;- data.frame(dimensions, within2sd)
df %&amp;gt;%
  ggplot(aes(x = dimensions, y = within2sd)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;blue&amp;quot;) +
  scale_x_continuous(&amp;quot;Dimensions&amp;quot;, breaks = 1:N)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Graduation Rates</title>
      <link>/post/graduation-rates/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/graduation-rates/</guid>
      <description>&lt;p&gt;In this post, I want to run an example of absorbing states in stochastic processes. This example is based on Example 3.29 in &lt;em&gt;Introduction to Stochastic Processes&lt;/em&gt; in R by Robert Dobrow.&lt;/p&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;The data I have assembled is based on &lt;a href=&#34;https://irds.ucmerced.edu/student-data&#34;&gt;IRDS reports&lt;/a&gt; from my own University of California at Merced.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# weights
weights &amp;lt;- c(20, 70, 0, 0, 10, 0, 
       0, 5, 89, 0, 6, 0, 
       0, 0, 3, 94, 3, 0, 
       0, 0, 0, 24, 1, 76, 
       0, 0, 0, 0, 100, 0, 
       0, 0, 0, 0, 0, 100)
sparse_weights &amp;lt;- weights[weights &amp;gt; 0]

# transition matrix (row stochastic)
P &amp;lt;- matrix(weights, nrow = 6, byrow = TRUE)*0.01

# states
rownames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
colnames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
P&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Freshman Sophomore Junior Senior Dropped Graduated
## Freshman       0.2      0.70   0.00   0.00    0.10      0.00
## Sophomore      0.0      0.05   0.89   0.00    0.06      0.00
## Junior         0.0      0.00   0.03   0.94    0.03      0.00
## Senior         0.0      0.00   0.00   0.24    0.01      0.76
## Dropped        0.0      0.00   0.00   0.00    1.00      0.00
## Graduated      0.0      0.00   0.00   0.00    0.00      1.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This formulation assumes that about 10 percent of students drop after the first year, and about 24 percent of seniors continue to take classes into the fifth year or more.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;network-graph&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Network Graph&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)
network &amp;lt;- graph_from_adjacency_matrix(P, mode = &amp;quot;directed&amp;quot;, weighted = TRUE)
plot(network,
     edge.arrow.size = 0.5,
     edge.color = &amp;quot;#D4AE00&amp;quot;,
     edge.label = sparse_weights,
     layout = layout_in_circle(network))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-graduation-rates_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;absorbing-states&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Absorbing States&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# canonical form
Q &amp;lt;- P[1:4, 1:4]
R &amp;lt;- P[1:4, 5:6]

# fundamental matrix (inverse of (I - Q))
fundamental_matrix &amp;lt;- solve(diag(4) - Q)

# absorption
absorption &amp;lt;- fundamental_matrix %*% R
round(100*absorption)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Dropped Graduated
## Freshman       22        79
## Sophomore      10        91
## Junior          4        97
## Senior          1       100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This model predicts that, starting with incoming students, about 79 percent of those students will eventually graduate while about 21 percent will eventually drop from UC Merced enrollment.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My First gganimate Plot</title>
      <link>/post/my-first-gganimate-plot/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-gganimate-plot/</guid>
      <description>&lt;p&gt;Today I finally read a &lt;a href=&#34;https://gganimate.com/articles/gganimate.html&#34;&gt;tutorial&lt;/a&gt; on &lt;code&gt;gganimate&lt;/code&gt;, and here I will build my first example. My hope is to eventually simulate traversal on a directed graph.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(gganimate)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;create-node-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Create Node Data&lt;/h1&gt;
&lt;p&gt;For this example, I will have 3 nodes (located at 3 vertices of a triangle), 100 dots distributed among the nodes, and a new placement over 21 states in time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 100 # number of dots
T &amp;lt;- 20 # number of iterations

node_names &amp;lt;- c(&amp;quot;Node 1&amp;quot;, &amp;quot;Node 2&amp;quot;, &amp;quot;Node 3&amp;quot;)
iter &amp;lt;- rep(0, N)
node &amp;lt;- rep(&amp;quot;Node 1&amp;quot;, N)
x &amp;lt;- 10 + rnorm(N, 0, 2)
y &amp;lt;- 20 + rnorm(N, 0, 2)
states &amp;lt;- data.frame(iter, node, x, y)

for(t in 1:T){
  iter &amp;lt;- rep(t, N)
  node &amp;lt;- sample(node_names, N, replace = TRUE)
  x &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 10 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 20 + rnorm(N, 0, 2),
    TRUE             ~ 30 + rnorm(N, 0, 2)
  )
  y &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 20 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 30 + rnorm(N, 0, 2),
    TRUE             ~ 10 + rnorm(N, 0, 2)
  )
  this_state &amp;lt;- data.frame(iter, node, x, y)
  
  states &amp;lt;- rbind(states, this_state)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-network&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plot Network&lt;/h1&gt;
&lt;p&gt;Having made a new set of data at each state, the main tool is to use &lt;code&gt;transition_states&lt;/code&gt; over the iterations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states %&amp;gt;% 
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = node), alpha = 0.33) +
  labs(title = &amp;quot;Draft of Network Animation&amp;quot;,
       subtitle = &amp;quot;Iteration: {closest_state} of 20&amp;quot;,
       caption = &amp;quot;Simulation of random placement&amp;quot;) +
  theme_minimal() +
  transition_states(iter, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-my-first-gganimate-plot_files/figure-html/unnamed-chunk-3-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SAMPLe talk (Fall 2018)</title>
      <link>/post/sample-talk-fall-2018/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sample-talk-fall-2018/</guid>
      <description>&lt;div id=&#34;ggplot2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot2&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/activelearning&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/activelearning&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/scc&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/scc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SHW3/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SHW3/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;flex-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Flex Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/shw7/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/shw7/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-and-htmlwidgets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny and htmlwidgets&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SAMPLe/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SAMPLe/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Supreme Court Confirmations (1967-present)</title>
      <link>/post/supreme-court-confirmations-1967-present/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/supreme-court-confirmations-1967-present/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Following up on &lt;a href=&#34;https://twitter.com/rachelwellford/status/1048308997219082240&#34;&gt;Rachel Wellford’s tweet&lt;/a&gt; about Senate votes for Supreme Court confirmations, I decided to try to graph the data. Below, I have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;code&gt;ggplot&lt;/code&gt; picture with decent labeling&lt;/li&gt;
&lt;li&gt;a searchable &lt;code&gt;datatable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;plotly&lt;/code&gt; interactive graph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The data came from &lt;a href=&#34;https://www.senate.gov/pagelayout/reference/nominations/Nominations.htm&#34;&gt;Senate.gov&lt;/a&gt;. I chose to focus on 1967 onward because it appeared that voting procedures were slightly different before Thurgood Marshall’s nomination process. Otherwise, I would have chosen to go back to when the Senate first had 100 members.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;DT&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;ggrepel&amp;quot;)
library(&amp;quot;plotly&amp;quot;)
library(&amp;quot;readxl&amp;quot;)
scc &amp;lt;- read_excel(&amp;quot;../../static/Supreme Court confirmations.xlsx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text_repel() +
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-07-supreme-court-confirmations-1967-present_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;datatable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Datatable&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT::datatable(scc)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;,&#34;19&#34;],[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],[&#34;2018-07-10T00:00:00Z&#34;,&#34;2017-02-01T00:00:00Z&#34;,&#34;2010-05-10T00:00:00Z&#34;,&#34;2009-06-01T00:00:00Z&#34;,&#34;2005-11-10T00:00:00Z&#34;,&#34;2005-09-06T00:00:00Z&#34;,&#34;1994-05-17T00:00:00Z&#34;,&#34;1993-07-22T00:00:00Z&#34;,&#34;1991-07-08T00:00:00Z&#34;,&#34;1990-07-25T00:00:00Z&#34;,&#34;1987-11-30T00:00:00Z&#34;,&#34;1986-06-24T00:00:00Z&#34;,&#34;1981-08-19T00:00:00Z&#34;,&#34;1975-11-28T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1970-04-15T00:00:00Z&#34;,&#34;1969-05-23T00:00:00Z&#34;,&#34;1967-06-13T00:00:00Z&#34;],[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],[&#34;2018-10-06T00:00:00Z&#34;,&#34;2017-04-07T00:00:00Z&#34;,&#34;2010-08-05T00:00:00Z&#34;,&#34;2009-08-06T00:00:00Z&#34;,&#34;2006-01-31T00:00:00Z&#34;,&#34;2005-09-29T00:00:00Z&#34;,&#34;1994-07-29T00:00:00Z&#34;,&#34;1993-08-03T00:00:00Z&#34;,&#34;1991-10-15T00:00:00Z&#34;,&#34;1990-10-02T00:00:00Z&#34;,&#34;1998-02-03T00:00:00Z&#34;,&#34;1986-09-17T00:00:00Z&#34;,&#34;1981-09-21T00:00:00Z&#34;,&#34;1975-12-17T00:00:00Z&#34;,&#34;1971-12-10T00:00:00Z&#34;,&#34;1971-12-06T00:00:00Z&#34;,&#34;1970-05-12T00:00:00Z&#34;,&#34;1969-06-09T00:00:00Z&#34;,&#34;1967-08-30T00:00:00Z&#34;],[&#34;Donald Trump&#34;,&#34;Donald Trump&#34;,&#34;Barack Obama&#34;,&#34;Barack Obama&#34;,&#34;George W. Bush&#34;,&#34;George W. Bush&#34;,&#34;Bill Clinton&#34;,&#34;Bill Clinton&#34;,&#34;George H.W. Bush&#34;,&#34;George H.W. Bush&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Gerald Ford&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Lyndon Johnson&#34;],[&#34;Brett&#34;,&#34;Neil&#34;,&#34;Elena&#34;,&#34;Sonia&#34;,&#34;Samuel&#34;,&#34;John&#34;,&#34;Steven&#34;,&#34;Ruth Bader&#34;,&#34;Clarence&#34;,&#34;David&#34;,&#34;Anthony&#34;,&#34;Antonin&#34;,&#34;Sandra Day&#34;,&#34;John Paul&#34;,&#34;William&#34;,&#34;Lewis&#34;,&#34;Harry&#34;,&#34;Warren&#34;,&#34;Thurgood&#34;],[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;Nominee&lt;\/th&gt;\n      &lt;th&gt;Nominated&lt;\/th&gt;\n      &lt;th&gt;Yea&lt;\/th&gt;\n      &lt;th&gt;Nay&lt;\/th&gt;\n      &lt;th&gt;Confirmed&lt;\/th&gt;\n      &lt;th&gt;President&lt;\/th&gt;\n      &lt;th&gt;First&lt;\/th&gt;\n      &lt;th&gt;Last&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[3,4]},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;Here is a slightly interactive graph built with a combination of &lt;code&gt;ggplot&lt;/code&gt; and &lt;code&gt;plotly&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;basemap &amp;lt;- ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text(nudge_x = 5) + # geom_text_repel is not supported by Plotly yet
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))
ggplotly(basemap)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;opacity&#34;:1,&#34;size&#34;:5.66929133858268,&#34;symbol&#34;:&#34;circle&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;}},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[53,50,42,36,47,27,14,8,53,14,5,5,5,5,31,6,5,8,16],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;],&#34;hovertext&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;textfont&#34;:{&#34;size&#34;:14.6645669291339,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;},&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null}],&#34;layout&#34;:{&#34;margin&#34;:{&#34;t&#34;:43.7625570776256,&#34;r&#34;:7.30593607305936,&#34;b&#34;:40.1826484018265,&#34;l&#34;:43.1050228310502},&#34;plot_bgcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;paper_bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;title&#34;:&#34;Supreme Court Confirmations (1967 to present)&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:17.5342465753425},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-13.5,63.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;tickvals&#34;:[0,20,40,60],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;y&#34;,&#34;title&#34;:&#34;Nay votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[36.5,113.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;tickvals&#34;:[40,60,80,100],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;x&#34;,&#34;title&#34;:&#34;Yea votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;shapes&#34;:[{&#34;type&#34;:&#34;rect&#34;,&#34;fillcolor&#34;:null,&#34;line&#34;:{&#34;color&#34;:null,&#34;width&#34;:0,&#34;linetype&#34;:[]},&#34;yref&#34;:&#34;paper&#34;,&#34;xref&#34;:&#34;paper&#34;,&#34;x0&#34;:0,&#34;x1&#34;:1,&#34;y0&#34;:0,&#34;y1&#34;:1}],&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;bordercolor&#34;:&#34;transparent&#34;,&#34;borderwidth&#34;:1.88976377952756,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;barmode&#34;:&#34;relative&#34;},&#34;config&#34;:{&#34;doubleClick&#34;:&#34;reset&#34;,&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;attrs&#34;:{&#34;160cd611208&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{},&#34;type&#34;:&#34;scatter&#34;},&#34;160c1b9a1bd8&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{}}},&#34;cur_data&#34;:&#34;160cd611208&#34;,&#34;visdat&#34;:{&#34;160cd611208&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;160c1b9a1bd8&#34;:[&#34;function (y) &#34;,&#34;x&#34;]},&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Here is a slightly interactive graph with readable labels:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- list(
  family = &amp;quot;sans serif&amp;quot;,
  size = 14,
  color = toRGB(&amp;quot;grey80&amp;quot;))

plot_ly(scc, x = ~Nay, y = ~Yea, text = ~Nominee) %&amp;gt;%
  add_markers() %&amp;gt;%
  add_text(textfont = t, textposition = &amp;quot;top right&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160c25b918be&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160c25b918be&#34;,&#34;attrs&#34;:{&#34;160c25b918be&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;inherit&#34;:true},&#34;160c25b918be.1&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:&#34;top right&#34;,&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:true},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:[&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;],&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Finally, here is a fully interactive graph, but the labels are not revealed until someone hovers their mouse cursor over the points:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_ly(scc, x = ~Nay, y = ~Yea, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;markers&amp;#39;,
        hoverinfo = &amp;#39;text&amp;#39;,
        text = ~paste(&amp;#39;&amp;lt;b&amp;gt;Nominee:&amp;lt;/b&amp;gt; &amp;#39;, Nominee,
                      &amp;#39;&amp;lt;br&amp;gt; Yea: &amp;#39;, Yea,
                      &amp;#39;&amp;lt;br&amp;gt; Nay: &amp;#39;, Nay,
                      &amp;#39;&amp;lt;br&amp;gt; Nominated: &amp;#39;, Nominated,
                      &amp;#39;&amp;lt;br&amp;gt; Confirmed: &amp;#39;, Confirmed,
                      &amp;#39;&amp;lt;br&amp;gt; President: &amp;#39;, President))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160cb0ac56&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160cb0ac56&#34;,&#34;attrs&#34;:{&#34;160cb0ac56&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:[&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;],&#34;text&#34;:[&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Brett Kavanaugh &lt;br&gt; Yea:  50 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  2018-07-10 &lt;br&gt; Confirmed:  2018-10-06 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Neil Gorsuch &lt;br&gt; Yea:  54 &lt;br&gt; Nay:  45 &lt;br&gt; Nominated:  2017-02-01 &lt;br&gt; Confirmed:  2017-04-07 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Elena Kagan &lt;br&gt; Yea:  63 &lt;br&gt; Nay:  37 &lt;br&gt; Nominated:  2010-05-10 &lt;br&gt; Confirmed:  2010-08-05 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sonia Sotomayor &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  31 &lt;br&gt; Nominated:  2009-06-01 &lt;br&gt; Confirmed:  2009-08-06 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Samuel Alito &lt;br&gt; Yea:  58 &lt;br&gt; Nay:  42 &lt;br&gt; Nominated:  2005-11-10 &lt;br&gt; Confirmed:  2006-01-31 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Roberts &lt;br&gt; Yea:  78 &lt;br&gt; Nay:  22 &lt;br&gt; Nominated:  2005-09-06 &lt;br&gt; Confirmed:  2005-09-29 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Steven Breyer &lt;br&gt; Yea:  87 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1994-05-17 &lt;br&gt; Confirmed:  1994-07-29 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Ruth Bader Ginsburg &lt;br&gt; Yea:  96 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1993-07-22 &lt;br&gt; Confirmed:  1993-08-03 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Clarence Thomas &lt;br&gt; Yea:  52 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  1991-07-08 &lt;br&gt; Confirmed:  1991-10-15 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  David Souter &lt;br&gt; Yea:  90 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1990-07-25 &lt;br&gt; Confirmed:  1990-10-02 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Anthony Kennedy &lt;br&gt; Yea:  97 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1987-11-30 &lt;br&gt; Confirmed:  1998-02-03 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Antonin Scalia &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1986-06-24 &lt;br&gt; Confirmed:  1986-09-17 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sandra Day O&#39;Connor &lt;br&gt; Yea:  99 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1981-08-19 &lt;br&gt; Confirmed:  1981-09-21 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Paul Stevens &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1975-11-28 &lt;br&gt; Confirmed:  1975-12-17 &lt;br&gt; President:  Gerald Ford&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  William Rehnquist &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  26 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-10 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Lewis Powell &lt;br&gt; Yea:  89 &lt;br&gt; Nay:  1 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-06 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Harry Blackmun &lt;br&gt; Yea:  94 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1970-04-15 &lt;br&gt; Confirmed:  1970-05-12 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Warren Burger &lt;br&gt; Yea:  73 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1969-05-23 &lt;br&gt; Confirmed:  1969-06-09 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Thurgood Marshall &lt;br&gt; Yea:  69 &lt;br&gt; Nay:  11 &lt;br&gt; Nominated:  1967-06-13 &lt;br&gt; Confirmed:  1967-08-30 &lt;br&gt; President:  Lyndon Johnson&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
