<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Median Data Scientist on The Median Data Scientist</title>
    <link>/</link>
    <description>Recent content in The Median Data Scientist on The Median Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lattice&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;ggstance&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     geom_errorbarh, GeomErrorbarh&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
##  learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
##  learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## The &amp;#39;mosaic&amp;#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;mosaic&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:Matrix&amp;#39;:
## 
##     mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:dplyr&amp;#39;:
## 
##     count, do, tally&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     stat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     max, mean, min, prod, range, sample, sum&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Weather)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$city)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$year)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample-statistics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sample Statistics&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(Weather$high_temp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 71.32421&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(Weather$precip)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(Weather$avg_wind)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.865026&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plotting&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regression&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Regression&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hypothesis-testing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Hypothesis Testing&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;animation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>

&lt;h1 id=&#34;packages&#34;&gt;Packages&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;gganimate&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: lattice
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;ggstance&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
##  learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
##  learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;mosaic&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;data&#34;&gt;Data&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(Weather)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$city)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$year)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;sample-statistics&#34;&gt;Sample Statistics&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mean(Weather$high_temp)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 71.32421
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;median(Weather$precip)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sd(Weather$avg_wind)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] 3.865026
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;plotting&#34;&gt;Plotting&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;regression&#34;&gt;Regression&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;hypothesis-testing&#34;&gt;Hypothesis Testing&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;animation&#34;&gt;Animation&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gganatogram and gganimate</title>
      <link>/post/gganatogram-and-gganimate/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gganatogram-and-gganimate/</guid>
      <description>&lt;p&gt;Today I wanted to see if I could create a slideshow of pictures from the &lt;code&gt;gganatogram&lt;/code&gt; package. I wanted to combine them with the &lt;code&gt;gganimate&lt;/code&gt; package, but I have not figured out how to get that to work. (In particular, the &lt;code&gt;gganatogram()&lt;/code&gt; function seems to return a different list layout than &lt;code&gt;ggplot&lt;/code&gt; objects.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganatogram)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggpolypath&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganimate)
library(profvis)

N &amp;lt;- 25 # number of cell samples&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_cell_parts &amp;lt;- nrow(cell_key$cell)

# randomly select a random number of cell parts
part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))

cell_num &amp;lt;- rep(1, length(part_picker))
this_cell &amp;lt;- cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ]
cell_samples &amp;lt;- cbind(this_cell, cell_num)


for(j in 2:N){
  part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))
  cell_num &amp;lt;- rep(j, length(part_picker))
  this_cell &amp;lt;- cbind( cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ], cell_num)
  cell_samples &amp;lt;- rbind(cell_samples, this_cell)
  
  # figure_list[j] &amp;lt;- gganatogram(data = this_cell,
  #           outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) + 
  # theme_void() + 
  # coord_fixed()
  
  png(filename = paste0(j, &amp;quot;.png&amp;quot;))
  
  p &amp;lt;- gganatogram(data = this_cell,
            outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) +
  theme_void() +
  coord_fixed() +
    labs(title = &amp;quot;Sample of Cell Parts&amp;quot;,
         subtitle = paste0(&amp;quot;sample &amp;quot;, j, &amp;quot; of &amp;quot;, N),
         caption = &amp;quot;Bio 18, UC Merced&amp;quot;)
  
  plot(p)
  
  dev.off()
  
  # pause(0.5)
}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/cell_samples.gif&#34; alt=&#34;the picture&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;the picture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;What I ended up doing to produce the picture above was using the &lt;code&gt;png()&lt;/code&gt; and &lt;code&gt;dev.off()&lt;/code&gt; functions to simply output individual pictures into my computer, and then using the &lt;a href=&#34;https://gifmaker.me/&#34;&gt;GIFmaker&lt;/a&gt; website to combine the images into an animated GIF.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curse of Dimensionality</title>
      <link>/post/curse-of-dimensionality/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/curse-of-dimensionality/</guid>
      <description>&lt;p&gt;Today, I hope to present a quick glimpse at the phenomenon called the “Curse of Dimensionality”. For this demonstration, I am simply calculating how much random data stays within two standard deviations (in the Euclidean norm) as we go from one dimension to higher dimensions.&lt;/p&gt;
&lt;div id=&#34;random-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Random Data&lt;/h3&gt;
&lt;p&gt;Here are 10 vectors of 100 random numbers each sampled from the standard normal distribution stored as a matrix …&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;X &amp;lt;- matrix(rnorm(1000), nrow = 100, ncol = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;… and as a data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(X)
head(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           X1          X2          X3          X4         X5         X6
## 1  0.0256453  0.28398713  0.67057945  1.09584061  0.3824753  1.4061483
## 2 -0.6176034 -0.40257645  1.13756561 -0.25761710 -0.1488482 -0.1959629
## 3 -0.5235474 -0.68893524 -0.70737197  0.80125649  0.4926702 -1.9662689
## 4 -0.3737617  0.06833939 -0.02937106 -0.60665832  0.2656111  1.2102051
## 5 -0.9429225  0.05136859  1.89588703  0.30911255 -0.2143345 -0.2801334
## 6  0.4515558 -0.31945406 -2.42236506  0.06607036  0.3371893 -0.3928504
##             X7         X8          X9         X10
## 1  0.671601688 -1.9165923 -0.81464512  0.01496321
## 2 -0.005786507  0.2001263  1.59233921  0.53711798
## 3 -0.712297275  0.8505601 -2.58287100  1.04165643
## 4  0.892004771 -1.0628529  0.37102924  0.19434494
## 5 -1.365184181  0.3970239  0.08127754  2.02421067
## 6  0.746595767 -1.1335422 -0.54150029 -0.56877836&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;one-dimension&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;One Dimension&lt;/h3&gt;
&lt;p&gt;For normally distributed data, we expect that about 95% of data falls within two standard deviations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x1 &amp;lt;- X[,1]
within2sd &amp;lt;- abs(x1) &amp;lt;= 2
df1 &amp;lt;- data.frame(x1, within2sd)
mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.96&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 96 percent of the data in the first vector is within two standard deviations of the mean.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
df1 %&amp;gt;% 
  ggplot(aes(x = x1, , y = 0, color = within2sd)) +
  geom_point() + 
  labs(title = &amp;quot;One Dimension of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Two Dimensions&lt;/h3&gt;
&lt;p&gt;However, when we go into two or more dimensions, the colloquial “95%” expection starts to fade. To aid calculations, the &lt;code&gt;row_norms&lt;/code&gt; function in the &lt;code&gt;slam&lt;/code&gt; package uses the Euclidean norm by default. To aid visualization, we will use a helper function (found on Stack Overflow at &lt;a href=&#34;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&lt;/a&gt;) to draw one circle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(slam)
within2sd &amp;lt;- row_norms(X[,1:2]) &amp;lt;= 2

gg_circle &amp;lt;- function(r = 1, xc = 0, yc = 0, color=&amp;quot;black&amp;quot;, fill=NA, ...) {
    x &amp;lt;- xc + r*cos(seq(0, pi, length.out=100))
    ymax &amp;lt;- yc + r*sin(seq(0, pi, length.out=100))
    ymin &amp;lt;- yc + r*sin(seq(0, -pi, length.out=100))
    annotate(&amp;quot;ribbon&amp;quot;, x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}

df2 &amp;lt;- data.frame(X[,1:2], within2sd)
df2 %&amp;gt;%
  ggplot(aes(x = X1, y = X2, color = within2sd)) +
  geom_point() + 
  gg_circle(r = 2, color = &amp;quot;red&amp;quot;) +
  coord_fixed() + 
  labs(title = &amp;quot;Two Dimensions of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.88&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 88 percent of the data in the first 2 vectors is within two standard deviations of the mean.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;higher-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Higher Dimensions&lt;/h3&gt;
&lt;p&gt;Plotting scatterplots in higher dimensions is much more complicated, but we can still perform the &lt;code&gt;norm&lt;/code&gt; calculations pretty quickly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 10 #total number of dimensions
within2sd &amp;lt;- rep(0, N) #initialization

# one dimension
within2sd[1] &amp;lt;- mean(abs(x1) &amp;lt;= 2)

# higher dimensions
for(d in 2:N){
  within2sd[d] &amp;lt;- mean(row_norms(X[,1:d]) &amp;lt;= 2)
}

# plot
dimensions &amp;lt;- 1:N
df &amp;lt;- data.frame(dimensions, within2sd)
df %&amp;gt;%
  ggplot(aes(x = dimensions, y = within2sd)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;blue&amp;quot;) +
  scale_x_continuous(&amp;quot;Dimensions&amp;quot;, breaks = 1:N)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Graduation Rates</title>
      <link>/post/graduation-rates/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/graduation-rates/</guid>
      <description>&lt;p&gt;In this post, I want to run an example of absorbing states in stochastic processes. This example is based on Example 3.29 in &lt;em&gt;Introduction to Stochastic Processes&lt;/em&gt; in R by Robert Dobrow.&lt;/p&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;The data I have assembled is based on &lt;a href=&#34;https://irds.ucmerced.edu/student-data&#34;&gt;IRDS reports&lt;/a&gt; from my own University of California at Merced.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# weights
weights &amp;lt;- c(20, 70, 0, 0, 10, 0, 
       0, 5, 89, 0, 6, 0, 
       0, 0, 3, 94, 3, 0, 
       0, 0, 0, 24, 1, 76, 
       0, 0, 0, 0, 100, 0, 
       0, 0, 0, 0, 0, 100)
sparse_weights &amp;lt;- weights[weights &amp;gt; 0]

# transition matrix (row stochastic)
P &amp;lt;- matrix(weights, nrow = 6, byrow = TRUE)*0.01

# states
rownames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
colnames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
P&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Freshman Sophomore Junior Senior Dropped Graduated
## Freshman       0.2      0.70   0.00   0.00    0.10      0.00
## Sophomore      0.0      0.05   0.89   0.00    0.06      0.00
## Junior         0.0      0.00   0.03   0.94    0.03      0.00
## Senior         0.0      0.00   0.00   0.24    0.01      0.76
## Dropped        0.0      0.00   0.00   0.00    1.00      0.00
## Graduated      0.0      0.00   0.00   0.00    0.00      1.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This formulation assumes that about 10 percent of students drop after the first year, and about 24 percent of seniors continue to take classes into the fifth year or more.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;network-graph&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Network Graph&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)
network &amp;lt;- graph_from_adjacency_matrix(P, mode = &amp;quot;directed&amp;quot;, weighted = TRUE)
plot(network,
     edge.arrow.size = 0.5,
     edge.color = &amp;quot;#D4AE00&amp;quot;,
     edge.label = sparse_weights,
     layout = layout_in_circle(network))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-graduation-rates_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;absorbing-states&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Absorbing States&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# canonical form
Q &amp;lt;- P[1:4, 1:4]
R &amp;lt;- P[1:4, 5:6]

# fundamental matrix (inverse of (I - Q))
fundamental_matrix &amp;lt;- solve(diag(4) - Q)

# absorption
absorption &amp;lt;- fundamental_matrix %*% R
round(100*absorption)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Dropped Graduated
## Freshman       22        79
## Sophomore      10        91
## Junior          4        97
## Senior          1       100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This model predicts that, starting with incoming students, about 79 percent of those students will eventually graduate while about 21 percent will eventually drop from UC Merced enrollment.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My First gganimate Plot</title>
      <link>/post/my-first-gganimate-plot/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-gganimate-plot/</guid>
      <description>&lt;p&gt;Today I finally read a &lt;a href=&#34;https://gganimate.com/articles/gganimate.html&#34;&gt;tutorial&lt;/a&gt; on &lt;code&gt;gganimate&lt;/code&gt;, and here I will build my first example. My hope is to eventually simulate traversal on a directed graph.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(gganimate)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;create-node-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Create Node Data&lt;/h1&gt;
&lt;p&gt;For this example, I will have 3 nodes (located at 3 vertices of a triangle), 100 dots distributed among the nodes, and a new placement over 21 states in time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 100 # number of dots
T &amp;lt;- 20 # number of iterations

node_names &amp;lt;- c(&amp;quot;Node 1&amp;quot;, &amp;quot;Node 2&amp;quot;, &amp;quot;Node 3&amp;quot;)
iter &amp;lt;- rep(0, N)
node &amp;lt;- rep(&amp;quot;Node 1&amp;quot;, N)
x &amp;lt;- 10 + rnorm(N, 0, 2)
y &amp;lt;- 20 + rnorm(N, 0, 2)
states &amp;lt;- data.frame(iter, node, x, y)

for(t in 1:T){
  iter &amp;lt;- rep(t, N)
  node &amp;lt;- sample(node_names, N, replace = TRUE)
  x &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 10 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 20 + rnorm(N, 0, 2),
    TRUE             ~ 30 + rnorm(N, 0, 2)
  )
  y &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 20 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 30 + rnorm(N, 0, 2),
    TRUE             ~ 10 + rnorm(N, 0, 2)
  )
  this_state &amp;lt;- data.frame(iter, node, x, y)
  
  states &amp;lt;- rbind(states, this_state)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-network&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plot Network&lt;/h1&gt;
&lt;p&gt;Having made a new set of data at each state, the main tool is to use &lt;code&gt;transition_states&lt;/code&gt; over the iterations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states %&amp;gt;% 
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = node), alpha = 0.33) +
  labs(title = &amp;quot;Draft of Network Animation&amp;quot;,
       subtitle = &amp;quot;Iteration: {closest_state} of 20&amp;quot;,
       caption = &amp;quot;Simulation of random placement&amp;quot;) +
  theme_minimal() +
  transition_states(iter, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-01-08-my-first-gganimate-plot_files/figure-html/unnamed-chunk-3-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SAMPLe talk (Fall 2018)</title>
      <link>/post/sample-talk-fall-2018/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sample-talk-fall-2018/</guid>
      <description>&lt;div id=&#34;ggplot2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot2&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/activelearning&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/activelearning&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/scc&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/scc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SHW3/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SHW3/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;flex-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Flex Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/shw7/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/shw7/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-and-htmlwidgets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny and htmlwidgets&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SAMPLe/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SAMPLe/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Supreme Court Confirmations (1967-present)</title>
      <link>/post/supreme-court-confirmations-1967-present/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/supreme-court-confirmations-1967-present/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Following up on &lt;a href=&#34;https://twitter.com/rachelwellford/status/1048308997219082240&#34;&gt;Rachel Wellford’s tweet&lt;/a&gt; about Senate votes for Supreme Court confirmations, I decided to try to graph the data. Below, I have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;code&gt;ggplot&lt;/code&gt; picture with decent labeling&lt;/li&gt;
&lt;li&gt;a searchable &lt;code&gt;datatable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;plotly&lt;/code&gt; interactive graph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The data came from &lt;a href=&#34;https://www.senate.gov/pagelayout/reference/nominations/Nominations.htm&#34;&gt;Senate.gov&lt;/a&gt;. I chose to focus on 1967 onward because it appeared that voting procedures were slightly different before Thurgood Marshall’s nomination process. Otherwise, I would have chosen to go back to when the Senate first had 100 members.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;DT&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;ggrepel&amp;quot;)
library(&amp;quot;plotly&amp;quot;)
library(&amp;quot;readxl&amp;quot;)
scc &amp;lt;- read_excel(&amp;quot;../../static/Supreme Court confirmations.xlsx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text_repel() +
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-10-07-supreme-court-confirmations-1967-present_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;datatable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Datatable&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT::datatable(scc)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;,&#34;19&#34;],[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],[&#34;2018-07-10T00:00:00Z&#34;,&#34;2017-02-01T00:00:00Z&#34;,&#34;2010-05-10T00:00:00Z&#34;,&#34;2009-06-01T00:00:00Z&#34;,&#34;2005-11-10T00:00:00Z&#34;,&#34;2005-09-06T00:00:00Z&#34;,&#34;1994-05-17T00:00:00Z&#34;,&#34;1993-07-22T00:00:00Z&#34;,&#34;1991-07-08T00:00:00Z&#34;,&#34;1990-07-25T00:00:00Z&#34;,&#34;1987-11-30T00:00:00Z&#34;,&#34;1986-06-24T00:00:00Z&#34;,&#34;1981-08-19T00:00:00Z&#34;,&#34;1975-11-28T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1970-04-15T00:00:00Z&#34;,&#34;1969-05-23T00:00:00Z&#34;,&#34;1967-06-13T00:00:00Z&#34;],[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],[&#34;2018-10-06T00:00:00Z&#34;,&#34;2017-04-07T00:00:00Z&#34;,&#34;2010-08-05T00:00:00Z&#34;,&#34;2009-08-06T00:00:00Z&#34;,&#34;2006-01-31T00:00:00Z&#34;,&#34;2005-09-29T00:00:00Z&#34;,&#34;1994-07-29T00:00:00Z&#34;,&#34;1993-08-03T00:00:00Z&#34;,&#34;1991-10-15T00:00:00Z&#34;,&#34;1990-10-02T00:00:00Z&#34;,&#34;1998-02-03T00:00:00Z&#34;,&#34;1986-09-17T00:00:00Z&#34;,&#34;1981-09-21T00:00:00Z&#34;,&#34;1975-12-17T00:00:00Z&#34;,&#34;1971-12-10T00:00:00Z&#34;,&#34;1971-12-06T00:00:00Z&#34;,&#34;1970-05-12T00:00:00Z&#34;,&#34;1969-06-09T00:00:00Z&#34;,&#34;1967-08-30T00:00:00Z&#34;],[&#34;Donald Trump&#34;,&#34;Donald Trump&#34;,&#34;Barack Obama&#34;,&#34;Barack Obama&#34;,&#34;George W. Bush&#34;,&#34;George W. Bush&#34;,&#34;Bill Clinton&#34;,&#34;Bill Clinton&#34;,&#34;George H.W. Bush&#34;,&#34;George H.W. Bush&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Gerald Ford&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Lyndon Johnson&#34;],[&#34;Brett&#34;,&#34;Neil&#34;,&#34;Elena&#34;,&#34;Sonia&#34;,&#34;Samuel&#34;,&#34;John&#34;,&#34;Steven&#34;,&#34;Ruth Bader&#34;,&#34;Clarence&#34;,&#34;David&#34;,&#34;Anthony&#34;,&#34;Antonin&#34;,&#34;Sandra Day&#34;,&#34;John Paul&#34;,&#34;William&#34;,&#34;Lewis&#34;,&#34;Harry&#34;,&#34;Warren&#34;,&#34;Thurgood&#34;],[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;Nominee&lt;\/th&gt;\n      &lt;th&gt;Nominated&lt;\/th&gt;\n      &lt;th&gt;Yea&lt;\/th&gt;\n      &lt;th&gt;Nay&lt;\/th&gt;\n      &lt;th&gt;Confirmed&lt;\/th&gt;\n      &lt;th&gt;President&lt;\/th&gt;\n      &lt;th&gt;First&lt;\/th&gt;\n      &lt;th&gt;Last&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[3,4]},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;Here is a slightly interactive graph built with a combination of &lt;code&gt;ggplot&lt;/code&gt; and &lt;code&gt;plotly&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;basemap &amp;lt;- ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text(nudge_x = 5) + # geom_text_repel is not supported by Plotly yet
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))
ggplotly(basemap)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;opacity&#34;:1,&#34;size&#34;:5.66929133858268,&#34;symbol&#34;:&#34;circle&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;}},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[53,50,42,36,47,27,14,8,53,14,5,5,5,5,31,6,5,8,16],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;],&#34;hovertext&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;textfont&#34;:{&#34;size&#34;:14.6645669291339,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;},&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null}],&#34;layout&#34;:{&#34;margin&#34;:{&#34;t&#34;:43.7625570776256,&#34;r&#34;:7.30593607305936,&#34;b&#34;:40.1826484018265,&#34;l&#34;:43.1050228310502},&#34;plot_bgcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;paper_bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;title&#34;:&#34;Supreme Court Confirmations (1967 to present)&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:17.5342465753425},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-13.5,63.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;tickvals&#34;:[0,20,40,60],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;y&#34;,&#34;title&#34;:&#34;Nay votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[36.5,113.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;tickvals&#34;:[40,60,80,100],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;x&#34;,&#34;title&#34;:&#34;Yea votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;shapes&#34;:[{&#34;type&#34;:&#34;rect&#34;,&#34;fillcolor&#34;:null,&#34;line&#34;:{&#34;color&#34;:null,&#34;width&#34;:0,&#34;linetype&#34;:[]},&#34;yref&#34;:&#34;paper&#34;,&#34;xref&#34;:&#34;paper&#34;,&#34;x0&#34;:0,&#34;x1&#34;:1,&#34;y0&#34;:0,&#34;y1&#34;:1}],&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;bordercolor&#34;:&#34;transparent&#34;,&#34;borderwidth&#34;:1.88976377952756,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;barmode&#34;:&#34;relative&#34;},&#34;config&#34;:{&#34;doubleClick&#34;:&#34;reset&#34;,&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;attrs&#34;:{&#34;160cd611208&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{},&#34;type&#34;:&#34;scatter&#34;},&#34;160c1b9a1bd8&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{}}},&#34;cur_data&#34;:&#34;160cd611208&#34;,&#34;visdat&#34;:{&#34;160cd611208&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;160c1b9a1bd8&#34;:[&#34;function (y) &#34;,&#34;x&#34;]},&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Here is a slightly interactive graph with readable labels:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- list(
  family = &amp;quot;sans serif&amp;quot;,
  size = 14,
  color = toRGB(&amp;quot;grey80&amp;quot;))

plot_ly(scc, x = ~Nay, y = ~Yea, text = ~Nominee) %&amp;gt;%
  add_markers() %&amp;gt;%
  add_text(textfont = t, textposition = &amp;quot;top right&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160c25b918be&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160c25b918be&#34;,&#34;attrs&#34;:{&#34;160c25b918be&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;inherit&#34;:true},&#34;160c25b918be.1&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:&#34;top right&#34;,&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:true},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:[&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;],&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Finally, here is a fully interactive graph, but the labels are not revealed until someone hovers their mouse cursor over the points:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_ly(scc, x = ~Nay, y = ~Yea, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;markers&amp;#39;,
        hoverinfo = &amp;#39;text&amp;#39;,
        text = ~paste(&amp;#39;&amp;lt;b&amp;gt;Nominee:&amp;lt;/b&amp;gt; &amp;#39;, Nominee,
                      &amp;#39;&amp;lt;br&amp;gt; Yea: &amp;#39;, Yea,
                      &amp;#39;&amp;lt;br&amp;gt; Nay: &amp;#39;, Nay,
                      &amp;#39;&amp;lt;br&amp;gt; Nominated: &amp;#39;, Nominated,
                      &amp;#39;&amp;lt;br&amp;gt; Confirmed: &amp;#39;, Confirmed,
                      &amp;#39;&amp;lt;br&amp;gt; President: &amp;#39;, President))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160cb0ac56&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160cb0ac56&#34;,&#34;attrs&#34;:{&#34;160cb0ac56&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:[&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;],&#34;text&#34;:[&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Brett Kavanaugh &lt;br&gt; Yea:  50 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  2018-07-10 &lt;br&gt; Confirmed:  2018-10-06 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Neil Gorsuch &lt;br&gt; Yea:  54 &lt;br&gt; Nay:  45 &lt;br&gt; Nominated:  2017-02-01 &lt;br&gt; Confirmed:  2017-04-07 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Elena Kagan &lt;br&gt; Yea:  63 &lt;br&gt; Nay:  37 &lt;br&gt; Nominated:  2010-05-10 &lt;br&gt; Confirmed:  2010-08-05 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sonia Sotomayor &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  31 &lt;br&gt; Nominated:  2009-06-01 &lt;br&gt; Confirmed:  2009-08-06 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Samuel Alito &lt;br&gt; Yea:  58 &lt;br&gt; Nay:  42 &lt;br&gt; Nominated:  2005-11-10 &lt;br&gt; Confirmed:  2006-01-31 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Roberts &lt;br&gt; Yea:  78 &lt;br&gt; Nay:  22 &lt;br&gt; Nominated:  2005-09-06 &lt;br&gt; Confirmed:  2005-09-29 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Steven Breyer &lt;br&gt; Yea:  87 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1994-05-17 &lt;br&gt; Confirmed:  1994-07-29 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Ruth Bader Ginsburg &lt;br&gt; Yea:  96 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1993-07-22 &lt;br&gt; Confirmed:  1993-08-03 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Clarence Thomas &lt;br&gt; Yea:  52 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  1991-07-08 &lt;br&gt; Confirmed:  1991-10-15 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  David Souter &lt;br&gt; Yea:  90 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1990-07-25 &lt;br&gt; Confirmed:  1990-10-02 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Anthony Kennedy &lt;br&gt; Yea:  97 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1987-11-30 &lt;br&gt; Confirmed:  1998-02-03 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Antonin Scalia &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1986-06-24 &lt;br&gt; Confirmed:  1986-09-17 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sandra Day O&#39;Connor &lt;br&gt; Yea:  99 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1981-08-19 &lt;br&gt; Confirmed:  1981-09-21 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Paul Stevens &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1975-11-28 &lt;br&gt; Confirmed:  1975-12-17 &lt;br&gt; President:  Gerald Ford&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  William Rehnquist &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  26 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-10 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Lewis Powell &lt;br&gt; Yea:  89 &lt;br&gt; Nay:  1 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-06 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Harry Blackmun &lt;br&gt; Yea:  94 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1970-04-15 &lt;br&gt; Confirmed:  1970-05-12 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Warren Burger &lt;br&gt; Yea:  73 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1969-05-23 &lt;br&gt; Confirmed:  1969-06-09 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Thurgood Marshall &lt;br&gt; Yea:  69 &lt;br&gt; Nay:  11 &lt;br&gt; Nominated:  1967-06-13 &lt;br&gt; Confirmed:  1967-08-30 &lt;br&gt; President:  Lyndon Johnson&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Degree-One Polynomials</title>
      <link>/post/degree-one-polynomials/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/degree-one-polynomials/</guid>
      <description>&lt;div id=&#34;problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The question that one of my teaching assistants posed was “What is the difference between &lt;code&gt;lm(y ~ x)&lt;/code&gt; and &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; for linear regression in R?” That is, it is quickly apparent that those commands produce different results, but for the same intention. Here I will try to explore the underlying difference.&lt;/p&gt;
&lt;p&gt;Disclaimer: I know that the following discussion is incomplete. These are simply notes that I threw together overnight.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exposition&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exposition&lt;/h2&gt;
&lt;p&gt;For a quick study, we can observe that the commands &lt;code&gt;lm(y ~ x)&lt;/code&gt; and &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; produce different results:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 50 ordered pairs of random numbers
x &amp;lt;- runif(50)
y &amp;lt;- runif(50, -3, 3)

# first linear model
lm1 &amp;lt;- lm(y ~ x)

# second linear model
lm2 &amp;lt;- lm(y ~ poly(x, 1))

# found coefficients
lm1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x)
## 
## Coefficients:
## (Intercept)            x  
##    -0.03135     -0.37976&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ poly(x, 1))
## 
## Coefficients:
## (Intercept)   poly(x, 1)  
##     -0.2030      -0.7187&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# plot
plot(x,y, main = &amp;quot;quick scatterplot and linear regression&amp;quot;)
points(mean(x), mean(y), col = &amp;quot;purple&amp;quot;, pch = 8)
abline(lm1, col = &amp;quot;red&amp;quot;, lwd = 3)
abline(lm2, col = &amp;quot;blue&amp;quot;, lwd = 3)
legend(0.5, 2, 
       c(&amp;quot;lm(y ~ x)&amp;quot;, &amp;quot;lm(y ~ poly(x, 1))&amp;quot;),
       col = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;),
       lwd = c(3,3))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-09-30-degree-one-polynomials_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We observe that &lt;code&gt;lm(y ~ x)&lt;/code&gt; goes though the sample means &lt;span class=&#34;math inline&#34;&gt;\((\bar{x}, \bar{y})\)&lt;/span&gt;, while &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; does not. Oddly enough, if we apply a metric such as the coefficient of determination (&lt;span class=&#34;math inline&#34;&gt;\(R^{2}\)&lt;/span&gt;), then the model metrics are the same!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(lm1)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.01688544&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(lm2)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.01688544&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;Some searches on the web point toward how the &lt;code&gt;poly&lt;/code&gt; command uses &lt;a href=&#34;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&#34;&gt;othogonal polynomials&lt;/a&gt; by default. That is, modeling with &lt;span class=&#34;math display&#34;&gt;\[\hat{y} = a + bx + cx^{2} + ...\]&lt;/span&gt; is easy to interpret, higher degree terms will not add much to the predictive ability for our regression models (e.g. &lt;span class=&#34;math inline&#34;&gt;\(x^7\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(x^8\)&lt;/span&gt; are “too close” within some interval). Side note: with the &lt;span class=&#34;math display&#34;&gt;\[{1, x, x^{2}, ...}\]&lt;/span&gt; basis, we learn that the &lt;a href=&#34;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&#34;&gt;Vandermonde matrix&lt;/a&gt; for this basis has a &lt;em&gt;high condition number&lt;/em&gt; and calculations with this route are &lt;em&gt;ill-conditioned&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;coefficients-of-orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Coefficients of Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;There has been a &lt;a href=&#34;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&#34;&gt;lot of discussion&lt;/a&gt; about how &lt;code&gt;poly&lt;/code&gt; works and its internal and recursive algorithm to produce a set of orthogonal polynomials over an interval of values. Here I hope to produce a simple example where we can follow the numbers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 1:5       # mean is 3
y &amp;lt;- 15*x + 18 # line of slope 15 and y-intercept 18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the &lt;code&gt;lm&lt;/code&gt; command quickly recovers the slope and intercept&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_raw &amp;lt;- lm(y ~ x)
lm_raw&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x)
## 
## Coefficients:
## (Intercept)            x  
##          18           15&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the route with orthogonal polynomials yields different coefficients.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_orth &amp;lt;- lm(y ~ poly(x,1))
lm_orth&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ poly(x, 1))
## 
## Coefficients:
## (Intercept)   poly(x, 1)  
##       63.00        47.43&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can &lt;a href=&#34;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&#34;&gt;extract the coefficents&lt;/a&gt; from the orthogonal polynomial route, along with some normalization factors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- attributes(poly(x,1))$coefs$alpha
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n &amp;lt;- attributes(poly(x,1))$coefs$norm2
n&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1  5 10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;building-orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;There are several ways to build orthogonal polynomials, and here I will try out the &lt;a href=&#34;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&#34;&gt;Gram-Schmidt process&lt;/a&gt;. For the base case, &lt;span class=&#34;math display&#34;&gt;\[p_{0} := 1\]&lt;/span&gt; The degree-one term is &lt;span class=&#34;math display&#34;&gt;\[p_{1}(x) = x - \frac{&amp;lt;x, p_{0}&amp;gt;}{&amp;lt;p_{0}, p_{0}&amp;gt;} = x - \frac{\int_{1}^{5} \! x \, dx}{\int_{1}^{5} \, dx} = x - 3\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that &lt;span class=&#34;math inline&#34;&gt;\(p_{1}(x) = x - 3\)&lt;/span&gt; is centered at the mean &lt;span class=&#34;math inline&#34;&gt;\(\bar{x} = 3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Combining the coefficients found from &lt;code&gt;lm(y ~ poly(x,1))&lt;/code&gt; and a normalization factor from above, we get&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{y} = 63 + 47.43 \cdot \frac{x - 3}{\sqrt{10}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which is indeed &lt;span class=&#34;math inline&#34;&gt;\(\hat{y} = 18 + 15x\)&lt;/span&gt; when simplified (up to rounding error, too much hand-waving, and a missing number).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&#34; class=&#34;uri&#34;&gt;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&#34; class=&#34;uri&#34;&gt;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&#34; class=&#34;uri&#34;&gt;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-flexdashboard/</guid>
      <description>&lt;p&gt;Thanks to Dr. Elaine McVey’s course at DataCamp, I feel that I can convert my Data Science course’s lab assignments and slides to &lt;code&gt;flexdashboard&lt;/code&gt;. Today, I converted the first lab assignment. The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.&lt;/p&gt;
&lt;p&gt;To convert my lab, which was previously in an R Markdown document for HTML output, I had to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;explicitly used &lt;code&gt;echo = TRUE&lt;/code&gt; in each code block that should be presented to the student&lt;/li&gt;
&lt;li&gt;used the &lt;code&gt;\huge&lt;/code&gt; LaTeX font size modifier on math-mode elements&lt;/li&gt;
&lt;li&gt;changed the YAML heading to call for &lt;code&gt;output:   flexdashboard::flex_dashboard: orientation: columns&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From there, I also started to arrange the “paragraphs” into separate columns for a nice arrangement.&lt;/p&gt;
&lt;p&gt;&lt;img src = &#34;for%20Twitter.jpg&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-flexdashboard/</guid>
      <description>&lt;p&gt;Thanks to Dr. Elaine McVey&amp;rsquo;s course at DataCamp, I feel that I can convert my Data Science course&amp;rsquo;s lab assignments and slides to &lt;code&gt;flexdashboard&lt;/code&gt;.  Today, I converted the first lab assignment.  The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.&lt;/p&gt;

&lt;p&gt;To convert my lab, which was previously in an R Markdown document for HTML output, I had to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;explicitly used &lt;code&gt;echo = TRUE&lt;/code&gt; in each code block that should be presented to the student&lt;/li&gt;
&lt;li&gt;used the &lt;code&gt;\huge&lt;/code&gt; LaTeX font size modifier on math-mode elements&lt;/li&gt;
&lt;li&gt;changed the YAML heading to call for &lt;code&gt;output:
flexdashboard::flex_dashboard:
orientation: columns&lt;/code&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From there, I also started to arrange the &amp;ldquo;paragraphs&amp;rdquo; into separate columns for a nice arrangement.&lt;/p&gt;

&lt;p&gt;&lt;img src = &#34;for Twitter.jpg&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Semester Schedule Planner</title>
      <link>/post/semester-schedule-planner/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/semester-schedule-planner/</guid>
      <description>&lt;p&gt;As a lecturer at UC Merced, each semester I find myself needing to figure out how many days I get to teach. Furthermore, I like to plan out my lecture schedule down to the days themselves. Here I hope to use some &lt;code&gt;R&lt;/code&gt; code to quickly figure out (say) which days are on Tuesday or Thursday.&lt;/p&gt;
&lt;div id=&#34;construction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Construction&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;R&lt;/code&gt;, the &lt;code&gt;seq&lt;/code&gt; command can be used with dates easily.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semester_dates &amp;lt;- seq(as.Date(&amp;quot;2018-08-22&amp;quot;), as.Date(&amp;quot;2018-12-07&amp;quot;), by = &amp;quot;days&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When working with time data, the &lt;code&gt;xts&lt;/code&gt; package (“extensible time series”) offers convenient tools for manipulating time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;xts&amp;quot;)
xts_dates &amp;lt;- as.xts( rep(NA, length(semester_dates)), order.by = semester_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The convention is that “0” is a Sunday, “1” is a Monday, …, and “5” is a Friday.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;monday-and-wednesday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monday and Wednesday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Mondays &amp;lt;- xts_dates[.indexwday(xts_dates) == 1]
head(Mondays)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-27   NA
## 2018-09-03   NA
## 2018-09-10   NA
## 2018-09-17   NA
## 2018-09-24   NA
## 2018-10-01   NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;MW_dates &amp;lt;- xts_dates[.indexwday(xts_dates) %in% c(1, 3)]
head(MW_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-22   NA
## 2018-08-27   NA
## 2018-08-29   NA
## 2018-09-03   NA
## 2018-09-05   NA
## 2018-09-10   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tuesday-and-thursday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tuesday and Thursday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TuTh_dates &amp;lt;- xts_dates[.indexwday(xts_dates) %in% c(2, 4)]
head(TuTh_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-23   NA
## 2018-08-28   NA
## 2018-08-30   NA
## 2018-09-04   NA
## 2018-09-06   NA
## 2018-09-11   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;friday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Friday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Fri_dates &amp;lt;- xts_dates[.indexwday(xts_dates) == 5]
head(Fri_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-24   NA
## 2018-08-31   NA
## 2018-09-07   NA
## 2018-09-14   NA
## 2018-09-21   NA
## 2018-09-28   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exporting-the-time-series&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exporting the Time Series&lt;/h2&gt;
&lt;p&gt;From here, I might still want to use Excel for data entry in my planning. &lt;code&gt;xts&lt;/code&gt; objects are still &lt;code&gt;zoo&lt;/code&gt; objects.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#write.zoo(Mondays, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
#write.zoo(MW_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
#write.zoo(TuTh_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
write.zoo(Fri_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I have a spreadsheet with the dates already arranged!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s see if I can make posts (mostly) through RStudio</title>
      <link>/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</guid>
      <description>&lt;p&gt;Let’s see if I can make posts (mostly) through RStudio&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trying out GitHub Pages with Blogdown</title>
      <link>/post/trying-out-github-pages-with-blogdown/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-github-pages-with-blogdown/</guid>
      <description>&lt;p&gt;Today I am trying to get a &lt;code&gt;blogdown&lt;/code&gt; site to work with GitHub pages, but I cannot seem to get the posts to link correctly with relative links.&lt;/p&gt;
&lt;p&gt;Well, I hope to delete the pre-included widgets for now since I do not have publications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0800</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
