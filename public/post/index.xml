<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Derek Sollberger&#39;s Blog</title>
    <link>https://dsollberger.netlify.com/post/</link>
      <atom:link href="https://dsollberger.netlify.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 26 Feb 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dsollberger.netlify.com/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://dsollberger.netlify.com/post/</link>
    </image>
    
    <item>
      <title>Harriet Tubman&#39;s Lifespan</title>
      <link>https://dsollberger.netlify.com/post/2022-02-26-harriet-tubman-s-lifespan/</link>
      <pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/2022-02-26-harriet-tubman-s-lifespan/</guid>
      <description>
&lt;script src=&#34;https://dsollberger.netlify.com/post/2022-02-26-harriet-tubman-s-lifespan/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;On Twitter, &lt;span class=&#34;citation&#34;&gt;@Cmastication&lt;/span&gt; said that ‚ÄúJust read this and it made my head hurt. Fact checked it an it‚Äôs correct: ‚Äúwhen Harriet Tubman was born, Thomas Jefferson was alive, and when Harriet Tubman died, Ronald Reagan was alive.‚Äù‚Äú, so I felt like making a quick visualization. We will line up some implied rectangles using &lt;code&gt;geom_jitter&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)
N &amp;lt;- 1000

df &amp;lt;- data.frame(
  year = c(runif(N, 1743, 1826),
              runif(N, 1822, 1913),
              runif(N, 1911, 2004)),
  person = c(rep(&amp;quot;Jefferson&amp;quot;, N), rep(&amp;quot;Tubman&amp;quot;, N), rep(&amp;quot;Reagan&amp;quot;, N)))

df$person &amp;lt;- factor(df$person,
                    levels = c(&amp;quot;Reagan&amp;quot;, &amp;quot;Tubman&amp;quot;, &amp;quot;Jefferson&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df |&amp;gt;
  ggplot() +
  geom_jitter(aes(x = year, y = person, color = person)) +
  labs(title = &amp;quot;Harriet Tubman&amp;#39;s Life&amp;quot;,
       subtitle = &amp;quot;among other historical figures&amp;quot;,
       x = &amp;quot;Year&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;,
        legend.title = element_blank(),
        panel.background = element_blank(),
        panel.grid = element_line(color = &amp;quot;gray50&amp;quot;),
        panel.grid.major.x = element_blank(),
        plot.subtitle = element_text(color = &amp;quot;black&amp;quot;, 
                                     hjust = 0.5, size = 15),
        plot.title = element_text(color = &amp;quot;black&amp;quot;, 
                                  hjust = 0.5, size = 20))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2022-02-26-harriet-tubman-s-lifespan/index.en_files/figure-html/viz-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Payrolls of the Cleveland Baseball Team</title>
      <link>https://dsollberger.netlify.com/post/payrolls-of-the-cleveland-baseball-team/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/payrolls-of-the-cleveland-baseball-team/</guid>
      <description>


&lt;p&gt;Today I made a quick graph of the player payrolls for the Cleveland baseball team to compare their projected payroll after today‚Äôs trade with the Mets (Lindor, Carrasco, etc.) to past seasons.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(past) &lt;a href=&#34;http://www.stevetheump.com/Payrolls.htm&#34; class=&#34;uri&#34;&gt;http://www.stevetheump.com/Payrolls.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2021 projection) &lt;a href=&#34;https://twitter.com/ZackMeisel/status/1347246681520295936&#34; class=&#34;uri&#34;&gt;https://twitter.com/ZackMeisel/status/1347246681520295936&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://teamcolorcodes.com/cleveland-indians-color-codes/&#34; class=&#34;uri&#34;&gt;https://teamcolorcodes.com/cleveland-indians-color-codes/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;years &amp;lt;- 2014:2021
payrolls &amp;lt;- c(82.5, 86.1, 86.3, 124.3, 134.4, 88.7, 37.6, 35)
df &amp;lt;- data.frame(years, payrolls)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = years, y = payrolls, label = payrolls)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;#E31937&amp;quot;, color = &amp;quot;#0C2340&amp;quot;) +
  geom_label() +
  labs(title = &amp;quot;Opening Day Payrolls of the Cleveland Baseball Team&amp;quot;,
       subtitle = &amp;quot;2016: World Series appearance\n2020: pandemic-shortened season\n2021: projected&amp;quot;,
       caption = &amp;quot;Sources:  http://www.stevetheump.com/Payrolls.htm \n https://twitter.com/ZackMeisel/status/1347246681520295936&amp;quot;,
       x = &amp;quot;season&amp;quot;, y = &amp;quot;payroll (in millions of dollars)&amp;quot;) +
  scale_x_continuous(breaks = 2014:2021, 
                     labels = c(&amp;quot;2014&amp;quot;, &amp;quot;2015&amp;quot;, &amp;quot;2016&amp;quot;, &amp;quot;2017&amp;quot;, &amp;quot;2018&amp;quot;, &amp;quot;2019&amp;quot;, &amp;quot;2020&amp;quot;, &amp;quot;2021&amp;quot;)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2021-01-07-payrolls-of-the-cleveland-baseball-team_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://dsollberger.netlify.com/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;üëâ &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üìö &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üí¨ &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üê¶ Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%28%23MadeWithWowchemy%20OR%20%23MadeWithAcademic%29&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;üí° &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;‚¨ÜÔ∏è &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/guide/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ‚ù§Ô∏è&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features ü¶Ñ‚ú®&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://dsollberger.netlify.com/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      <guid>https://dsollberger.netlify.com/post/2020-12-01-r-rmarkdown/</guid>
      <description>
&lt;script src=&#34;https://dsollberger.netlify.com/post/2020-12-01-r-rmarkdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-12-01-r-rmarkdown/index.en_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick meme making in R</title>
      <link>https://dsollberger.netlify.com/post/quick-meme-making-in-r/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/quick-meme-making-in-r/</guid>
      <description>


&lt;p&gt;Source: &lt;a href=&#34;https://blog.ephorie.de/create-bart-simpson-blackboard-memes-with-r&#34;&gt;Create Bart Simpson Blackboard Memes with R&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::opts_chunk$set(echo = TRUE)

library(&amp;quot;meme&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;meme&amp;#39; was built under R version 4.0.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (.Platform$OS.type == &amp;quot;windows&amp;quot;) {
  windowsFonts(Comic = windowsFont(&amp;quot;Comic Sans MS&amp;quot;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bart &amp;lt;- &amp;quot;bart_simpson_chalkboard-5157.gif&amp;quot; # source: http://free-extras.com/images/bart_simpson_chalkboard-5157.htm
text &amp;lt;- paste(rep(&amp;quot;I will not procrastinate \n in grant writing \n by making memes in R instead&amp;quot;, 2), collapse = &amp;quot;\n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meme(bart, text, size = 2, font = &amp;quot;Comic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-11-21-quick-meme-making-in-r_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Covid-19 Cases in the Central Valley</title>
      <link>https://dsollberger.netlify.com/post/covid-19-cases-in-the-central-valley/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/covid-19-cases-in-the-central-valley/</guid>
      <description>


&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://usafacts.org/visualizations/coronavirus-covid-19-spread-map/&#34;&gt;USA Facts&lt;/a&gt; ‚Äî downloaded July 6, 2020&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)
library(&amp;quot;zoo&amp;quot;)

start_date &amp;lt;- &amp;quot;5/28/20&amp;quot;
end_date &amp;lt;- &amp;quot;7/5/20&amp;quot;

county_list &amp;lt;- c(&amp;quot;Santa Clara&amp;quot;, &amp;quot;Stanislaus&amp;quot;, &amp;quot;Calaveras&amp;quot;,
              &amp;quot;San Benito&amp;quot;, &amp;quot;Merced&amp;quot;, &amp;quot;Tuolumne&amp;quot;,
              &amp;quot;Fresno&amp;quot;, &amp;quot;Madera&amp;quot;, &amp;quot;Mariposa&amp;quot;)
lag &amp;lt;- 7 #number of days for rolling average&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#loads files
cases_raw &amp;lt;- read_csv(&amp;quot;covid_confirmed_usafacts.csv&amp;quot;)
populations &amp;lt;- read_csv(&amp;quot;covid_county_population_usafacts.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-wrangling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Wrangling&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;raw_data_merged &amp;lt;- cases_raw %&amp;gt;%
  full_join(populations, by = c(&amp;quot;County Name&amp;quot;, &amp;quot;State&amp;quot;))

# find column positions by date
column_names &amp;lt;- colnames(raw_data_merged)
start_loc &amp;lt;- match(start_date, column_names)
end_loc   &amp;lt;- match(end_date, column_names)

cases_filtered &amp;lt;- cases_raw %&amp;gt;%
  filter(State == &amp;quot;CA&amp;quot;) %&amp;gt;%
  select(&amp;quot;County Name&amp;quot;, all_of(start_loc:end_loc))
  

populations_filtered &amp;lt;- populations %&amp;gt;%
  filter(State == &amp;quot;CA&amp;quot;) %&amp;gt;%
  select(&amp;quot;County Name&amp;quot;, &amp;quot;population&amp;quot;)
  

df_merged &amp;lt;- cases_filtered %&amp;gt;%
  full_join(populations_filtered, 
            by = &amp;quot;County Name&amp;quot;)

df_clean &amp;lt;- df_merged %&amp;gt;%
  
  # avoids unallocated cases and the cruise ship!
  filter(str_detect(`County Name`, &amp;quot;County&amp;quot;)) %&amp;gt;%
  mutate(county = str_replace(`County Name`, &amp;quot; County&amp;quot;, &amp;quot;&amp;quot;)) %&amp;gt;%
  select(-`County Name`)

tall_data &amp;lt;- df_clean %&amp;gt;%
  gather(key = &amp;quot;date&amp;quot;, value = &amp;quot;cases&amp;quot;, -county, -population)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rolling-average&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rolling Average&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# rough draft
draft_data &amp;lt;- tall_data %&amp;gt;%
  group_by(county) %&amp;gt;%
  mutate(new_cases = c(NA, diff(cases))) %&amp;gt;%
  mutate(rolling_average = rollapply(new_cases, 3, mean, fill = NA)) %&amp;gt;%
  filter(county == &amp;quot;Merced&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;final-product&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Final Product&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;requested_region &amp;lt;- tall_data %&amp;gt;%
  filter(county %in% county_list)

# factors to affect facet grid order
requested_region$county &amp;lt;- factor(requested_region$county,
                                  levels = county_list)

# requested_region$date &amp;lt;- as.Date(requested_region$date)
dates_list &amp;lt;- unique(requested_region$date)
dates_weekly &amp;lt;- dates_list[seq(1, length(dates_list), 7)]

requested_region %&amp;gt;%
  group_by(county) %&amp;gt;%
  mutate(new_cases = c(NA, diff(cases))) %&amp;gt;%
  mutate(rolling_average = rollapply(new_cases, lag, 
                                     mean, fill = NA)) %&amp;gt;%
  
  # normalized by population
  mutate(roll_avg_per_cap = 100000*rolling_average / population) %&amp;gt;%
  ggplot(aes(x = date, y = roll_avg_per_cap,
             color = county, group = county)) + 
  geom_line() +
  facet_wrap(. ~ county, nrow = 3) +
  labs(title = &amp;quot;Covid-19 in the Calfornia Central Valley&amp;quot;,
       subtitle = &amp;quot;since Memorial Day, 7-day rolling average, per 100000 people&amp;quot;,
       caption = &amp;quot;Source: USA Facts&amp;quot;,
       x = &amp;quot;date&amp;quot;,
       y = &amp;quot;new cases per capita&amp;quot;) +
  # scale_x_date(date_breaks = &amp;quot;1 week&amp;quot;) +
  scale_x_discrete(breaks = dates_weekly) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = &amp;quot;none&amp;quot;,
        panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-07-07-covid-19-cases-in-the-central-valley_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>TidyTuesday: Roman Emperors</title>
      <link>https://dsollberger.netlify.com/post/tidytuesday-roman-emperors/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/tidytuesday-roman-emperors/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today, for practice with &lt;code&gt;ggplot2&lt;/code&gt;, I wish to replicate &lt;span class=&#34;citation&#34;&gt;@JoshuaFeldman&lt;/span&gt;‚Äôs wonderful #TidyTuesday submission about the dataset of Roman emperors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-08-13&#34;&gt;TidyTuesday‚Äôs Roman Emperor dataset&lt;/a&gt; ‚Äî posted on August 13, 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# TidyTuesday&amp;#39;s given line of code to load the data
emperors &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exploring-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Exploring the Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(emperors)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 68 16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(emperors)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;index&amp;quot;       &amp;quot;name&amp;quot;        &amp;quot;name_full&amp;quot;   &amp;quot;birth&amp;quot;       &amp;quot;death&amp;quot;      
##  [6] &amp;quot;birth_cty&amp;quot;   &amp;quot;birth_prv&amp;quot;   &amp;quot;rise&amp;quot;        &amp;quot;reign_start&amp;quot; &amp;quot;reign_end&amp;quot;  
## [11] &amp;quot;cause&amp;quot;       &amp;quot;killer&amp;quot;      &amp;quot;dynasty&amp;quot;     &amp;quot;era&amp;quot;         &amp;quot;notes&amp;quot;      
## [16] &amp;quot;verif_who&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors %&amp;gt;%
  filter(birth_prv != &amp;quot;Unknown&amp;quot;) %&amp;gt;%
  ggplot(aes(x = birth_prv)) +
  geom_bar(aes(fill = birth_prv), stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Birth Provinces of Roman Emperors&amp;quot;,
       subtitle = &amp;quot;Years 62 BC to 347 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;birth province&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors %&amp;gt;%
  ggplot(aes(x = fct_rev(rise))) +
  geom_bar(aes(fill = rise), stat = &amp;quot;count&amp;quot;) +
  coord_flip() +
  labs(title = &amp;quot;How Roman Emperors Rose to Power&amp;quot;,
       subtitle = &amp;quot;Years 26 BC to 379 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors %&amp;gt;%
  filter(cause != &amp;quot;Unknown&amp;quot;) %&amp;gt;%
  ggplot(aes(x = fct_rev(cause))) +
  geom_bar(aes(fill = cause), stat = &amp;quot;count&amp;quot;) +
  coord_flip() +
  labs(title = &amp;quot;Causes of Death of Roman Emperors&amp;quot;,
       subtitle = &amp;quot;Years 14 AD to 395 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors$dynasty_factor &amp;lt;- factor(emperors$dynasty,
                                  levels = unique(emperors$dynasty))

emperors %&amp;gt;%
  ggplot(aes(x = fct_rev(dynasty_factor))) +
  geom_bar(aes(fill = dynasty_factor), stat = &amp;quot;count&amp;quot;) +
  coord_flip() +
  labs(title = &amp;quot;Roman Dynasties&amp;quot;,
       subtitle = &amp;quot;Years 26 BC to 395 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-wrangling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Wrangling&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#extracting birth and death years
emperors &amp;lt;- emperors %&amp;gt;%
  separate(birth, 
           sep = &amp;quot;-&amp;quot;, 
           into = c(&amp;quot;birth_year&amp;quot;, &amp;quot;birth_month&amp;quot;, &amp;quot;birth_day&amp;quot;),
           remove = FALSE) %&amp;gt;%
  separate(death, 
           sep = &amp;quot;-&amp;quot;, 
           into = c(&amp;quot;death_year&amp;quot;, &amp;quot;death_month&amp;quot;, &amp;quot;death_day&amp;quot;),
           remove = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remove leading zeros and convert from character to numeric
emperors$birth_year  &amp;lt;- as.numeric(emperors$birth_year)
emperors$birth_month &amp;lt;- as.numeric(emperors$birth_month)
emperors$birth_day   &amp;lt;- as.numeric(emperors$birth_day)
emperors$death_year  &amp;lt;- as.numeric(emperors$death_year)
emperors$death_month &amp;lt;- as.numeric(emperors$death_month)
emperors$death_day   &amp;lt;- as.numeric(emperors$death_day)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ensuring order of months for the graphs
emperors$birth_month &amp;lt;- factor(emperors$birth_month,
                               levels = 1:12)
emperors$death_month &amp;lt;- factor(emperors$death_month,
                               levels = 1:12)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors %&amp;gt;%
  filter(!is.na(birth_month)) %&amp;gt;%
  ggplot(aes(x = birth_month)) +
  geom_bar(aes(fill = birth_month), stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Birth Months of Roman Emperors&amp;quot;,
       subtitle = &amp;quot;Years 26 BC to 347 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors %&amp;gt;%
  filter(!is.na(death_month)) %&amp;gt;%
  ggplot(aes(x = death_month)) +
  geom_bar(aes(fill = death_month), stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Death Months of Roman Emperors&amp;quot;,
       subtitle = &amp;quot;Years 14 AD to 395 AD&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;number of emperors&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# only a few year data points were BC, so here is a quick fix for &amp;quot;negative years&amp;quot;
emperors$birth_year[1:3] &amp;lt;- -emperors$birth_year[1:3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;emperors&lt;/code&gt; dataset had some missing values for &lt;code&gt;birth_year&lt;/code&gt;, so here is what I am going to due to &lt;em&gt;impute&lt;/em&gt; the missing values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;calculate the lifespan of the other emperors&lt;/li&gt;
&lt;li&gt;calculate the average lifespan&lt;/li&gt;
&lt;li&gt;if &lt;code&gt;birth_year&lt;/code&gt; is missing, subtract &lt;code&gt;death_year&lt;/code&gt; by the average lifespan&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emperors$lifespan &amp;lt;- emperors$death_year - emperors$birth_year
average_emperor_lifespan &amp;lt;- round(mean(emperors$lifespan, na.rm = TRUE))

for(i in 1:nrow(emperors)){
  if(is.na(emperors$birth_year[i])){
    emperors$birth_year[i] &amp;lt;- emperors$death_year[i] - average_emperor_lifespan
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#later, ggplot had a minor issue with 7 (i.e. greater than 6) causes of death
emperors$cause[emperors$cause == &amp;quot;Unknown&amp;quot;] &amp;lt;- &amp;quot;Natural Causes&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;main-graph&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Main Graph&lt;/h1&gt;
&lt;p&gt;As inspired by &lt;span class=&#34;citation&#34;&gt;@JoshuaFeldman&lt;/span&gt;, the goals for today‚Äôs main graph include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;birth years by province&lt;/li&gt;
&lt;li&gt;death years by cause of death&lt;/li&gt;
&lt;li&gt;reign as a line segment&lt;/li&gt;
&lt;li&gt;segment color by dynasty&lt;/li&gt;
&lt;li&gt;also delineate the two eras&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#extracting reign years
emperors &amp;lt;- emperors %&amp;gt;%
  separate(reign_start, 
           sep = &amp;quot;-&amp;quot;, 
           into = c(&amp;quot;reign_start_year&amp;quot;, &amp;quot;reign_start_month&amp;quot;, &amp;quot;reign_start_day&amp;quot;),
           remove = FALSE) %&amp;gt;%
  separate(reign_end, 
           sep = &amp;quot;-&amp;quot;, 
           into = c(&amp;quot;reign_end_year&amp;quot;, &amp;quot;reign_end_month&amp;quot;, &amp;quot;reign_end_day&amp;quot;),
           remove = FALSE)

emperors$reign_start_year  &amp;lt;- as.numeric(emperors$reign_start_year)
emperors$reign_start_month &amp;lt;- as.numeric(emperors$reign_start_month)
emperors$reign_start_day   &amp;lt;- as.numeric(emperors$reign_start_day)
emperors$reign_end_year    &amp;lt;- as.numeric(emperors$reign_end_year)
emperors$reign_end_month   &amp;lt;- as.numeric(emperors$reign_end_month)
emperors$reign_end_day     &amp;lt;- as.numeric(emperors$reign_end_day)

# only a few year data points were BC, so here is a quick fix for &amp;quot;negative years&amp;quot;
emperors$reign_start_year[1:2] &amp;lt;- -emperors$reign_start_year[1:2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;main_plot &amp;lt;- emperors %&amp;gt;%
  ggplot() +
  geom_segment(aes(x = reign_start_year, y = reorder(name, -reign_start_year), 
                   xend = reign_end_year, yend = reorder(name, -reign_start_year),
                   color = dynasty_factor, group = dynasty_factor),
               data = emperors, size = 2) +
  geom_point(aes(x = birth_year, y = reorder(name, -reign_start_year),
                 group = birth_prv), 
             color = &amp;quot;black&amp;quot;, size = 1) +
  geom_point(aes(x = death_year, y = reorder(name, -reign_start_year),
                 shape = cause, group = cause), 
             color = &amp;quot;black&amp;quot;, size = 3) +
  #geom_label(aes(x = birth_year, y = reorder(name, -reign_start_year), label = name)) +
  scale_color_discrete(name = &amp;quot;Dynasty&amp;quot;) +
  scale_shape_discrete(name = &amp;quot;Cause of Death&amp;quot;) +
  labs(title = &amp;quot;Roman Emperors&amp;quot;,
       subtitle = &amp;quot;Ordered by the start of their reign (small dots are birth years)&amp;quot;,
       caption = &amp;quot;Data Source: TidyTuesday&amp;quot;,
       x = &amp;quot;year&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#plot
main_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-19-tidytuesday-roman-emperors_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Recent Supreme Court Cases</title>
      <link>https://dsollberger.netlify.com/post/recent-supreme-court-cases/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/recent-supreme-court-cases/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Today, I am going to create an overly simplified view of the past 10 Supreme Court decisions for the sake of coding practice with the &lt;code&gt;ggplot&lt;/code&gt; package.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data source: &lt;a href=&#34;https://www.scotusblog.com/&#34;&gt;SCOTUS Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;useful tool: &lt;a href=&#34;https://convert.town/&#34;&gt;Convert Town‚Äôs&lt;/a&gt; ‚ÄúColumn to Comma Separated Values‚Äù function&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;Just in case anyone actually uses my blog post, I will type out the data manually instead of load a separate CSV file so that anyone can copy-and-paste the code for replicability.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# building the small data frame this way simply for replicability
case_number &amp;lt;- 37:46
summary &amp;lt;- strsplit(&amp;quot;arbitration agreements,PR Finance Board,successive habeas,retirement lawsuits,extradition to torture,prisoner lawsuits,forest land use,LGBT job termination,Andrus counsel,DACA&amp;quot;,
                    split = &amp;quot;,&amp;quot;)[[1]]
case_name &amp;lt;- strsplit(&amp;quot;GE Energy Power Conversion France SAS v. Outokumpu Stainless USA LLC,Financial Oversight and Management Bd. for Puerto Rico v. Aurelius Investment LLC,Banister v. Davis,Thole v. U.S. Bank N.A.,Nasrallah v. Barr,Lomax v. Ortiz-Marquez,United States Forest Service v. Cowpasture River Preservation Assn.,Bostock v. Clayton County,Andrus v. Texas,Department of Homeland Security v. Regents of Univ. of Cal&amp;quot;, 
                      split = &amp;quot;,&amp;quot;)[[1]]
argued &amp;lt;- strsplit(&amp;quot;21-Jan-20,15-Oct-19,4-Dec-19,13-Jan-20,2-Mar-20,26-Feb-20,24-Feb-20,8-Oct-19,NA,12-Nov-19&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
decided &amp;lt;- strsplit(&amp;quot;1-Jun-20,1-Jun-20,1-Jun-20,1-Jun-20,1-Jun-20,8-Jun-20,15-Jun-20,15-Jun-20,15-Jun-20,18-Jun-20,&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]

# the votes of the Supreme Court justices
Roberts   &amp;lt;- strsplit(&amp;quot;O,O,O,O,O,O,O,O,O,O&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Thomas    &amp;lt;- strsplit(&amp;quot;O,O,D,O,D,O,O,D,D,D&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Ginsburg  &amp;lt;- strsplit(&amp;quot;O,O,O,D,O,O,O,O,O,O&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Breyer    &amp;lt;- strsplit(&amp;quot;O,O,O,D,O,O,O,O,O,O&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Alito     &amp;lt;- strsplit(&amp;quot;O,O,D,O,D,O,O,D,D,D&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Sotomayor &amp;lt;- strsplit(&amp;quot;O,O,O,D,O,O,D,O,O,O&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Kagan     &amp;lt;- strsplit(&amp;quot;O,O,O,D,O,O,D,O,O,O&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Gorsuch   &amp;lt;- strsplit(&amp;quot;O,O,O,O,O,O,O,O,D,D&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]
Kavanaugh &amp;lt;- strsplit(&amp;quot;O,O,O,O,O,O,O,D,O,D&amp;quot;, split = &amp;quot;,&amp;quot;)[[1]]

raw_data &amp;lt;- data.frame(case_number, summary, case_name, argued, decided,
                       Roberts, Thomas, Ginsburg, Breyer, Alito,
                       Sotomayor, Kagan, Gorsuch, Kavanaugh)

dim(raw_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10 14&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At the moment, we have a data frame with 10 observations (i.e.¬†10 Supreme Court cases) and 14 variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidy-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tidy Data&lt;/h1&gt;
&lt;p&gt;Next, I want to &lt;code&gt;gather&lt;/code&gt; the justices‚Äô votes (‚Äúopinion‚Äù or ‚Äúdissent‚Äù) to make graphing easy.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- raw_data %&amp;gt;%
  gather(key = &amp;quot;Justice&amp;quot;, value = &amp;quot;vote&amp;quot;, 
         c(&amp;quot;Roberts&amp;quot;, &amp;quot;Thomas&amp;quot;, &amp;quot;Ginsburg&amp;quot;, &amp;quot;Breyer&amp;quot;, &amp;quot;Alito&amp;quot;,
           &amp;quot;Sotomayor&amp;quot;, &amp;quot;Kagan&amp;quot;, &amp;quot;Gorsuch&amp;quot;, &amp;quot;Kavanaugh&amp;quot;))
df$vote &amp;lt;- factor(df$vote,
                  levels = c(&amp;quot;O&amp;quot;, &amp;quot;D&amp;quot;))

dim(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 90  7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, we now have a data frame with 90 observations (10 cases times 9 justices) and 7 variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;graph&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Graph&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y_labels &amp;lt;- paste0(case_number, &amp;quot;: &amp;quot;, summary)

df %&amp;gt;%
  ggplot(aes(x = Justice, y = case_number)) +
  geom_point(aes(shape = vote, color = vote), size = 5) +
  
  #http://www.sthda.com/english/wiki/ggplot2-point-shapes
  scale_shape_manual(name = &amp;quot;Vote&amp;quot;, 
                     values = c(16, 4),
                     labels = c(&amp;quot;Court&amp;#39;s Opinion&amp;quot;, &amp;quot;Dissent Statement(s)&amp;quot;)) + 
  scale_color_manual(name = &amp;quot;Vote&amp;quot;, 
                       labels = c(&amp;quot;Court&amp;#39;s Opinion&amp;quot;, &amp;quot;Dissent Statement(s)&amp;quot;),
                       values=c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;)) +
  
  labs(title = &amp;quot;Recent Supreme Court Decisions&amp;quot;,
       subtitle = &amp;quot;Justices supply the court&amp;#39;s &amp;#39;opinion&amp;#39; or &amp;#39;dissent&amp;#39; (Data source: SCOTUS Blog)&amp;quot;,
       caption = &amp;quot;&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_y_continuous(breaks = 37:46,
                     labels = y_labels) + 
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-18-recent-supreme-court-cases_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;captions &amp;lt;- paste0( rev(paste0(case_number, &amp;quot;: &amp;quot;, case_name)), collapse = &amp;quot;\n&amp;quot;)
rev(paste0(case_number, &amp;quot;: &amp;quot;, case_name))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;46: Department of Homeland Security v. Regents of Univ. of Cal&amp;quot;                       
##  [2] &amp;quot;45: Andrus v. Texas&amp;quot;                                                                  
##  [3] &amp;quot;44: Bostock v. Clayton County&amp;quot;                                                        
##  [4] &amp;quot;43: United States Forest Service v. Cowpasture River Preservation Assn.&amp;quot;              
##  [5] &amp;quot;42: Lomax v. Ortiz-Marquez&amp;quot;                                                           
##  [6] &amp;quot;41: Nasrallah v. Barr&amp;quot;                                                                
##  [7] &amp;quot;40: Thole v. U.S. Bank N.A.&amp;quot;                                                          
##  [8] &amp;quot;39: Banister v. Davis&amp;quot;                                                                
##  [9] &amp;quot;38: Financial Oversight and Management Bd. for Puerto Rico v. Aurelius Investment LLC&amp;quot;
## [10] &amp;quot;37: GE Energy Power Conversion France SAS v. Outokumpu Stainless USA LLC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fall Plans for American Universities</title>
      <link>https://dsollberger.netlify.com/post/fall-plans-for-american-universities/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/fall-plans-for-american-universities/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today‚Äôs coding practice is based on the following article and data source (there is literally a ‚ÄúGet the Data‚Äù link):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chronicle.com/article/Here-s-a-List-of-Colleges-/248626&#34;&gt;Here‚Äôs a List of Colleges‚Äô Plans for Reopening in the Fall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;geofacet&amp;quot;)
library(&amp;quot;rvest&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)

# load data
df_raw &amp;lt;- read_csv(&amp;quot;data-w8lLG.csv&amp;quot;)
colnames(df_raw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Institution&amp;quot; &amp;quot;Control&amp;quot;     &amp;quot;State&amp;quot;       &amp;quot;Category&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-wrangling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Wrangling&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter out Excel artifacts (trivial, empty rows)
df &amp;lt;- df_raw %&amp;gt;%
  filter(Institution != &amp;quot;#REF!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#States as factors
states_alphabetically &amp;lt;- sort(unique(df$State))
df$State_factor &amp;lt;- factor(df$State,
                          levels = states_alphabetically)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#extracting text from urls (rvest!!)
df$Category_simple &amp;lt;- rep(NA, nrow(df))
for(i in 1:nrow(df)){
  if(str_detect(df$Category[i], pattern = &amp;quot;&amp;lt;a&amp;quot;)){
    df$Category_simple[i] &amp;lt;- html_text(read_html(df$Category[i]))
  }
  else{
    df$Category_simple[i] &amp;lt;- df$Category[i]
  }
}

table(df$Category_simple)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##                                  Considering a range of scenarios 
##                                1                               69 
##                             Link           Planning for in-person 
##                               11                              456 
##              Planning for online         Proposing a hybrid model 
##                               68                               78 
##                Waiting to decide 
##                               45&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;states-represented&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;States Represented&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = fct_rev(State_factor))) + #note use of reversing the factor order
  geom_bar(stat = &amp;quot;count&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-13-fall-plans-for-american-universities_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;states-map&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;States Map&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;main_plot &amp;lt;- df %&amp;gt;%
  filter(Category_simple %in% 
           c(&amp;quot;Planning for in-person&amp;quot;, &amp;quot;Planning for online&amp;quot;,
             &amp;quot;Proposing a hybrid model&amp;quot;, &amp;quot;Waiting to decide&amp;quot;)) %&amp;gt;%
  ggplot(aes(x = Category_simple)) +
  geom_bar(aes(fill = Category_simple), stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Fall Plans for American Universities&amp;quot;,
       subtitle = &amp;quot;(as of June 12, 2020)&amp;quot;,
       caption = &amp;quot;Data Source: Chronicle of Higher Education&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_discrete(name = &amp;quot;&amp;quot;,
                   labels = c(&amp;quot;in-person&amp;quot;, &amp;quot;online&amp;quot;, &amp;quot;hybrid&amp;quot;, &amp;quot;TBA&amp;quot;)) +
  scale_fill_discrete(name = &amp;quot;Fall Plans&amp;quot;) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  facet_geo(~State, grid = &amp;quot;us_state_grid2&amp;quot;, scales = &amp;quot;free_y&amp;quot;)

main_plot +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-06-13-fall-plans-for-american-universities_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Installation (Summer 2020)</title>
      <link>https://dsollberger.netlify.com/post/r-installation-summer-2020/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/r-installation-summer-2020/</guid>
      <description>


&lt;p&gt;If you are planning to do the &lt;code&gt;R&lt;/code&gt; assignments on your own computer (recommended), then here is a quick outline for obtaining the software.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;There are two separate software programs&lt;/em&gt;. Most people find it easier to use &lt;code&gt;RStudio&lt;/code&gt;. than just &lt;code&gt;R&lt;/code&gt;, but you need to install &lt;code&gt;R&lt;/code&gt; first before installing &lt;code&gt;RStudio&lt;/code&gt; (analogously speaking: you need an cell phone before you can use an cell phone case).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If you have R and RStudio from a previous course, you still need to update to the current versions!&lt;/em&gt; (version 4.0.0 of R and version 1.3.959 of RStudio)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;downloading-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Downloading R&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;The Comprehensive R Archive Network&lt;/a&gt; (CRAN)&lt;/p&gt;
&lt;p&gt;Windows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click ‚ÄúDownload R for Windows‚Äù&lt;/li&gt;
&lt;li&gt;click ‚Äúinstall R for the first time‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúDownload R 4.0.0 for Windows‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúSave File‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click ‚ÄúDownload R for (Mac) OS X‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúR-4.0.0.pkg‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúOk‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installing R&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows: double-check icon for R-4.0.0-win.exe&lt;/li&gt;
&lt;li&gt;Mac: double-click icon for R-4.0.0.pkg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the rest of these steps, it is okay to accept the default selections (but I will outline them here for posterity):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;give computer permission to install&lt;/li&gt;
&lt;li&gt;select language&lt;/li&gt;
&lt;li&gt;agree to GNU General Public License&lt;/li&gt;
&lt;li&gt;select destination location&lt;/li&gt;
&lt;li&gt;select components&lt;/li&gt;
&lt;li&gt;Startup options: select ‚ÄúNo (accept defaults)‚Äù&lt;/li&gt;
&lt;li&gt;select Start Menu Folder&lt;/li&gt;
&lt;li&gt;select Additional Tasks&lt;/li&gt;
&lt;li&gt;(wait a minute or two for installation to take place)&lt;/li&gt;
&lt;li&gt;‚ÄúClick Finish to exit Setup‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;downloading-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Downloading RStudio&lt;/h1&gt;
&lt;p&gt;Go to the &lt;a href=&#34;https://rstudio.com/products/rstudio/download/#download&#34;&gt;RStudio Desktop download page&lt;/a&gt; (i.e.¬†we are using the &lt;em&gt;free&lt;/em&gt;, desktop version of RStudio)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows: click RStudio-1.3.959.exe, click ‚ÄúSave File‚Äù&lt;/li&gt;
&lt;li&gt;Mac: click RStudio-1.3.959.dmg, click ‚ÄúOk‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installing RStudio&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows: double-check icon for RStudio-1.3.959.exe&lt;/li&gt;
&lt;li&gt;Mac: double-click icon for RStudio-1.3.959.dmg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the rest of these steps, it is okay to accept the default selections (but I will outline them here for posterity):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;give computer permission to install&lt;/li&gt;
&lt;li&gt;‚ÄúClick Next to continue‚Äù&lt;/li&gt;
&lt;li&gt;Choose Install Location&lt;/li&gt;
&lt;li&gt;Choose Start Menu Folder&lt;/li&gt;
&lt;li&gt;(wait a minute or two for installation to take place)&lt;/li&gt;
&lt;li&gt;‚ÄúClick Finish to close Setup‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;code-packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Code Packages&lt;/h1&gt;
&lt;p&gt;For R coding, we will often need more code‚Äîcalled code packages. To ease our coding sessions, please run the following lines of code before class (in the lower-left &lt;code&gt;console&lt;/code&gt; area of RStudio, just has to be done once this semester).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_list &amp;lt;- c(&amp;quot;tidyverse&amp;quot;, &amp;quot;readxl&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;titanic&amp;quot;)
install.packages(package_list)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;file-types&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;File Types&lt;/h1&gt;
&lt;p&gt;Also, while we are learning how I want homework assignments to be submitted, it will be useful if you can see file types in your computer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;instructions for &lt;a href=&#34;http://kb.winzip.com/kb/entry/26/&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;instructions for &lt;a href=&#34;https://www.idownloadblog.com/2014/10/29/how-to-show-or-hide-filename-extensions-in-os-x-yosemite/&#34;&gt;Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Geofacet plot vingette</title>
      <link>https://dsollberger.netlify.com/post/geofacet-plot-vingette/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/geofacet-plot-vingette/</guid>
      <description>


&lt;p&gt;Today I am going to try to make a &lt;code&gt;geofacet&lt;/code&gt; graph using the GAI (Global Acceptability Index) data. My goal is to show trends in LGBT acceptance in Europe between the years 2003 and 2017.&lt;/p&gt;
&lt;div id=&#34;sources-and-tools&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sources and tools&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://williamsinstitute.law.ucla.edu/publications/global-acceptance-index-lgbt/&#34;&gt;Social Acceptance of LGBT People in 174 Countries&lt;/a&gt; publication from the UCLA School of Law Williams Institute&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hafen.github.io/geofacet/&#34;&gt;geofacet&lt;/a&gt; &lt;code&gt;R&lt;/code&gt; package&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.downloadexcelfiles.com/wo_en/download-excel-file-list-european-countries-worldwo#.XtKec8B7mUk&#34;&gt;List of European nations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://convert.town/column-to-comma-separated-list&#34;&gt;Convert Town&lt;/a&gt; to convert spreadsheet columns to comma-separated lists&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;geofacet&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;raw_data &amp;lt;- read_csv(&amp;quot;gai.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I did some quick data wrangling in Excel before loading the file. Since the data publication emphasized ranking the countries, the data currently looks like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(raw_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 8
##   country     gai2003 country_1   gai2008 country_2   gai2013 country_3  gai2017
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;  
## 1 Netherlands 6.8     Netherlands 7.2     Iceland     8.4     Iceland    8.9    
## 2 Sweden      6.7     Sweden      7.1     Netherlands 7.9     Netherlan~ 8.6    
## 3 Denmark     6.7     Iceland     7.1     Spain       7.4     Norway     8.2    
## 4 Iceland     6.3     Uruguay     6.6     Canada      7.4     Canada     8.2    
## 5 Switzerland 6.2     Canada      6.5     Sweden      7.4     Spain      8.1    
## 6 Norway      6.2     Denmark     6.5     Norway      7.3     Belgium    7.9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I wish to have more tidy data. My desired format is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;input: year&lt;/li&gt;
&lt;li&gt;output: GAI&lt;/li&gt;
&lt;li&gt;group: country&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# focus on one year at a time
df2003 &amp;lt;- raw_data %&amp;gt;% select(country, gai2003) %&amp;gt;% mutate(year = 2003)
df2008 &amp;lt;- raw_data %&amp;gt;% select(country_1, gai2008) %&amp;gt;% mutate(year = 2008)
df2013 &amp;lt;- raw_data %&amp;gt;% select(country_2, gai2013) %&amp;gt;% mutate(year = 2013)
df2017 &amp;lt;- raw_data %&amp;gt;% select(country_3, gai2017) %&amp;gt;% mutate(year = 2017) 

# use same column names (to prepare to row-bind)
colnames(df2003) &amp;lt;- c(&amp;quot;country&amp;quot;, &amp;quot;gai&amp;quot;, &amp;quot;year&amp;quot;)
colnames(df2008) &amp;lt;- c(&amp;quot;country&amp;quot;, &amp;quot;gai&amp;quot;, &amp;quot;year&amp;quot;)
colnames(df2013) &amp;lt;- c(&amp;quot;country&amp;quot;, &amp;quot;gai&amp;quot;, &amp;quot;year&amp;quot;)
colnames(df2017) &amp;lt;- c(&amp;quot;country&amp;quot;, &amp;quot;gai&amp;quot;, &amp;quot;year&amp;quot;)

# row bind the data frames into one data frame
all_data &amp;lt;- rbind(df2003, df2008, df2013, df2017)

# convert column from character to numeric type
all_data$gai &amp;lt;- as.numeric(all_data$gai)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: NAs introduced by coercion&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# take a look at what we have at the moment
head(all_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   country       gai  year
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Netherlands   6.8  2003
## 2 Sweden        6.7  2003
## 3 Denmark       6.7  2003
## 4 Iceland       6.3  2003
## 5 Switzerland   6.2  2003
## 6 Norway        6.2  2003&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;map&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Map&lt;/h1&gt;
&lt;p&gt;Before we try out the &lt;code&gt;geofacet&lt;/code&gt; tech, let us make sure that this data is amenable to &lt;code&gt;ggplot&lt;/code&gt; in the first place&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_data %&amp;gt;%
  ggplot(aes(x = year, y = gai, color = country, group = country)) +
  geom_line() +
  labs(title = &amp;quot;Acceptance of LGBT People&amp;quot;,
       subtitle = &amp;quot;by country&amp;quot;,
       caption = &amp;quot;Data Source: Williams Institute at UCLA&amp;quot;,
       x = &amp;quot;Year&amp;quot;,
       y = &amp;quot;Global Acceptability Index&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-30-geofacet-plot-vingette_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can imagine, keeping track of and labeling 176 countries is quite cumbersome.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;europe&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Europe&lt;/h1&gt;
&lt;p&gt;Instead, today we will focus on the European nations and use the &lt;code&gt;geofacet&lt;/code&gt; package to clearly label the countries (with an implied geography map!)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;European_nations_text &amp;lt;- &amp;quot;Russia,Germany,France,United Kingdom,Italy,Spain,Ukraine,Poland,Romania,Netherlands,Belgium,Greece,Portugal,Czech Republic,Hungary,Sweden,Belarus,Austria,Switzerland,Bulgaria,Serbia,Denmark,Finland,Slovakia,Norway,Ireland,Croatia,Bosnia and Herzegovina,Moldova,Lithuania,Albania,Macedonia,Slovenia,Latvia,Kosovo,Estonia,Montenegro,Luxembourg,Malta,Iceland,Jersey (UK),Isle of Man (UK),Andorra,Guernsey (UK),Faroe Islands (Denmark),Liechtenstein,Monaco,San Marino,Gibraltar (UK),Aland Islands (Finland),Svalbard and Jan Mayen (Norway),Vatican City&amp;quot;
European_nations_list &amp;lt;- str_split(European_nations_text,&amp;quot;,&amp;quot;)[[1]]

# an unfortunate &amp;#39;hack&amp;#39;
all_data$country[all_data$country == &amp;quot;Great Britain&amp;quot;] &amp;lt;- &amp;quot;United Kingdom&amp;quot;

# main plot
all_data %&amp;gt;%
  filter(country %in% European_nations_list) %&amp;gt;%
  ggplot(aes(x = year, y = gai, color = country, group = country)) +
  geom_line() +
  geom_point(size = 2) +
  facet_geo(~ country, grid = &amp;quot;eu_grid1&amp;quot;) +
  labs(title = &amp;quot;Social Acceptance of LGBT People in Europe&amp;quot;,
       subtitle = &amp;quot;Global Acceptance Index&amp;quot;,
       caption = &amp;quot;Data Source: UCLA Williams Institute&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = c(2003, 2008, 2013, 2017),
                   labels = c(&amp;quot;2003&amp;quot;, &amp;quot;2008&amp;quot;, &amp;quot;2013&amp;quot;, &amp;quot;2017&amp;quot;)) +
  scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10),
                   labels = c(&amp;quot;0&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;10&amp;quot;)) +
  theme(axis.text.x = element_text(angle = 90),
        legend.position = &amp;quot;none&amp;quot;,
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;),
        panel.border = element_rect(color = &amp;quot;black&amp;quot;, fill = NA))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-30-geofacet-plot-vingette_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_data %&amp;gt;%
  filter(country %in% European_nations_list) %&amp;gt;%
  ggplot(aes(x = year, y = gai, color = country, group = country)) +
  geom_line() +
  geom_point(size = 4) +
  facet_geo(~ country, grid = &amp;quot;eu_grid1&amp;quot;) +
  labs(title = &amp;quot;Social Acceptance of LGBT People in Europe&amp;quot;,
       subtitle = &amp;quot;Global Acceptance Index&amp;quot;,
       caption = &amp;quot;Data Source: UCLA Williams Institute&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = c(2003, 2008, 2013, 2017),
                   labels = c(&amp;quot;2003&amp;quot;, &amp;quot;2008&amp;quot;, &amp;quot;2013&amp;quot;, &amp;quot;2017&amp;quot;)) +
  scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10),
                   labels = c(&amp;quot;0&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;10&amp;quot;)) +
  theme(axis.text.x = element_text(angle = 90),
        legend.position = &amp;quot;none&amp;quot;,
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;),
        panel.border = element_rect(color = &amp;quot;black&amp;quot;, fill = NA),
        panel.grid = element_line(color = &amp;quot;gray80&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Some values in the specified facet_geo column &amp;#39;country&amp;#39; do not match
##   the &amp;#39;name&amp;#39; column of the specified grid and will be removed: Iceland,
##   Switzerland, Norway, Andorra, Serbia, Macedonia, Russia, Belarus,
##   Ukraine, Montenegro, Moldova, Albania, Kosovo&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-30-geofacet-plot-vingette_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 4.0.0 (2020-04-24)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 18362)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] forcats_0.5.0   stringr_1.4.0   dplyr_0.8.5     purrr_0.3.4    
##  [5] readr_1.3.1     tidyr_1.0.2     tibble_3.0.1    ggplot2_3.3.0  
##  [9] tidyverse_1.3.0 geofacet_0.2.0 
## 
## loaded via a namespace (and not attached):
##  [1] ggrepel_0.8.2       Rcpp_1.0.4.6        rnaturalearth_0.1.0
##  [4] lubridate_1.7.8     lattice_0.20-41     png_0.1-7          
##  [7] class_7.3-16        utf8_1.1.4          assertthat_0.2.1   
## [10] digest_0.6.25       R6_2.4.1            cellranger_1.1.0   
## [13] backports_1.1.6     reprex_0.3.0        evaluate_0.14      
## [16] e1071_1.7-3         httr_1.4.1          blogdown_0.18      
## [19] pillar_1.4.4        rlang_0.4.5         geogrid_0.1.1      
## [22] readxl_1.3.1        rstudioapi_0.11     rmarkdown_2.1      
## [25] labeling_0.3        munsell_0.5.0       broom_0.5.6        
## [28] compiler_4.0.0      modelr_0.1.7        xfun_0.13          
## [31] pkgconfig_2.0.3     imguR_1.0.3         rgeos_0.5-3        
## [34] htmltools_0.4.0     tidyselect_1.0.0    gridExtra_2.3      
## [37] bookdown_0.18       fansi_0.4.1         withr_2.2.0        
## [40] crayon_1.3.4        dbplyr_1.4.3        sf_0.9-3           
## [43] grid_4.0.0          nlme_3.1-147        jsonlite_1.6.1     
## [46] gtable_0.3.0        lifecycle_0.2.0     DBI_1.1.0          
## [49] magrittr_1.5        units_0.6-6         scales_1.1.0       
## [52] KernSmooth_2.23-16  cli_2.0.2           stringi_1.4.6      
## [55] farver_2.0.3        fs_1.4.1            sp_1.4-1           
## [58] xml2_1.3.2          ellipsis_0.3.0      generics_0.0.2     
## [61] vctrs_0.2.4         tools_4.0.0         glue_1.4.0         
## [64] hms_0.5.3           jpeg_0.1-8.1        yaml_2.2.1         
## [67] colorspace_1.4-1    rvest_0.3.5         classInt_0.4-3     
## [70] knitr_1.28          haven_2.2.0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mapping Social Acceptance of LGBT People</title>
      <link>https://dsollberger.netlify.com/post/mapping-social-acceptance-of-lgbt-people/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/mapping-social-acceptance-of-lgbt-people/</guid>
      <description>


&lt;p&gt;Inspired by this morning‚Äôs meeting of the Bisexual Research Group, I am going to draft a quick map of LGBT acceptance in Africa.&lt;/p&gt;
&lt;div id=&#34;sources-and-tools&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sources and tools&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://williamsinstitute.law.ucla.edu/publications/global-acceptance-index-lgbt/&#34;&gt;Social Acceptance of LGBT People in 174 Countries&lt;/a&gt; publication from the UCLA School of Law Williams Institute&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.worldometers.info/geography/how-many-countries-in-africa/&#34;&gt;List of African nations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://simplypdf.com/Excel&#34;&gt;SimplyPDF&lt;/a&gt; to extract table of data from a PDF document&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://convert.town/column-to-comma-separated-list&#34;&gt;Convert Town&lt;/a&gt; to convert spreadsheet columns to comma-separated lists&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rank &amp;lt;- 1:174
countries_text &amp;lt;- &amp;quot;Iceland,Netherlands,Norway,Canada,Spain,Belgium,Ireland,Sweden,Denmark,Nepal,Great Britain,Luxembourg,Malta,Uruguay,New Zealand,Germany,Finland,Switzerland,Puerto Rico,Australia,United States,France,Argentina,Austria,Brazil,Cape Verde,Chile,Philippines,Hong Kong,Italy,Portugal,Mexico,South Africa,Costa Rica,Cuba,Czech Republic,Colombia,Slovenia,Venezuela,Taiwan,Ecuador,Nicaragua,Bahrain,Bolivia,Israel,Suriname,Laos,Syria,Panama,El Salvador,Mauritius,Northern Cyprus,Peru,Croatia,Dominican Republic,Namibia,Honduras,Paraguay,Cyprus,Thailand,Slovakia,Greece,Mozambique,Andorra,Hungary,Japan,South Korea,Estonia,Myanmar,Poland,Bangladesh,Barbados,Cambodia,Guatemala,Singapore,Sao Tome and Principe,Trinidad and Tobago,Guyana,Bulgaria,Vietnam,India,Botswana,Grenada,Latvia,Turkey,Bahamas,Belize,Saint Kitts and Nevis,Malaysia,Serbia,Algeria,Lithuania,Jamaica,Dominica,Romania,Bhutan,Lebanon,Saint Lucia,Swaziland,Lesotho,China,Antigua and Barbuda,Angola,Yemen,Benin,Haiti,Uzbekistan,Libya,Montenegro,Tunisia,Saint Vincent and the Grenadines,Kuwait,Uganda,Jordan,Albania,Belarus,Gambia,Morocco,Kenya,Russia,Democratic Republic of the Congo,Ukraine,Qatar,Palestine,Madagascar,Tanzania,Cote d&amp;#39;Ivoire,Republic of the Congo,Iraq,Gabon,Kazakhstan,Sudan,Bosnia Herzegovina,Sierra Leone,Macedonia,Comoros,Saudi Arabia,Burkina Faso,Togo,Kyrgyzstan,Ghana,Mongolia,Rwanda,Kosovo,Cameroon,Nigeria,Zambia,Central African Republic,Zimbabwe,Indonesia,Djibouti,Chad,Niger,Mali,Guinea,Afghanistan,Liberia,Moldova,Georgia,Burundi,South Sudan,Mauritania,Sri Lanka,Iran,Pakistan,Malawi,Nagorno- Karabakh,Armenia,Egypt,Ethiopia,Somaliland,Senegal,Azerbaijan,Tajikistan&amp;quot;
country &amp;lt;- str_split(countries_text,&amp;quot;,&amp;quot;)[[1]]
GAI_text &amp;lt;- &amp;quot;8.9,8.6,8.2,8.2,8.1,7.9,7.9,7.9,7.9,7.8,7.7,7.7,7.6,7.6,7.5,7.4,7.4,7.4,7.4,7.3,7.2,7.1,6.9,6.8,6.8,6.8,6.7,6.6,6.5,6.4,6.4,6.3,6.2,6.1,6.1,6,5.9,5.9,5.7,5.7,5.6,5.6,5.5,5.4,5.4,5.4,5.4,5.4,5.3,5.3,5.3,5.3,5.3,5.2,5.2,5.2,5.2,5.2,5.1,5.1,5,5,5,4.9,4.9,4.9,4.9,4.9,4.8,4.8,4.8,4.8,4.8,4.8,4.8,4.8,4.7,4.7,4.6,4.6,4.5,4.5,4.5,4.4,4.4,4.4,4.3,4.2,4.2,4.2,4.1,4.1,4.1,4.1,4.1,4.1,4.1,4.1,4,3.9,3.9,3.9,3.7,3.7,3.6,3.6,3.6,3.6,3.6,3.5,3.5,3.5,3.5,3.5,3.5,3.5,3.4,3.4,3.4,3.4,3.4,3.3,3.2,3.2,3.2,3.2,3.1,3.1,3.1,3.1,3.1,3.1,3.1,3.1,3,3,3,3,3,3,3,3,2.9,2.9,2.9,2.9,2.9,2.8,2.8,2.8,2.8,2.8,2.8,2.7,2.7,2.7,2.7,2.7,2.7,2.7,2.6,2.6,2.4,2.4,2.4,2.3,2.2,2.2,2.2,2.1,1.8,1.7,1.7,1.6&amp;quot;
GAI &amp;lt;- as.numeric(str_split(GAI_text,&amp;quot;,&amp;quot;)[[1]])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;GAI_data &amp;lt;- data.frame(rank, country, GAI)
head(GAI_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   rank     country GAI
## 1    1     Iceland 8.9
## 2    2 Netherlands 8.6
## 3    3      Norway 8.2
## 4    4      Canada 8.2
## 5    5       Spain 8.1
## 6    6     Belgium 7.9&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;map&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Map&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;countries_map &amp;lt;- map_data(&amp;quot;world&amp;quot;)
choropleth_data &amp;lt;- left_join(countries_map, GAI_data, by = c(&amp;quot;region&amp;quot; = &amp;quot;country&amp;quot;))
choropleth_data %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
  geom_polygon(aes(fill = GAI), color = &amp;quot;black&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;C&amp;quot;) +
  labs(title = &amp;quot;Social Acceptance of LGBT People&amp;quot;,
       subtitle = &amp;quot;Global Acceptance Index&amp;quot;,
       caption = &amp;quot;Data Source: UCLA Williams School&amp;quot;,
       fill = &amp;quot;GAI&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-26-mapping-social-acceptance-of-lgbt-people_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;africa&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Africa&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;African_nations_text &amp;lt;- &amp;quot;Nigeria,Ethiopia,Egypt,DR Congo,Tanzania,South Africa,Kenya,Uganda,Algeria,Sudan,Morocco,Angola,Mozambique,Ghana,Madagascar,Cameroon,C√¥te d&amp;#39;Ivoire,Niger,Burkina Faso,Mali,Malawi,Zambia,Senegal,Chad,Somalia,Zimbabwe,Guinea,Rwanda,Benin,Burundi,Tunisia,South Sudan,Togo,Sierra Leone,Libya,Congo,Liberia,Central African Republic,Mauritania,Eritrea,Namibia,Gambia,Botswana,Gabon,Lesotho,Guinea-Bissau,Equatorial Guinea,Mauritius,Eswatini,Djibouti,Comoros,Cabo Verde,Sao Tome &amp;amp; Principe,Seychelles&amp;quot;
African_nations_list &amp;lt;- str_split(African_nations_text,&amp;quot;,&amp;quot;)[[1]]

choropleth_data %&amp;gt;%
  filter(region %in% African_nations_list) %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
  geom_polygon(aes(fill = GAI), color = &amp;quot;black&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;C&amp;quot;) +
  labs(title = &amp;quot;Social Acceptance of LGBT People&amp;quot;,
       subtitle = &amp;quot;Global Acceptance Index&amp;quot;,
       caption = &amp;quot;Data Source: UCLA Williams School&amp;quot;,
       fill = &amp;quot;GAI&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-26-mapping-social-acceptance-of-lgbt-people_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Vote by Mail data</title>
      <link>https://dsollberger.netlify.com/post/vote-by-mail-data/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/vote-by-mail-data/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;dplyr&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;Today I am going to try to make a choropleth (map + data) of the percentage of registered voters that sent in ballots for the 2018 elections in the USA. I gathered the data from and by the following sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fivethirtyeight.com/features/few-states-are-prepared-to-switch-to-voting-by-mail-that-could-make-for-a-messy-election/&#34;&gt;Few States Are Prepared To Switch To Voting By Mail. That Could Make For A Messy Election&lt;/a&gt; ‚Äî FiveThirtyEight artcle from April 27, 2020&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knowledgelink.upenn.edu/admin/guides/HowToCommaList-101612.pdf&#34;&gt;How to Create a Comma Separated List from an Excel Column&lt;/a&gt; ‚Äî from University of Pennsylvania&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states &amp;lt;- tolower( sort(c(state.name, &amp;quot;District of Columbia&amp;quot;)))
voted2018 &amp;lt;- c(2,5,62,1,54,88,4,3,2,25,4,38,9,6,17,16,10,1,2,18,4,2,15,21,3,6,63,15,6,5,10,36,3,2,NA,13,4,104,3,4,2,15,1,4,89,6,2,92,1,5,22)
vote_data &amp;lt;- data.frame(states, voted2018)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The 538 article‚Äôs table caption included the following notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‚ÄúIt‚Äôs not possible to calculate these numbers for North Dakota, as it doesn‚Äôt have voter registration. However, it does have a relatively high rate of mail voting ‚Äî 23 percent of its votes were cast by mail in 2016, and 29 percent in 2018. Republicans control both the governorship and state legislature in North Dakota.‚Äù&lt;/li&gt;
&lt;li&gt;‚ÄúWhen asked how Oregon mailed ballots to 104 percent of voters in 2018, state election officials responded that the EAC number was ‚Äúoff‚Äù but did not provide further details.&#34;&lt;/li&gt;
&lt;li&gt;Sources: Ballotpedia, U.S. Election Assistance Commission&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;choropleth&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Choropleth&lt;/h1&gt;
&lt;p&gt;Adapted from &lt;a href=&#34;https://www.r-bloggers.com/choropleth-map-in-ggplot2/&#34;&gt;Choropleth Map in ggplot2&lt;/a&gt; by ‚Äòdata technik‚Äô&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states_map &amp;lt;- map_data(&amp;quot;state&amp;quot;)
fact_join &amp;lt;- left_join(states_map, vote_data, by = c(&amp;quot;region&amp;quot; = &amp;quot;states&amp;quot;))
fact_join %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
  geom_polygon(aes(fill = voted2018), color = &amp;quot;black&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;C&amp;quot;) +
  labs(title = &amp;quot;A View of Voting by Mail&amp;quot;,
       subtitle = &amp;quot;Percentage of registered voters that sent in ballots in 2018&amp;quot;,
       caption = &amp;quot;Alaska: 2%, Hawaii: 38%, North Dakota: NA \n Data Source: FiveThirtyEight&amp;quot;,
       fill = &amp;quot;% voted by mail&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank(),
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-25-vote-by-mail-data_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Analysis of NYT Sample of Covid-19 Obituaries</title>
      <link>https://dsollberger.netlify.com/post/analysis-of-nyt-sample-of-covid-19-obituaries/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/analysis-of-nyt-sample-of-covid-19-obituaries/</guid>
      <description>


&lt;div id=&#34;obtaining-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Obtaining the Data&lt;/h1&gt;
&lt;p&gt;On May 24, 2020, the &lt;em&gt;New York Times&lt;/em&gt; published an article called ‚Äú&lt;a href=&#34;https://www.nytimes.com/interactive/2020/05/24/us/us-coronavirus-deaths-100000.html&#34;&gt;An Incalcuable Loss&lt;/a&gt;‚Äù&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;America is fast approaching a grim milestone in the coronavirus outbreak ‚Äî each figure here represents one of the nearly 100,000 lives lost so far. But a count reveals only so much. Memories, gathered from obituaries across the country, help us to reckon with what was lost.&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What I am trying to do today is summarize the 1001 obituaries.&lt;/p&gt;
&lt;p&gt;I started out by manually&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;going to &lt;a href=&#34;https://www.nytimes.com/interactive/2020/05/24/us/us-coronavirus-deaths-100000.html&#34;&gt;https://www.nytimes.com/interactive/2020/05/24/us/us-coronavirus-deaths-100000.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;right-clicking and selecting ‚ÄúView Source‚Äù&lt;/li&gt;
&lt;li&gt;copy-and-pasting the HTML code to a text document&lt;/li&gt;
&lt;li&gt;paring down the HTML code to focus on the obituaries.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;g-obits&amp;quot;&amp;gt;
    &amp;lt;div id=&amp;quot;g-obit-frame&amp;quot;&amp;gt;
        
            &amp;lt;div id=&amp;quot;g-0&amp;quot; class=&amp;quot;g-obit&amp;quot; data-date=&amp;quot;February 6&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;g-obit-inner&amp;quot;&amp;gt;
                    &amp;lt;b&amp;gt;Auditor in Silicon Valley.&amp;lt;/b&amp;gt;
                    ...
    ...             &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;texts &amp;lt;- readLines(&amp;quot;obituaries.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;word-cloud&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Word Cloud&lt;/h1&gt;
&lt;p&gt;For one view, I wanted to make a word cloud to reveal the most commonly used words in the one-sentence obituaries. I used the &lt;code&gt;stringr&lt;/code&gt; package to extract the text in between the &lt;strong&gt;bold&lt;/strong&gt; HTML tags (as well as removing the period).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;obits &amp;lt;- str_extract_all(texts, regex(&amp;quot;(?&amp;lt;=&amp;lt;b&amp;gt;)(.*?)(?=.&amp;lt;/b&amp;gt;)&amp;quot;, multiline = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is &lt;code&gt;R&lt;/code&gt; code and packages for making word clouds, but I find it best to use the site &lt;a href=&#34;https://www.wordclouds.com/&#34;&gt;wordclouds.com&lt;/a&gt; since that application has many neat features. Thus, all I needed at this point is to save the results to upload to that site.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write_lines(unlist(obits), &amp;quot;clean.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;density-plot-of-ages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Density Plot of Ages&lt;/h1&gt;
&lt;p&gt;Q: Does Covid-19 only affect older people?&lt;/p&gt;
&lt;p&gt;For this analysis, I seek the two- or three-digit numbers in between the &lt;em&gt;italics&lt;/em&gt; HTML tags.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ages &amp;lt;- as.integer( unlist( str_extract_all(texts, regex(&amp;quot;(?&amp;lt;=,)(.[0-9]{2,3}?)(?=,)&amp;quot;, multiline = TRUE) )))

summary(ages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   22.00   67.00   80.00   76.72   89.00  108.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(ages) %&amp;gt;%
  ggplot(aes(x = ages)) +
  geom_density(fill = &amp;quot;black&amp;quot;) +
  labs(title = &amp;quot;Ages of Covid-19 Casualties&amp;quot;,
       subtitle = &amp;quot;Sample of Obituaries from February to May 2020&amp;quot;,
       caption = &amp;quot;Source: New York Times&amp;quot;,
       x = &amp;quot;Age&amp;quot;,
       y = &amp;quot;density&amp;quot;) +
  theme(axis.text.y = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-24-analysis-of-nyt-sample-of-covid-19-obituaries_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;spread-by-week&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Spread by Week&lt;/h1&gt;
&lt;p&gt;Out of curiosity, here I hope to build a boxplot of the ages, but grouped by week of the year.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates &amp;lt;- unlist( str_extract_all(texts, regex(&amp;quot;(?&amp;lt;=date=\&amp;quot;)(.*?)(?=\&amp;quot;)&amp;quot;, multiline = TRUE) ))


# There was one missing age value in this data, so I am going to choose to delete the last date
# with hopes that the data still mostly lines up
dates &amp;lt;- dates[1:1000]

df &amp;lt;- data.frame(ages, dates)

# separate month and day
df &amp;lt;- df %&amp;gt;%
  separate(dates, into = c(&amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;), remove = FALSE)

# Soon, I want to know the day of the year (i.e. how far into the year 2020), so here I make offsets,
df &amp;lt;- df %&amp;gt;%
  mutate(offset = case_when(month == &amp;quot;February&amp;quot; ~ 31,
                            month == &amp;quot;March&amp;quot; ~ 60,
                            month == &amp;quot;April&amp;quot; ~ 91,
                            TRUE ~ 121))

# Adding the offset and the obituary day to get the day of the year
df$day &amp;lt;- as.integer(df$day)
df &amp;lt;- df %&amp;gt;%
  mutate(day_of_year = offset + day)

# Finally, we divide by 7 to get the week of the year
df &amp;lt;- df %&amp;gt;%
  mutate(week_of_year = ceiling(day_of_year / 7))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = week_of_year, y = ages, fill = week_of_year, group = week_of_year)) +
  geom_boxplot() +
  labs(title = &amp;quot;US Covid-19 Deaths&amp;quot;,
       subtitle = &amp;quot;Age Distributions by week, Sample of n = 1000 obituaries&amp;quot;,
       caption = &amp;quot;Data Source: New York Times&amp;quot;,
       x = &amp;quot;Week of Year (since start of 2020)&amp;quot;,
       y = &amp;quot;Age&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-24-analysis-of-nyt-sample-of-covid-19-obituaries_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Unsupervised Learning</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-unsupervised-learning/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-unsupervised-learning/</guid>
      <description>


&lt;div id=&#34;unsupervised-learning&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Unsupervised Learning&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supervised learning&lt;/strong&gt; has the goal of making predictions with a set of &lt;em&gt;known&lt;/em&gt; labels for the response variable.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;unsupervised learning&lt;/strong&gt;, we try to find structure in the data of the response variable without predetermined labels.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Goal: organize the items available in the &lt;code&gt;Animal Crossing&lt;/code&gt; video game&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-set-animal-crossing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data set: Animal Crossing&lt;/h1&gt;
&lt;p&gt;Source: VillagerDB, MetaCritic, and TidyTuesday&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-05/readme.md&#34;&gt;Animal Crossing Tidy Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggrepel&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)

# critic &amp;lt;- readr::read_tsv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/critic.tsv&amp;#39;)
# user_reviews &amp;lt;- readr::read_tsv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/user_reviews.tsv&amp;#39;)
items &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&amp;#39;)
# villagers &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/villagers.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Exploratory Data Analysis&lt;/h1&gt;
&lt;div id=&#34;variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;variables&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(items)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4565   16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(items)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [4,565 x 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
##  $ num_id       : num [1:4565] 12 14 17 19 20 21 23 24 26 26 ...
##  $ id           : chr [1:4565] &amp;quot;3d-glasses&amp;quot; &amp;quot;a-tee&amp;quot; &amp;quot;abstract-wall&amp;quot; &amp;quot;academy-uniform&amp;quot; ...
##  $ name         : chr [1:4565] &amp;quot;3D Glasses&amp;quot; &amp;quot;A Tee&amp;quot; &amp;quot;Abstract Wall&amp;quot; &amp;quot;Academy Uniform&amp;quot; ...
##  $ category     : chr [1:4565] &amp;quot;Accessories&amp;quot; &amp;quot;Tops&amp;quot; &amp;quot;Wallpaper&amp;quot; &amp;quot;Dresses&amp;quot; ...
##  $ orderable    : logi [1:4565] NA NA TRUE NA FALSE TRUE ...
##  $ sell_value   : num [1:4565] 122 140 390 520 2000 375 420 330 8990 8990 ...
##  $ sell_currency: chr [1:4565] &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; ...
##  $ buy_value    : num [1:4565] 490 560 1560 2080 NA ...
##  $ buy_currency : chr [1:4565] &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; ...
##  $ sources      : chr [1:4565] NA NA &amp;quot;Nook&amp;#39;s Cranny&amp;quot; NA ...
##  $ customizable : logi [1:4565] NA NA NA NA NA FALSE ...
##  $ recipe       : num [1:4565] NA NA NA NA NA NA NA NA NA NA ...
##  $ recipe_id    : chr [1:4565] NA NA NA NA ...
##  $ games_id     : chr [1:4565] &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; ...
##  $ id_full      : chr [1:4565] &amp;quot;item-3d-glasses&amp;quot; &amp;quot;item-a-tee&amp;quot; NA &amp;quot;item-academy-uniform&amp;quot; ...
##  $ image_url    : chr [1:4565] &amp;quot;https://villagerdb.com/images/items/full/3d-glasses.b8e1b5a.png&amp;quot; &amp;quot;https://villagerdb.com/images/items/full/a-tee.a1af443.png&amp;quot; NA &amp;quot;https://villagerdb.com/images/items/full/academy-uniform.4475eb5.png&amp;quot; ...
##  - attr(*, &amp;quot;problems&amp;quot;)= tibble [2 x 5] (S3: tbl_df/tbl/data.frame)
##   ..$ row     : int [1:2] 4472 4473
##   ..$ col     : chr [1:2] &amp;quot;customizable&amp;quot; &amp;quot;customizable&amp;quot;
##   ..$ expected: chr [1:2] &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot;
##   ..$ actual  : chr [1:2] &amp;quot;Yes&amp;quot; &amp;quot;Yes&amp;quot;
##   ..$ file    : chr [1:2] &amp;quot;&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&amp;#39;&amp;quot; &amp;quot;&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&amp;#39;&amp;quot;
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   num_id = col_double(),
##   ..   id = col_character(),
##   ..   name = col_character(),
##   ..   category = col_character(),
##   ..   orderable = col_logical(),
##   ..   sell_value = col_double(),
##   ..   sell_currency = col_character(),
##   ..   buy_value = col_double(),
##   ..   buy_currency = col_character(),
##   ..   sources = col_character(),
##   ..   customizable = col_logical(),
##   ..   recipe = col_double(),
##   ..   recipe_id = col_character(),
##   ..   games_id = col_character(),
##   ..   id_full = col_character(),
##   ..   image_url = col_character()
##   .. )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(items$category)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Accessories     Bottoms        Bugs     Dresses        Fish    Flooring 
##         123         142          80         239         101         324 
##     Flowers     Fossils       Fruit   Furniture        Hats       Music 
##         109          76          12        1264         230          95 
##      Photos   Seashells       Shoes       Socks       Tools        Tops 
##         840           8          89          60          74         289 
##   Umbrellas     Usables   Wallpaper 
##          67          88         255&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(items$buy_value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&amp;#39;s 
##      40     870    1300    6960    2700 1200000    1014&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# table(items$buy_currency)
summary(items$sell_value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&amp;#39;s 
##       5     240     390    2261    1000  300000      36&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(items$num_id)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##      12    1722    3569    3662    5607    7443&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(items$recipe)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&amp;#39;s 
##   1.000   2.000   3.000   4.711   6.000  90.000    3977&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;numerical-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;numerical variables&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;items %&amp;gt;%
  ggplot(aes(x = buy_value, y = sell_value, color = category)) +
  geom_point() +
  coord_trans(x = &amp;quot;log10&amp;quot;) + 
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Sell Values vs Buy Values&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = c(0, 10, 100, 1000, 10000, 100000, 1000000),
                     labels = c(&amp;quot;0&amp;quot;, &amp;quot;10&amp;quot;, &amp;quot;100&amp;quot;, &amp;quot;1000&amp;quot;, &amp;quot;10000&amp;quot;, &amp;quot;100000&amp;quot;, &amp;quot;1000000&amp;quot;)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = c(0, 50000, 100000, 150000, 200000, 250000, 300000),
                     labels = c(&amp;quot;0&amp;quot;, &amp;quot;50000&amp;quot;, &amp;quot;100000&amp;quot;, &amp;quot;150000&amp;quot;, &amp;quot;200000&amp;quot;, &amp;quot;250000&amp;quot;, &amp;quot;300000&amp;quot;)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1035 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;k-means-clustering&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;K-Means Clustering&lt;/h1&gt;
&lt;div id=&#34;first-look&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;first look&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_numerical &amp;lt;- items %&amp;gt;%
  select(num_id, buy_value, sell_value, recipe) %&amp;gt;%
  filter(complete.cases(.))

summary(df_numerical$buy_value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##     240    3780    7080   16912   16480  320000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(df_numerical$sell_value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##      60     945    1770    4228    4120   80000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clusters4 &amp;lt;- kmeans(df_numerical, 4)

items_with_clusters &amp;lt;- cbind(df_numerical, clusters4$cluster)
colnames(items_with_clusters) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;buy&amp;quot;, &amp;quot;sell&amp;quot;, &amp;quot;recipe&amp;quot;, &amp;quot;cluster&amp;quot;)
items_with_clusters$cluster &amp;lt;- factor(items_with_clusters$cluster)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x_breaks &amp;lt;- c(0, 10, 100, 1000, 10000, 100000, 1000000)
y_breaks &amp;lt;- c(0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000)

items_with_clusters %&amp;gt;%
  ggplot() +
  geom_point(aes(x = buy, y = sell)) +
  geom_point(aes(x = buy_value, y = sell_value), 
             data = data.frame(clusters4$centers),
             size = 5,
             color = &amp;quot;blue&amp;quot;) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Cluster Centers&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;items_with_clusters %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;4 Clusters&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;selecting-the-amount-of-clusters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;selecting the amount of clusters&lt;/h2&gt;
&lt;p&gt;Selecting the number of clusters is rather subjective.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;too few clusters: items that are ‚Äúfar‚Äù from each other are still grouped together&lt;/li&gt;
&lt;li&gt;too many clusters: harder to describe and label groups later&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We start with an &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;-dimensional data set of numerical variables and prescribe a number &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; for the number of clusters and run the &lt;code&gt;kmeans&lt;/code&gt; algorithm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each cluster &lt;span class=&#34;math inline&#34;&gt;\(C_{k}\)&lt;/span&gt; has &lt;span class=&#34;math inline&#34;&gt;\(n_{k}\)&lt;/span&gt; points labeled &lt;span class=&#34;math inline&#34;&gt;\(x_{i}\)&lt;/span&gt; in &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt;-dimensional space&lt;/li&gt;
&lt;li&gt;Each cluster has a cluster center &lt;span class=&#34;math inline&#34;&gt;\(\mu_{k}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Each cluster has a &lt;em&gt;within-sum-of-squares&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[WSS = \displaystyle\sum_{x_{i} \in C_{k}} (x_{i} - \mu_{k})^{2}\]&lt;/span&gt;
Thus, our metric for the clustering will be the reported &lt;em&gt;total-within-sum-of-squares&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[TWSS = \displaystyle\sum_{j=1}^{k}\sum_{x_{i} \in C_{k}} (x_{i} - \mu_{k})^{2}\]&lt;/span&gt;
For example, the total-within-sum-of-squares for the 4-cluster results above is 3.148635410^{10}.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scree-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;scree plot&lt;/h2&gt;
&lt;p&gt;It is common practice to build a &lt;em&gt;scree plot&lt;/em&gt; and look for the ‚Äúelbow‚Äù.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clusters1 &amp;lt;- kmeans(df_numerical, 1)
clusters2 &amp;lt;- kmeans(df_numerical, 2)
clusters3 &amp;lt;- kmeans(df_numerical, 3)
clusters4 &amp;lt;- kmeans(df_numerical, 4)
clusters5 &amp;lt;- kmeans(df_numerical, 5)
clusters6 &amp;lt;- kmeans(df_numerical, 6)
clusters7 &amp;lt;- kmeans(df_numerical, 7)
clusters8 &amp;lt;- kmeans(df_numerical, 8)
clusters9 &amp;lt;- kmeans(df_numerical, 9)

TSS_vector &amp;lt;- c(clusters1$tot.withinss, clusters2$tot.withinss, clusters3$tot.withinss, 
                clusters4$tot.withinss, clusters5$tot.withinss, clusters6$tot.withinss, 
                clusters7$tot.withinss, clusters8$tot.withinss, clusters9$tot.withinss)

k_vals &amp;lt;- 1:9
df_for_scree_plot &amp;lt;- data.frame(k_vals, TSS_vector)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_for_scree_plot %&amp;gt;%
  ggplot(aes(x = k_vals, y = TSS_vector)) +
  geom_point(size = 3) +
  geom_line() +
  labs(title = &amp;quot;Scree Plot&amp;quot;,
       subtitle = &amp;quot;(find the &amp;#39;elbow&amp;#39;)&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;,
       x = &amp;quot;number of clusters&amp;quot;,
       y = &amp;quot;total-within-sum-of-squares&amp;quot;) +
  scale_x_discrete(name = &amp;quot;number of clusters&amp;quot;,
                   breaks = paste(1:9),
                   labels = paste(1:9),
                   limits = 1:9) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It appears that the optimal number of clusters for our data set is &lt;span class=&#34;math inline&#34;&gt;\(k = 3\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;items_with_clusters &amp;lt;- cbind(df_numerical, clusters3$cluster)
colnames(items_with_clusters) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;buy&amp;quot;, &amp;quot;sell&amp;quot;, &amp;quot;recipe&amp;quot;, &amp;quot;cluster&amp;quot;)
items_with_clusters$cluster &amp;lt;- factor(items_with_clusters$cluster)

df_categorical &amp;lt;- items %&amp;gt;%
  select(num_id, name, category) %&amp;gt;%
  filter(complete.cases(.))
colnames(df_categorical) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;category&amp;quot;)

main_df &amp;lt;- df_categorical %&amp;gt;%
  inner_join(items_with_clusters, by = &amp;quot;ID&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;main_df %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Optimal Clustering&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;appendix-label-a-sample-of-points-from-each-cluster&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Appendix: label a sample of points from each cluster&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;label_df &amp;lt;- main_df %&amp;gt;%
  group_by(cluster) %&amp;gt;%
  sample_n(2)

main_df %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  geom_label_repel(aes(x = buy, y = sell, label = name), 
                   data = label_df,
                   nudge_x = -1000,
                   nudge_y = 10000) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Optimal Clustering&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Unsupervised Learning</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-unsupervised-learning/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-unsupervised-learning/</guid>
      <description>&lt;h1 id=&#34;unsupervised-learning&#34;&gt;Unsupervised Learning&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supervised learning&lt;/strong&gt; has the goal of making predictions with a set of &lt;em&gt;known&lt;/em&gt; labels for the response variable.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;unsupervised learning&lt;/strong&gt;, we try to find structure in the data of the response variable without predetermined labels.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Goal: organize the items available in the &lt;code&gt;Animal Crossing&lt;/code&gt; video game&lt;/p&gt;
&lt;h1 id=&#34;data-set-animal-crossing&#34;&gt;Data set: Animal Crossing&lt;/h1&gt;
&lt;p&gt;Source:  VillagerDB, MetaCritic, and TidyTuesday&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-05/readme.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Animal Crossing Tidy Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;ggrepel&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)

# critic &amp;lt;- readr::read_tsv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/critic.tsv&#39;)
# user_reviews &amp;lt;- readr::read_tsv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/user_reviews.tsv&#39;)
items &amp;lt;- readr::read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&#39;)
# villagers &amp;lt;- readr::read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/villagers.csv&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;exploratory-data-analysis&#34;&gt;Exploratory Data Analysis&lt;/h1&gt;
&lt;h2 id=&#34;variables&#34;&gt;variables&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dim(items)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4565   16
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(items)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [4,565 x 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
##  $ num_id       : num [1:4565] 12 14 17 19 20 21 23 24 26 26 ...
##  $ id           : chr [1:4565] &amp;quot;3d-glasses&amp;quot; &amp;quot;a-tee&amp;quot; &amp;quot;abstract-wall&amp;quot; &amp;quot;academy-uniform&amp;quot; ...
##  $ name         : chr [1:4565] &amp;quot;3D Glasses&amp;quot; &amp;quot;A Tee&amp;quot; &amp;quot;Abstract Wall&amp;quot; &amp;quot;Academy Uniform&amp;quot; ...
##  $ category     : chr [1:4565] &amp;quot;Accessories&amp;quot; &amp;quot;Tops&amp;quot; &amp;quot;Wallpaper&amp;quot; &amp;quot;Dresses&amp;quot; ...
##  $ orderable    : logi [1:4565] NA NA TRUE NA FALSE TRUE ...
##  $ sell_value   : num [1:4565] 122 140 390 520 2000 375 420 330 8990 8990 ...
##  $ sell_currency: chr [1:4565] &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; ...
##  $ buy_value    : num [1:4565] 490 560 1560 2080 NA ...
##  $ buy_currency : chr [1:4565] &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; &amp;quot;bells&amp;quot; ...
##  $ sources      : chr [1:4565] NA NA &amp;quot;Nook&#39;s Cranny&amp;quot; NA ...
##  $ customizable : logi [1:4565] NA NA NA NA NA FALSE ...
##  $ recipe       : num [1:4565] NA NA NA NA NA NA NA NA NA NA ...
##  $ recipe_id    : chr [1:4565] NA NA NA NA ...
##  $ games_id     : chr [1:4565] &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; &amp;quot;nh&amp;quot; ...
##  $ id_full      : chr [1:4565] &amp;quot;item-3d-glasses&amp;quot; &amp;quot;item-a-tee&amp;quot; NA &amp;quot;item-academy-uniform&amp;quot; ...
##  $ image_url    : chr [1:4565] &amp;quot;https://villagerdb.com/images/items/full/3d-glasses.b8e1b5a.png&amp;quot; &amp;quot;https://villagerdb.com/images/items/full/a-tee.a1af443.png&amp;quot; NA &amp;quot;https://villagerdb.com/images/items/full/academy-uniform.4475eb5.png&amp;quot; ...
##  - attr(*, &amp;quot;problems&amp;quot;)= tibble [2 x 5] (S3: tbl_df/tbl/data.frame)
##   ..$ row     : int [1:2] 4472 4473
##   ..$ col     : chr [1:2] &amp;quot;customizable&amp;quot; &amp;quot;customizable&amp;quot;
##   ..$ expected: chr [1:2] &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot; &amp;quot;1/0/T/F/TRUE/FALSE&amp;quot;
##   ..$ actual  : chr [1:2] &amp;quot;Yes&amp;quot; &amp;quot;Yes&amp;quot;
##   ..$ file    : chr [1:2] &amp;quot;&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&#39;&amp;quot; &amp;quot;&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&#39;&amp;quot;
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   num_id = col_double(),
##   ..   id = col_character(),
##   ..   name = col_character(),
##   ..   category = col_character(),
##   ..   orderable = col_logical(),
##   ..   sell_value = col_double(),
##   ..   sell_currency = col_character(),
##   ..   buy_value = col_double(),
##   ..   buy_currency = col_character(),
##   ..   sources = col_character(),
##   ..   customizable = col_logical(),
##   ..   recipe = col_double(),
##   ..   recipe_id = col_character(),
##   ..   games_id = col_character(),
##   ..   id_full = col_character(),
##   ..   image_url = col_character()
##   .. )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(items$category)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Accessories     Bottoms        Bugs     Dresses        Fish    Flooring 
##         123         142          80         239         101         324 
##     Flowers     Fossils       Fruit   Furniture        Hats       Music 
##         109          76          12        1264         230          95 
##      Photos   Seashells       Shoes       Socks       Tools        Tops 
##         840           8          89          60          74         289 
##   Umbrellas     Usables   Wallpaper 
##          67          88         255
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(items$buy_value)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&#39;s 
##      40     870    1300    6960    2700 1200000    1014
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# table(items$buy_currency)
summary(items$sell_value)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&#39;s 
##       5     240     390    2261    1000  300000      36
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(items$num_id)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##      12    1722    3569    3662    5607    7443
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(items$recipe)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&#39;s 
##   1.000   2.000   3.000   4.711   6.000  90.000    3977
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;numerical-variables&#34;&gt;numerical variables&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;items %&amp;gt;%
  ggplot(aes(x = buy_value, y = sell_value, color = category)) +
  geom_point() +
  coord_trans(x = &amp;quot;log10&amp;quot;) + 
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Sell Values vs Buy Values&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = c(0, 10, 100, 1000, 10000, 100000, 1000000),
                     labels = c(&amp;quot;0&amp;quot;, &amp;quot;10&amp;quot;, &amp;quot;100&amp;quot;, &amp;quot;1000&amp;quot;, &amp;quot;10000&amp;quot;, &amp;quot;100000&amp;quot;, &amp;quot;1000000&amp;quot;)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = c(0, 50000, 100000, 150000, 200000, 250000, 300000),
                     labels = c(&amp;quot;0&amp;quot;, &amp;quot;50000&amp;quot;, &amp;quot;100000&amp;quot;, &amp;quot;150000&amp;quot;, &amp;quot;200000&amp;quot;, &amp;quot;250000&amp;quot;, &amp;quot;300000&amp;quot;)) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1035 rows containing missing values (geom_point).
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h1 id=&#34;k-means-clustering&#34;&gt;K-Means Clustering&lt;/h1&gt;
&lt;h2 id=&#34;first-look&#34;&gt;first look&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df_numerical &amp;lt;- items %&amp;gt;%
  select(num_id, buy_value, sell_value, recipe) %&amp;gt;%
  filter(complete.cases(.))

summary(df_numerical$buy_value)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##     240    3780    7080   16912   16480  320000
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(df_numerical$sell_value)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##      60     945    1770    4228    4120   80000
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;clusters4 &amp;lt;- kmeans(df_numerical, 4)

items_with_clusters &amp;lt;- cbind(df_numerical, clusters4$cluster)
colnames(items_with_clusters) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;buy&amp;quot;, &amp;quot;sell&amp;quot;, &amp;quot;recipe&amp;quot;, &amp;quot;cluster&amp;quot;)
items_with_clusters$cluster &amp;lt;- factor(items_with_clusters$cluster)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x_breaks &amp;lt;- c(0, 10, 100, 1000, 10000, 100000, 1000000)
y_breaks &amp;lt;- c(0, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000)

items_with_clusters %&amp;gt;%
  ggplot() +
  geom_point(aes(x = buy, y = sell)) +
  geom_point(aes(x = buy_value, y = sell_value), 
             data = data.frame(clusters4$centers),
             size = 5,
             color = &amp;quot;blue&amp;quot;) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Cluster Centers&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;items_with_clusters %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;4 Clusters&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h2 id=&#34;selecting-the-amount-of-clusters&#34;&gt;selecting the amount of clusters&lt;/h2&gt;
&lt;p&gt;Selecting the number of clusters is rather subjective.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;too few clusters: items that are &amp;ldquo;far&amp;rdquo; from each other are still grouped together&lt;/li&gt;
&lt;li&gt;too many clusters: harder to describe and label groups later&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We start with an $d$-dimensional data set of numerical variables and prescribe a number $k$ for the number of clusters and run the &lt;code&gt;kmeans&lt;/code&gt; algorithm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each cluster $C_{k}$ has $n_{k}$ points labeled $x_{i}$ in $d$-dimensional space&lt;/li&gt;
&lt;li&gt;Each cluster has a cluster center $\mu_{k}$&lt;/li&gt;
&lt;li&gt;Each cluster has a &lt;em&gt;within-sum-of-squares&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$WSS = \displaystyle\sum_{x_{i} \in C_{k}} (x_{i} - \mu_{k})^{2}$$
Thus, our metric for the clustering will be the reported &lt;em&gt;total-within-sum-of-squares&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;$$TWSS = \displaystyle\sum_{j=1}^{k}\sum_{x_{i} \in C_{k}} (x_{i} - \mu_{k})^{2}$$
For example, the total-within-sum-of-squares for the 4-cluster results above is 3.1486354\times 10^{10}.&lt;/p&gt;
&lt;h2 id=&#34;scree-plot&#34;&gt;scree plot&lt;/h2&gt;
&lt;p&gt;It is common practice to build a &lt;em&gt;scree plot&lt;/em&gt; and look for the &amp;ldquo;elbow&amp;rdquo;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;clusters1 &amp;lt;- kmeans(df_numerical, 1)
clusters2 &amp;lt;- kmeans(df_numerical, 2)
clusters3 &amp;lt;- kmeans(df_numerical, 3)
clusters4 &amp;lt;- kmeans(df_numerical, 4)
clusters5 &amp;lt;- kmeans(df_numerical, 5)
clusters6 &amp;lt;- kmeans(df_numerical, 6)
clusters7 &amp;lt;- kmeans(df_numerical, 7)
clusters8 &amp;lt;- kmeans(df_numerical, 8)
clusters9 &amp;lt;- kmeans(df_numerical, 9)

TSS_vector &amp;lt;- c(clusters1$tot.withinss, clusters2$tot.withinss, clusters3$tot.withinss, 
                clusters4$tot.withinss, clusters5$tot.withinss, clusters6$tot.withinss, 
                clusters7$tot.withinss, clusters8$tot.withinss, clusters9$tot.withinss)

k_vals &amp;lt;- 1:9
df_for_scree_plot &amp;lt;- data.frame(k_vals, TSS_vector)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df_for_scree_plot %&amp;gt;%
  ggplot(aes(x = k_vals, y = TSS_vector)) +
  geom_point(size = 3) +
  geom_line() +
  labs(title = &amp;quot;Scree Plot&amp;quot;,
       subtitle = &amp;quot;(find the &#39;elbow&#39;)&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;,
       x = &amp;quot;number of clusters&amp;quot;,
       y = &amp;quot;total-within-sum-of-squares&amp;quot;) +
  scale_x_discrete(name = &amp;quot;number of clusters&amp;quot;,
                   breaks = paste(1:9),
                   labels = paste(1:9),
                   limits = 1:9) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It appears that the optimal number of clusters for our data set is $k = 3$.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;items_with_clusters &amp;lt;- cbind(df_numerical, clusters3$cluster)
colnames(items_with_clusters) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;buy&amp;quot;, &amp;quot;sell&amp;quot;, &amp;quot;recipe&amp;quot;, &amp;quot;cluster&amp;quot;)
items_with_clusters$cluster &amp;lt;- factor(items_with_clusters$cluster)

df_categorical &amp;lt;- items %&amp;gt;%
  select(num_id, name, category) %&amp;gt;%
  filter(complete.cases(.))
colnames(df_categorical) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;category&amp;quot;)

main_df &amp;lt;- df_categorical %&amp;gt;%
  inner_join(items_with_clusters, by = &amp;quot;ID&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;main_df %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Optimal Clustering&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h1 id=&#34;appendix-label-a-sample-of-points-from-each-cluster&#34;&gt;Appendix: label a sample of points from each cluster&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;label_df &amp;lt;- main_df %&amp;gt;%
  group_by(cluster) %&amp;gt;%
  sample_n(2)

main_df %&amp;gt;%
  ggplot(group = cluster) +
  geom_point(aes(x = buy, y = sell, color = cluster), size = 3) +
  geom_label_repel(aes(x = buy, y = sell, label = name), 
                   data = label_df,
                   nudge_x = -1000,
                   nudge_y = 10000) +
  coord_trans(x = &amp;quot;log10&amp;quot;) +
  labs(title = &amp;quot;Items in Animal Crossing&amp;quot;,
       subtitle = &amp;quot;Optimal Clustering&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Buy Value&amp;quot;,
                     breaks = x_breaks,
                     labels = paste(x_breaks)) +
  scale_y_continuous(name = &amp;quot;Sell Value&amp;quot;,
                     breaks = y_breaks,
                     labels = paste(y_breaks)) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2020-05-06-introduction-to-unsupervised-learning_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
</description>
    </item>
    
    <item>
      <title>Supervised Learning</title>
      <link>https://dsollberger.netlify.com/post/supervised-learning/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/supervised-learning/</guid>
      <description>


&lt;div id=&#34;supervised-learning&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Supervised Learning&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supervised learning&lt;/strong&gt; has the goal of making predictions with a set of &lt;em&gt;known&lt;/em&gt; labels for the response variable.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;unsupervised learning&lt;/strong&gt;, we try to find structure in the data of the response variable without predetermined labels.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Goal: predict the personality type of each character in Animal Crossing&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-set-animal-crossing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data set: Animal Crossing&lt;/h1&gt;
&lt;p&gt;Source: VillagerDB, MetaCritic, and TidyTuesday&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-05/readme.md&#34;&gt;Animal Crossing Tidy Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;caret&amp;quot;)
library(&amp;quot;randomForest&amp;quot;)
library(&amp;quot;tidymodels&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)

# critic &amp;lt;- readr::read_tsv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/critic.tsv&amp;#39;)
# user_reviews &amp;lt;- readr::read_tsv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/user_reviews.tsv&amp;#39;)
# items &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/items.csv&amp;#39;)
villagers &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/villagers.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exploratory Data Analysis&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(villagers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 391  11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(villagers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tibble [391 x 11] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
##  $ row_n      : num [1:391] 2 3 4 6 7 8 9 10 11 13 ...
##  $ id         : chr [1:391] &amp;quot;admiral&amp;quot; &amp;quot;agent-s&amp;quot; &amp;quot;agnes&amp;quot; &amp;quot;al&amp;quot; ...
##  $ name       : chr [1:391] &amp;quot;Admiral&amp;quot; &amp;quot;Agent S&amp;quot; &amp;quot;Agnes&amp;quot; &amp;quot;Al&amp;quot; ...
##  $ gender     : chr [1:391] &amp;quot;male&amp;quot; &amp;quot;female&amp;quot; &amp;quot;female&amp;quot; &amp;quot;male&amp;quot; ...
##  $ species    : chr [1:391] &amp;quot;bird&amp;quot; &amp;quot;squirrel&amp;quot; &amp;quot;pig&amp;quot; &amp;quot;gorilla&amp;quot; ...
##  $ birthday   : chr [1:391] &amp;quot;1-27&amp;quot; &amp;quot;7-2&amp;quot; &amp;quot;4-21&amp;quot; &amp;quot;10-18&amp;quot; ...
##  $ personality: chr [1:391] &amp;quot;cranky&amp;quot; &amp;quot;peppy&amp;quot; &amp;quot;uchi&amp;quot; &amp;quot;lazy&amp;quot; ...
##  $ song       : chr [1:391] &amp;quot;Steep Hill&amp;quot; &amp;quot;DJ K.K.&amp;quot; &amp;quot;K.K. House&amp;quot; &amp;quot;Steep Hill&amp;quot; ...
##  $ phrase     : chr [1:391] &amp;quot;aye aye&amp;quot; &amp;quot;sidekick&amp;quot; &amp;quot;snuffle&amp;quot; &amp;quot;Ayyeeee&amp;quot; ...
##  $ full_id    : chr [1:391] &amp;quot;villager-admiral&amp;quot; &amp;quot;villager-agent-s&amp;quot; &amp;quot;villager-agnes&amp;quot; &amp;quot;villager-al&amp;quot; ...
##  $ url        : chr [1:391] &amp;quot;https://villagerdb.com/images/villagers/thumb/admiral.98206ee.png&amp;quot; &amp;quot;https://villagerdb.com/images/villagers/thumb/agent-s.96c789b.png&amp;quot; &amp;quot;https://villagerdb.com/images/villagers/thumb/agnes.9f51f32.png&amp;quot; &amp;quot;https://villagerdb.com/images/villagers/thumb/al.1e17090.png&amp;quot; ...
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   row_n = col_double(),
##   ..   id = col_character(),
##   ..   name = col_character(),
##   ..   gender = col_character(),
##   ..   species = col_character(),
##   ..   birthday = col_character(),
##   ..   personality = col_character(),
##   ..   song = col_character(),
##   ..   phrase = col_character(),
##   ..   full_id = col_character(),
##   ..   url = col_character()
##   .. )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#table(villagers$name)
#length(unique(villagers$name))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(villagers$personality)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## cranky   jock   lazy normal  peppy   smug snooty   uchi 
##     55     55     60     59     49     34     55     24&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;personality-across-gender&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Personality across Gender&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers %&amp;gt;%
  ggplot(aes(x = personality, fill = gender)) +
  geom_bar(stat = &amp;quot;count&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  labs(title = &amp;quot;Getting to Know the Animal Crossing Villagers&amp;quot;,
       subtitle = &amp;quot;and judging their personalities&amp;quot;,
       caption = &amp;quot;Source: VillagerDB&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-04-supervised-learning_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;personality-across-species&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Personality across Species&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers %&amp;gt;%
  ggplot(aes(x = personality, fill = species)) +
  geom_bar(stat = &amp;quot;count&amp;quot;, position = &amp;quot;stack&amp;quot;) +
  labs(title = &amp;quot;Getting to Know the Animal Crossing Villagers&amp;quot;,
       subtitle = &amp;quot;and judging their personalities&amp;quot;,
       caption = &amp;quot;Source: VillagerDB&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-04-supervised-learning_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;predictor-variables&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Predictor Variables&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(villagers$gender)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## female   male 
##    187    204&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(villagers$species)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## alligator  anteater      bear      bird      bull       cat   chicken       cow 
##         7         7        15        13         6        23         9         4 
##       cub      deer       dog      duck     eagle  elephant      frog      goat 
##        16        10        16        17         9        11        18         8 
##   gorilla   hamster     hippo     horse  kangaroo     koala      lion    monkey 
##         9         8         7        15         8         9         7         8 
##     mouse   octopus   ostrich   penguin       pig    rabbit     rhino     sheep 
##        15         3        10        13        15        20         6        13 
##  squirrel     tiger      wolf 
##        18         7        11&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;extracting-birth-month&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extracting Birth Month&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers &amp;lt;- villagers %&amp;gt;%
  separate(birthday, c(&amp;quot;birth_month&amp;quot;, &amp;quot;birth_day&amp;quot;), remove = FALSE)

villagers$birth_month_factor &amp;lt;- factor(villagers$birth_month, 
                                levels = 1:12)

table(villagers$birth_month_factor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  1  2  3  4  5  6  7  8  9 10 11 12 
## 32 29 33 29 31 33 35 36 32 37 30 34&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers %&amp;gt;%
  ggplot(aes(x = personality, fill = birth_month_factor)) +
  geom_bar(color = &amp;quot;black&amp;quot;, stat = &amp;quot;count&amp;quot;, position = &amp;quot;stack&amp;quot;) +
  labs(title = &amp;quot;Getting to Know the Animal Crossing Villagers&amp;quot;,
       subtitle = &amp;quot;and judging their personalities&amp;quot;,
       caption = &amp;quot;Source: VillagerDB&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-04-supervised-learning_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers %&amp;gt;%
  ggplot(aes(x = personality, fill = birth_month_factor)) +
  geom_bar(color = &amp;quot;black&amp;quot;, stat = &amp;quot;count&amp;quot;, position = &amp;quot;fill&amp;quot;) +
  labs(title = &amp;quot;Getting to Know the Animal Crossing Villagers&amp;quot;,
       subtitle = &amp;quot;and judging their personalities&amp;quot;,
       caption = &amp;quot;Source: VillagerDB&amp;quot;,
       y = &amp;quot;proportion&amp;quot;) +
  scale_fill_manual(name = &amp;quot;Month of Birth&amp;quot;,
                    labels = c(&amp;quot;January&amp;quot;, &amp;quot;February&amp;quot;, &amp;quot;March&amp;quot;, &amp;quot;April&amp;quot;,
                                 &amp;quot;May&amp;quot;, &amp;quot;June&amp;quot;, &amp;quot;July&amp;quot;, &amp;quot;August&amp;quot;,
                                 &amp;quot;September&amp;quot;, &amp;quot;October&amp;quot;, &amp;quot;November&amp;quot;, &amp;quot;December&amp;quot;),
                    values=sample(c(&amp;quot;#4b48c9&amp;quot;, &amp;quot;#5c90a8&amp;quot;, &amp;quot;#86d5fe&amp;quot;, &amp;quot;#c0d1ef&amp;quot;,
                             &amp;quot;#edd1a2&amp;quot;, &amp;quot;#948572&amp;quot;, &amp;quot;#f8c79e&amp;quot;, &amp;quot;#eec688&amp;quot;,
                             &amp;quot;#642200&amp;quot;, &amp;quot;#764936&amp;quot;, &amp;quot;#fd974d&amp;quot;, &amp;quot;#7b4a3c&amp;quot;))) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-04-supervised-learning_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;(color palette generated at &lt;a href=&#34;http://www.cssdrive.com/imagepalette/index.php&#34;&gt;CSS Drive&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;model-formula&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;model formula&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;response variable: &lt;code&gt;personality&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;predictor variables: &lt;code&gt;gender&lt;/code&gt;, &lt;code&gt;species&lt;/code&gt;, &lt;code&gt;birth_month&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;model formula: &lt;code&gt;personality ~ gender + species + birth_month&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predictor_variables &amp;lt;- c(&amp;quot;gender&amp;quot;, &amp;quot;species&amp;quot;, &amp;quot;birth_month&amp;quot;)
model_formula &amp;lt;- paste(&amp;quot;personality~&amp;quot;, paste(sprintf(&amp;quot;`%s`&amp;quot;, predictor_variables), collapse=&amp;quot;+&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-split&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Split&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;villagers_split &amp;lt;- initial_split(villagers)
villagers_train &amp;lt;- training(villagers_split)
villagers_test  &amp;lt;- testing(villagers_split)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forests&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Random Forests&lt;/h1&gt;
&lt;p&gt;‚ÄúRandom forest models are ensembles of decision trees. A large number of decision tree models are created for the ensemble based on slightly different versions of the training set. When creating the individual decision trees, the fitting process encourages them to be as diverse as possible. The collection of trees are combined into the random forest model and, when a new sample is predicted, the votes from each tree are used to calculate the final predicted value for the new sample.‚Äù
‚Äî&lt;a href=&#34;https://www.tidymodels.org/start/resampling/&#34;&gt;tidymodels.org&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;define-the-forest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Define the Forest&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_forest_model &amp;lt;- 
  rand_forest(trees = 1000) %&amp;gt;% 
  set_engine(&amp;quot;ranger&amp;quot;) %&amp;gt;% 
  set_mode(&amp;quot;classification&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fitting-the-forest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fitting the Forest&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# CAUTION: at the time of filming, this code chunk did not work (model formula parser threw an error)
random_forest_fit &amp;lt;-
  random_forest_model %&amp;gt;%
  fit(personality ~ gender + species + birth_month, data = villagers_train)

random_forest_fit&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-the-forest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing the Forest&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# OLD-FASHIONED WAY with the caret package
model_rf &amp;lt;- caret::train(personality ~ gender + species + birth_month,
                         data = villagers_train, method = &amp;quot;rf&amp;quot;)
model_rf&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Random Forest 
## 
## 294 samples
##   3 predictor
##   8 classes: &amp;#39;cranky&amp;#39;, &amp;#39;jock&amp;#39;, &amp;#39;lazy&amp;#39;, &amp;#39;normal&amp;#39;, &amp;#39;peppy&amp;#39;, &amp;#39;smug&amp;#39;, &amp;#39;snooty&amp;#39;, &amp;#39;uchi&amp;#39; 
## 
## No pre-processing
## Resampling: Bootstrapped (25 reps) 
## Summary of sample sizes: 294, 294, 294, 294, 294, 294, ... 
## Resampling results across tuning parameters:
## 
##   mtry  Accuracy   Kappa    
##    2    0.2550533  0.1357101
##   24    0.2889225  0.1759381
##   46    0.2892118  0.1774835
## 
## Accuracy was used to select the optimal model using the largest value.
## The final value used for the model was mtry = 46.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model_rpart &amp;lt;- caret::train(personality ~ gender + species + birth_month,
                         data = villagers_train, method = &amp;quot;rpart&amp;quot;)
model_rpart&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## CART 
## 
## 294 samples
##   3 predictor
##   8 classes: &amp;#39;cranky&amp;#39;, &amp;#39;jock&amp;#39;, &amp;#39;lazy&amp;#39;, &amp;#39;normal&amp;#39;, &amp;#39;peppy&amp;#39;, &amp;#39;smug&amp;#39;, &amp;#39;snooty&amp;#39;, &amp;#39;uchi&amp;#39; 
## 
## No pre-processing
## Resampling: Bootstrapped (25 reps) 
## Summary of sample sizes: 294, 294, 294, 294, 294, 294, ... 
## Resampling results across tuning parameters:
## 
##   cp          Accuracy   Kappa     
##   0.02024291  0.2975188  0.18582216
##   0.02429150  0.2876263  0.17374970
##   0.19028340  0.2017836  0.07541971
## 
## Accuracy was used to select the optimal model using the largest value.
## The final value used for the model was cp = 0.02024291.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#source:  https://shiring.github.io/machine_learning/2017/03/16/rf_plot_ggraph

library(&amp;quot;ggraph&amp;quot;)
library(&amp;quot;igraph&amp;quot;)

tree_func &amp;lt;- function(final_model, 
                      tree_num) {
  
  # get tree by index
  tree &amp;lt;- randomForest::getTree(final_model, 
                                k = tree_num, 
                                labelVar = TRUE) %&amp;gt;%
    tibble::rownames_to_column() %&amp;gt;%
    # make leaf split points to NA, so the 0s won&amp;#39;t get plotted
    mutate(`split point` = ifelse(is.na(prediction), `split point`, NA))
  
  # prepare data frame for graph
  graph_frame &amp;lt;- data.frame(from = rep(tree$rowname, 2),
                            to = c(tree$`left daughter`, tree$`right daughter`))
  
  # convert to graph and delete the last node that we don&amp;#39;t want to plot
  graph &amp;lt;- graph_from_data_frame(graph_frame) %&amp;gt;%
    delete_vertices(&amp;quot;0&amp;quot;)
  
  # set node labels
  V(graph)$node_label &amp;lt;- gsub(&amp;quot;_&amp;quot;, &amp;quot; &amp;quot;, as.character(tree$`split var`))
  V(graph)$leaf_label &amp;lt;- as.character(tree$prediction)
  V(graph)$split &amp;lt;- as.character(round(tree$`split point`, digits = 2))
  
  # plot
  plot &amp;lt;- ggraph(graph, &amp;#39;dendrogram&amp;#39;) + 
    theme_bw() +
    geom_edge_link() +
    geom_node_point() +
    geom_node_text(aes(label = node_label), na.rm = TRUE, repel = TRUE) +
    geom_node_label(aes(label = split), vjust = 2.5, na.rm = TRUE, fill = &amp;quot;white&amp;quot;) +
    geom_node_label(aes(label = leaf_label, fill = leaf_label), na.rm = TRUE, 
                    repel = TRUE, colour = &amp;quot;white&amp;quot;, fontface = &amp;quot;bold&amp;quot;, show.legend = FALSE) +
    theme(panel.grid.minor = element_blank(),
          panel.grid.major = element_blank(),
          panel.background = element_blank(),
          plot.background = element_rect(fill = &amp;quot;white&amp;quot;),
          panel.border = element_blank(),
          axis.line = element_blank(),
          axis.text.x = element_blank(),
          axis.text.y = element_blank(),
          axis.ticks = element_blank(),
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          plot.title = element_text(size = 18))
  
  print(plot)
}

tree_num &amp;lt;- which(model_rf$finalModel$forest$ndbigtree == min(model_rf$finalModel$forest$ndbigtree))

tree_func(final_model = model_rf$finalModel, tree_num)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-04-supervised-learning_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;predictions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Predictions&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predictions &amp;lt;- predict(model_rf, newdata = villagers_test)
confusionMatrix(predictions, factor(villagers_test$personality))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Confusion Matrix and Statistics
## 
##           Reference
## Prediction cranky jock lazy normal peppy smug snooty uchi
##     cranky      5    1    0      0     0    1      0    0
##     jock        1   10    2      0     0    2      0    0
##     lazy        0    5   13      0     0    2      0    0
##     normal      0    0    0     12     1    0      1    2
##     peppy       0    0    0      2     9    0      3    0
##     smug        0    1    0      0     0    3      0    0
##     snooty      0    0    0      3     0    0     13    2
##     uchi        0    0    0      0     0    0      0    3
## 
## Overall Statistics
##                                           
##                Accuracy : 0.701           
##                  95% CI : (0.5996, 0.7898)
##     No Information Rate : 0.1753          
##     P-Value [Acc &amp;gt; NIR] : &amp;lt; 2.2e-16       
##                                           
##                   Kappa : 0.6502          
##                                           
##  Mcnemar&amp;#39;s Test P-Value : NA              
## 
## Statistics by Class:
## 
##                      Class: cranky Class: jock Class: lazy Class: normal
## Sensitivity                0.83333      0.5882      0.8667        0.7059
## Specificity                0.97802      0.9375      0.9146        0.9500
## Pos Pred Value             0.71429      0.6667      0.6500        0.7500
## Neg Pred Value             0.98889      0.9146      0.9740        0.9383
## Prevalence                 0.06186      0.1753      0.1546        0.1753
## Detection Rate             0.05155      0.1031      0.1340        0.1237
## Detection Prevalence       0.07216      0.1546      0.2062        0.1649
## Balanced Accuracy          0.90568      0.7629      0.8907        0.8279
##                      Class: peppy Class: smug Class: snooty Class: uchi
## Sensitivity               0.90000     0.37500        0.7647     0.42857
## Specificity               0.94253     0.98876        0.9375     1.00000
## Pos Pred Value            0.64286     0.75000        0.7222     1.00000
## Neg Pred Value            0.98795     0.94624        0.9494     0.95745
## Prevalence                0.10309     0.08247        0.1753     0.07216
## Detection Rate            0.09278     0.03093        0.1340     0.03093
## Detection Prevalence      0.14433     0.04124        0.1856     0.03093
## Balanced Accuracy         0.92126     0.68188        0.8511     0.71429&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Machine Learning</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-machine-learning/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-machine-learning/</guid>
      <description>


&lt;div id=&#34;goals-for-today&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Goals for today&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;introduce machine learning (ideas and terminology)&lt;/li&gt;
&lt;li&gt;introduce &lt;code&gt;tidymodels&lt;/code&gt; package&lt;/li&gt;
&lt;li&gt;practice with a &lt;code&gt;TidyTuesday&lt;/code&gt; data set&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;tidymodels&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-tour-de-france&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data: Tour de France&lt;/h1&gt;
&lt;p&gt;Source: &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-04-07/readme.md&#34;&gt;TidyTuesday&lt;/a&gt; data set from April 7, 2020&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tdf_winners &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-07/tdf_winners.csv&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(tdf_winners)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;spec_tbl_df&amp;#39;, &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;: 106 obs. of  19 variables:
##  $ edition      : num  1 2 3 4 5 6 7 8 9 10 ...
##  $ start_date   : Date, format: &amp;quot;1903-07-01&amp;quot; &amp;quot;1904-07-02&amp;quot; ...
##  $ winner_name  : chr  &amp;quot;Maurice Garin&amp;quot; &amp;quot;Henri Cornet&amp;quot; &amp;quot;Louis Trousselier&amp;quot; &amp;quot;Ren√© Pottier&amp;quot; ...
##  $ winner_team  : chr  &amp;quot;La Fran√ßaise&amp;quot; &amp;quot;Conte&amp;quot; &amp;quot;Peugeot‚ÄìWolber&amp;quot; &amp;quot;Peugeot‚ÄìWolber&amp;quot; ...
##  $ distance     : num  2428 2428 2994 4637 4488 ...
##  $ time_overall : num  94.6 96.1 NA NA NA ...
##  $ time_margin  : num  2.99 2.27 NA NA NA ...
##  $ stage_wins   : num  3 1 5 5 2 5 6 4 2 3 ...
##  $ stages_led   : num  6 3 10 12 5 13 13 3 13 13 ...
##  $ height       : num  1.62 NA NA NA NA NA 1.78 NA NA NA ...
##  $ weight       : num  60 NA NA NA NA NA 88 NA NA NA ...
##  $ age          : num  32 19 24 27 24 25 22 22 26 23 ...
##  $ born         : Date, format: &amp;quot;1871-03-03&amp;quot; &amp;quot;1884-08-04&amp;quot; ...
##  $ died         : Date, format: &amp;quot;1957-02-19&amp;quot; &amp;quot;1941-03-18&amp;quot; ...
##  $ full_name    : chr  NA NA NA NA ...
##  $ nickname     : chr  &amp;quot;The Little Chimney-sweep&amp;quot; &amp;quot;Le rigolo (The joker)&amp;quot; &amp;quot;Levaloy / Trou-trou&amp;quot; NA ...
##  $ birth_town   : chr  &amp;quot;Arvier&amp;quot; &amp;quot;Desvres&amp;quot; &amp;quot;Paris&amp;quot; &amp;quot;Moret-sur-Loing&amp;quot; ...
##  $ birth_country: chr  &amp;quot;Italy&amp;quot; &amp;quot;France&amp;quot; &amp;quot;France&amp;quot; &amp;quot;France&amp;quot; ...
##  $ nationality  : chr  &amp;quot;¬†France&amp;quot; &amp;quot;¬†France&amp;quot; &amp;quot;¬†France&amp;quot; &amp;quot;¬†France&amp;quot; ...
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   edition = col_double(),
##   ..   start_date = col_date(format = &amp;quot;&amp;quot;),
##   ..   winner_name = col_character(),
##   ..   winner_team = col_character(),
##   ..   distance = col_double(),
##   ..   time_overall = col_double(),
##   ..   time_margin = col_double(),
##   ..   stage_wins = col_double(),
##   ..   stages_led = col_double(),
##   ..   height = col_double(),
##   ..   weight = col_double(),
##   ..   age = col_double(),
##   ..   born = col_date(format = &amp;quot;&amp;quot;),
##   ..   died = col_date(format = &amp;quot;&amp;quot;),
##   ..   full_name = col_character(),
##   ..   nickname = col_character(),
##   ..   birth_town = col_character(),
##   ..   birth_country = col_character(),
##   ..   nationality = col_character()
##   .. )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(tdf_winners)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;edition&amp;quot;       &amp;quot;start_date&amp;quot;    &amp;quot;winner_name&amp;quot;   &amp;quot;winner_team&amp;quot;  
##  [5] &amp;quot;distance&amp;quot;      &amp;quot;time_overall&amp;quot;  &amp;quot;time_margin&amp;quot;   &amp;quot;stage_wins&amp;quot;   
##  [9] &amp;quot;stages_led&amp;quot;    &amp;quot;height&amp;quot;        &amp;quot;weight&amp;quot;        &amp;quot;age&amp;quot;          
## [13] &amp;quot;born&amp;quot;          &amp;quot;died&amp;quot;          &amp;quot;full_name&amp;quot;     &amp;quot;nickname&amp;quot;     
## [17] &amp;quot;birth_town&amp;quot;    &amp;quot;birth_country&amp;quot; &amp;quot;nationality&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cleaning-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Cleaning Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- tdf_winners %&amp;gt;%
  select(c(distance, time_overall, 
           height, weight, age)) %&amp;gt;%
  filter(complete.cases(.)) %&amp;gt;%
  filter(height &amp;gt;= 1.7) %&amp;gt;%
  mutate(pace = distance / time_overall) %&amp;gt;%
  select(c(pace, height, weight, age))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 62  4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-visualization&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Visualization&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = height, y = pace)) +
  geom_point(color = &amp;quot;blue&amp;quot;) +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE, color = &amp;quot;red&amp;quot;) +
  labs(title = &amp;quot;Are taller bicyclists faster?&amp;quot;,
       subtitle = &amp;quot;featuring Tour de France winners&amp;quot;,
       caption = &amp;quot;Source: TidyTuesday&amp;quot;,
       x = &amp;quot;height (meters)&amp;quot;,
       y = &amp;quot;pace (km/hr)&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-01-introduction-to-machine-learning_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = age, y = pace)) +
  geom_point(color = &amp;quot;blue&amp;quot;) +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE, color = &amp;quot;red&amp;quot;) +
  labs(title = &amp;quot;Are older bicyclists faster?&amp;quot;,
       subtitle = &amp;quot;featuring Tour de France winners&amp;quot;,
       caption = &amp;quot;Source: TidyTuesday&amp;quot;,
       x = &amp;quot;age&amp;quot;,
       y = &amp;quot;pace (km/hr)&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-01-introduction-to-machine-learning_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  ggplot(aes(x = weight, y = pace)) +
  geom_point(color = &amp;quot;blue&amp;quot;) +
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE, color = &amp;quot;red&amp;quot;) +
  labs(title = &amp;quot;Are heavier bicyclists faster?&amp;quot;,
       subtitle = &amp;quot;featuring Tour de France winners&amp;quot;,
       caption = &amp;quot;Source: TidyTuesday&amp;quot;,
       x = &amp;quot;weight (kg)&amp;quot;,
       y = &amp;quot;pace (km/hr)&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-01-introduction-to-machine-learning_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;first-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;First Model&lt;/h1&gt;
&lt;p&gt;‚ÄúWith tidymodels, we start by specifying the functional form of the model that we want using the &lt;code&gt;parsnip&lt;/code&gt; package.‚Äù&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linear Regression Model Specification (regression)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;model-engine&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;model engine&lt;/h2&gt;
&lt;p&gt;‚ÄúHowever, now that the type of model has been specified, a method for fitting or training the model can be stated using the engine. The engine value is often a mash-up of the software that can be used to fit or train the model as well as the estimation method.‚Äù&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;% 
  set_engine(&amp;quot;lm&amp;quot;) #linear model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linear Regression Model Specification (regression)
## 
## Computational engine: lm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fitting-a-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;fitting a model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_fit &amp;lt;- linear_reg() %&amp;gt;% 
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(pace ~ height + weight + age, data = df)
lm_fit&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  0ms 
## 
## Call:
## stats::lm(formula = formula, data = data)
## 
## Coefficients:
## (Intercept)       height       weight          age  
##      3.8455      21.0987      -0.1387       0.2113&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-a-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;examining a model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy(lm_fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 5
##   term        estimate std.error statistic p.value
##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 (Intercept)    3.85    12.3        0.313  0.755 
## 2 height        21.1      8.06       2.62   0.0112
## 3 weight        -0.139    0.0685    -2.03   0.0474
## 4 age            0.211    0.0979     2.16   0.0350&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;interaction-terms&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;interaction terms&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_fit_with_interaction &amp;lt;- linear_reg() %&amp;gt;% 
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(pace ~ height + weight + age + height:weight + height:age + weight:age +
        height:weight:age,
      data = df)
lm_fit_with_interaction&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  0ms 
## 
## Call:
## stats::lm(formula = formula, data = data)
## 
## Coefficients:
##       (Intercept)             height             weight                age  
##          924.8499          -444.1560           -15.6339           -27.8628  
##     height:weight         height:age         weight:age  height:weight:age  
##            7.9297            13.9352             0.4802            -0.2425&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy(lm_fit_with_interaction)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 5
##   term              estimate std.error statistic p.value
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 (Intercept)        925.     2272.        0.407   0.686
## 2 height            -444.     1287.       -0.345   0.731
## 3 weight             -15.6      32.8      -0.477   0.635
## 4 age                -27.9      80.3      -0.347   0.730
## 5 height:weight        7.93     18.5       0.428   0.670
## 6 height:age          13.9      45.5       0.306   0.761
## 7 weight:age           0.480     1.16      0.414   0.680
## 8 height:weight:age   -0.243     0.656    -0.370   0.713&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;predictions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Predictions&lt;/h1&gt;
&lt;div id=&#34;new-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;new data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SpongeBob is a 26-year-old, 1.77 m tall bicyclist who weighs 55 kg&lt;/li&gt;
&lt;li&gt;Patrick is a 25-year-old, 1.81 m tall bicyclist who weighs 75 kg&lt;/li&gt;
&lt;li&gt;Squidward is a 31-year-old, 1.89 m tall bicyclist who weighs 65 kg&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;new_contestants &amp;lt;- data.frame(name = c(&amp;quot;SpongeBob&amp;quot;, &amp;quot;Patrick&amp;quot;, &amp;quot;Squidward&amp;quot;),
                              age = c(26, 25, 31),
                              height = c(1.77, 1.81, 1.89),
                              weight = c(55, 75, 65))

mean_predictions &amp;lt;- predict(lm_fit, new_data = new_contestants)
mean_predictions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 1
##   .pred
##   &amp;lt;dbl&amp;gt;
## 1  39.1
## 2  36.9
## 3  41.3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;confidence-intervals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;confidence intervals&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CI_predictions &amp;lt;- predict(lm_fit,
                          new_data = new_contestants,
                          type = &amp;quot;conf_int&amp;quot;)
CI_predictions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   .pred_lower .pred_upper
##         &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;
## 1        37.1        41.0
## 2        35.9        38.0
## 3        39.0        43.5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;error-bars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;error bars&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_df &amp;lt;- new_contestants %&amp;gt;%
  bind_cols(mean_predictions) %&amp;gt;%
  bind_cols(CI_predictions)
plot_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        name age height weight    .pred .pred_lower .pred_upper
## 1 SpongeBob  26   1.77     55 39.05386    37.07966    41.02807
## 2   Patrick  25   1.81     75 36.91179    35.85758    37.96601
## 3 Squidward  31   1.89     65 41.25491    38.97189    43.53794&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_df %&amp;gt;%
  ggplot(aes(x = name)) +
  geom_errorbar(aes(ymin = .pred_lower,
                    ymax = .pred_upper),
                color = &amp;quot;red&amp;quot;,
                width = 0.32) +
  geom_point(aes(y = .pred), color = &amp;quot;blue&amp;quot;, size = 5) +
  labs(title = &amp;quot;Tour de Under the Sea&amp;quot;,
       subtitle = &amp;quot;Welcome the new contestants!&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;pace (km/hr)&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-01-introduction-to-machine-learning_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-splitting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Splitting&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;‚ÄúThe &lt;em&gt;training set&lt;/em&gt; is used to estimate parameters, compare models and feature engineering techniques, tune models, etc.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚ÄúThe &lt;em&gt;test set&lt;/em&gt; is held in reserve until the end of the project, at which point there should only be one or two models under serious consideration. It is used as an unbiased source for measuring final model performance.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_split &amp;lt;- initial_split(df)
train_df &amp;lt;- training(data_split)
test_df &amp;lt;- testing(data_split)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste(&amp;quot;The number of observations in the training set is:&amp;quot;, nrow(train_df)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;The number of observations in the training set is: 47&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste(&amp;quot;The number of observations in the testing set is:&amp;quot;, nrow(test_df)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;The number of observations in the testing set is: 15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-the-split&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;visualizing the split&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_split &amp;lt;- initial_split(df)
train_df &amp;lt;- training(data_split)
test_df &amp;lt;- testing(data_split)

train_df %&amp;gt;%
  ggplot(aes(x = height, y = pace)) +
  geom_point(aes(color = &amp;quot;training set&amp;quot;), 
             # color = &amp;quot;black&amp;quot;
             ) +
  geom_smooth(method = &amp;quot;lm&amp;quot;,
              aes(x = height, y = pace),
              color = &amp;quot;black&amp;quot;,
              data = train_df,
               se = FALSE) +
  geom_point(aes(x = height, y = pace, color = &amp;quot;testing set&amp;quot;),
             # color = &amp;quot;red&amp;quot;,
             data = test_df,
             size = 3) +
  labs(title = &amp;quot;Training and Testing Sets&amp;quot;,
       subtitle = &amp;quot;approx 75-25 percent split&amp;quot;,
       caption = &amp;quot;Math 32&amp;quot;,
       x = &amp;quot;height (meters)&amp;quot;,
       y = &amp;quot;pace (km/hr)&amp;quot;) +
  scale_color_manual(name = &amp;quot;Data Split&amp;quot;,
                     breaks = c(&amp;quot;training set&amp;quot;, &amp;quot;testing set&amp;quot;),
                     values = c(&amp;quot;training set&amp;quot; = &amp;quot;black&amp;quot;,
                                &amp;quot;testing set&amp;quot; = &amp;quot;red&amp;quot;)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-05-01-introduction-to-machine-learning_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Tip: run the last code block several times (keyboard shortcut: CTRL-SHFT-ENTER) for the full effect!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Bioconductor</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-bioconductor/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-bioconductor/</guid>
      <description>


&lt;p&gt;‚Äú&lt;a href=&#34;https://www.bioconductor.org/&#34;&gt;Bioconductor&lt;/a&gt; provides tools for the analysis and comprehension of high-throughput genomic data. Bioconductor uses the R statistical programming language, and is open source and open development.‚Äù&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bioconductor.org/&#34;&gt;https://www.bioconductor.org/&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;dplyr&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;installation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;To install core packages, type the following in an R command window.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This may take around 5 minutes&lt;/li&gt;
&lt;li&gt;When the option for updating packages appears, type in ‚Äúa‚Äù for ‚Äúall‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#leave as eval = FALSE when knitting

if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
    install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install()&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;installing-bioconductor-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Installing Bioconductor packages&lt;/h2&gt;
&lt;p&gt;There are about 20000 packages in the &lt;em&gt;Bioconductor&lt;/em&gt; universe. For now, let us install a couple of the more popular packages with the following code. To install a &lt;code&gt;BioConductor&lt;/code&gt; package, simply type in the name of the package in quotes inside of &lt;code&gt;BiocManager::install()&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This may take around 5 minutes&lt;/li&gt;
&lt;li&gt;Hereafter, when the option for updating packages appears, type in ‚Äún‚Äù for ‚Äúno‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#leave as eval = FALSE when knitting

BiocManager::install(&amp;quot;GenomicFeatures&amp;quot;)
BiocManager::install(&amp;quot;Biostrings&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploring-genomicfeatures&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Exploring GenomicFeatures&lt;/h1&gt;
&lt;p&gt;The following instructions were extracted from the vignette for Genomic Features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;browseVignettes(package = &#34;GenomicFeatures&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Load the &lt;code&gt;GenomicFeatures&lt;/code&gt; package. It is suggested that you load the packages with the following code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

suppressPackageStartupMessages(library(&amp;#39;GenomicFeatures&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;‚ÄúThe &lt;code&gt;GenomicFeatures&lt;/code&gt; package retrieves and manages transcript-related features fromthe UCSC Genome Bioinformatics and BioMart data resources. The package isuseful for ChIP-chip, ChIP-seq, and RNA-seq analyses.‚Äù&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;txdb-objects&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;TxDb Objects&lt;/h2&gt;
&lt;p&gt;&#34;The &lt;code&gt;GenomicFeatures&lt;/code&gt; package uses TxDb objects to store transcript metadata. This class maps the 5‚Äô and 3‚Äô untranslated regions (UTRs), protein coding sequences(CDSs) and exons for a set of mRNA transcripts to their associated genome. TxDb objects have numerous accessors functions to allow such features to be retrieved individually or grouped together in a way that reflects the underlying biology.&lt;/p&gt;
&lt;p&gt;All TxDb objects are backed by a SQLite database that manages genomic locations and the relationships between pre-processed mRNA transcripts, exons, protein coding sequences, and their related gene identifiers.&#34;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

samplefile &amp;lt;- system.file(&amp;quot;extdata&amp;quot;,
                          &amp;quot;hg19_knownGene_sample.sqlite&amp;quot;,
                          package=&amp;quot;GenomicFeatures&amp;quot;)
txdb &amp;lt;- loadDb(samplefile)
txdb&lt;/code&gt;&lt;/pre&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Write a couple of sentences about what you observe in the output (the description of the txdb sample file)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-and-viewing-a-sequence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Loading and Viewing a Sequence&lt;/h2&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Install the following packages (i.e.¬†figure out how from some code earlier in this tutorial)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BSgenome.Hsapiens.UCSC.hg19&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TxDb.Hsapiens.UCSC.hg19.knownGene&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Run the following code and then write a couple of sentences about what you observe in the output.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)

tx_seqs1 &amp;lt;- extractTranscriptSeqs(Hsapiens,
                                  TxDb.Hsapiens.UCSC.hg19.knownGene,
                                  use.names=TRUE)
suppressWarnings(translate(tx_seqs1))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploring-biostrings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Exploring Biostrings&lt;/h1&gt;
&lt;p&gt;The following instructions were extracted from the vignette for &lt;code&gt;Biostrings&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;browseVignettes(package = &#34;Biostrings&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Install the following packages (i.e.¬†figure out how from some code earlier in this tutorial)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hgu95av2probe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hgu95av2cdf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Load the &lt;code&gt;Biostrings&lt;/code&gt; package. It is suggested that you load the packages with the following code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

suppressPackageStartupMessages(library(&amp;#39;Biostrings&amp;#39;))
suppressPackageStartupMessages(library(&amp;#39;hgu95av2probe&amp;#39;))
suppressPackageStartupMessages(library(&amp;#39;hgu95av2cdf&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The following code will load an example of a ‚ÄúLarge DNAStringSet‚Äù and perform a couple of simple data analyses. Run the code and write a couple of sentences about the results.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

this_DNAString_set &amp;lt;- DNAStringSet(hgu95av2probe)
this_DNAString_set_bc &amp;lt;- alphabetFrequency(this_DNAString_set, baseOnly = TRUE)
nrow(this_DNAString_set_bc)
head(this_DNAString_set_bc)
alphabetFrequency(this_DNAString_set_bc, baseOnly=TRUE, collapse=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The following code will perform a calculation called the &lt;code&gt;GC content&lt;/code&gt; of a DNA sequence and graph the resulting amounts as a histogram. Run the code and write a couple of sentences about the results.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set as eval = TRUE when knitting

this_DNAString_df &amp;lt;- data.frame(this_DNAString_set_bc)

# alas &amp;quot;T&amp;quot; is treated as &amp;quot;TRUE&amp;quot; in R, so let&amp;#39;s use the full names of the nucleotides
colnames(this_DNAString_df) &amp;lt;- c(&amp;quot;Adenine&amp;quot;, &amp;quot;Cytosine&amp;quot;, &amp;quot;Guanine&amp;quot;, &amp;quot;Thymine&amp;quot;, &amp;quot;other&amp;quot;)

this_DNAString_df %&amp;gt;%
  select(c(&amp;quot;Adenine&amp;quot;, &amp;quot;Cytosine&amp;quot;, &amp;quot;Guanine&amp;quot;, &amp;quot;Thymine&amp;quot;)) %&amp;gt;%
  mutate(GC_content = 100*(Cytosine + Guanine) / 
           (Adenine + Cytosine + Guanine + Thymine)) %&amp;gt;%
  ggplot(aes(x = GC_content, fill = ..x..)) +
  geom_histogram(binwidth = 5) + 
  labs(title = &amp;quot;Affymetrix Human Genome U95 Set annotation data&amp;quot;,
       subtitle = &amp;quot;GC Content of hgu95av2probe&amp;quot;,
       caption = &amp;quot;Source: Bioconductor&amp;quot;,
       x = &amp;quot;GC content (percentage)&amp;quot;) +
  scale_fill_gradient(low = &amp;quot;yellow&amp;quot;, high= &amp;quot;blue&amp;quot;) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Troubleshooting for R, RStudio, and Tidyverse installation</title>
      <link>https://dsollberger.netlify.com/post/r-troubleshooting-for-students/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/r-troubleshooting-for-students/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#why-doesnt-my-r-look-like-your-r-software&#34;&gt;Why doesn‚Äôt my R look like your R [software]?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rstudio-says-that-it-cannot-find-the-r-binaries.&#34;&gt;RStudio says that it cannot find the R binaries.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#we-cannot-install-software-on-ipad-chromebook-etc.&#34;&gt;We cannot install software (on iPad, Chromebook, etc.)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tidyverse-cannot-be-found&#34;&gt;tidyverse cannot be found&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#package-is-not-available-for-r-version&#34;&gt;[package] is not available for R version ‚Ä¶&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#there-is-no-package-rlang&#34;&gt;there is no package ‚Äòrlang‚Äô&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#there-is-no-package-broom&#34;&gt;there is no package ‚Äòbroom‚Äô&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rlang-andor-broom-still-do-not-work&#34;&gt;rlang and/or broom still do not work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-do-we-know-which-is-the-rmd-file-and-which-is-the-html-file&#34;&gt;How do we know which is the RMD file and which is the HTML file?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;In this site, I hope to address most of the issues that appear when we try to install &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;RStudio&lt;/code&gt;, and &lt;code&gt;tidyverse&lt;/code&gt; in the classroom setting.&lt;/p&gt;
&lt;div id=&#34;why-doesnt-my-r-look-like-your-r-software&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Why doesn‚Äôt my R look like your R [software]?&lt;/h1&gt;
&lt;p&gt;There are two programs to install: &lt;code&gt;R&lt;/code&gt;, then &lt;code&gt;RStudio&lt;/code&gt;. Please follow the installation instructions at &lt;a href=&#34;https://dsollberger.netlify.com/post/r-installation-for-students/&#34; class=&#34;uri&#34;&gt;https://dsollberger.netlify.com/post/r-installation-for-students/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rstudio-says-that-it-cannot-find-the-r-binaries.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;RStudio says that it cannot find the R binaries.&lt;/h1&gt;
&lt;p&gt;There are two programs to install: &lt;code&gt;R&lt;/code&gt;, then &lt;code&gt;RStudio&lt;/code&gt;. Please follow the installation instructions at &lt;a href=&#34;https://dsollberger.netlify.com/post/r-installation-for-students/&#34; class=&#34;uri&#34;&gt;https://dsollberger.netlify.com/post/r-installation-for-students/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;we-cannot-install-software-on-ipad-chromebook-etc.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;We cannot install software (on iPad, Chromebook, etc.)&lt;/h1&gt;
&lt;p&gt;There is a fantastic alternative at &lt;a href=&#34;https://rstudio.cloud/&#34;&gt;RStudio Cloud&lt;/a&gt;. That is, one can do their R programming online. There will be a few more steps involved compared to what we do in &lt;code&gt;RStudio&lt;/code&gt; Desktop, but past students have gotten &lt;code&gt;RStudio Cloud&lt;/code&gt; to work.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidyverse-cannot-be-found&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;tidyverse cannot be found&lt;/h1&gt;
&lt;p&gt;We need to install code packages before using code packages. Run &lt;code&gt;install.packages(&#34;tidyverse&#34;)&lt;/code&gt; in the console (lower-left area). The installation will take up to 5 minutes. This has to be done only once during the semester.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;package-is-not-available-for-r-version&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;[package] is not available for R version ‚Ä¶&lt;/h1&gt;
&lt;p&gt;To ensure compatibility between &lt;code&gt;R&lt;/code&gt; and code packages, the R community almost always asks users to use the newest version of &lt;code&gt;R&lt;/code&gt;. Please install the newest versions of &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;RStudio&lt;/code&gt;. This semester we are using &lt;code&gt;R&lt;/code&gt; version 3.6.2 and &lt;code&gt;RStudio&lt;/code&gt; version 1.2.5033.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;there-is-no-package-rlang&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;there is no package ‚Äòrlang‚Äô&lt;/h1&gt;
&lt;p&gt;Run this command in the console&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;install.packages(&#34;dplyr&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If a choice appears that says something like &lt;code&gt;Do you want to install from sources the package which needs compilation?.&lt;/code&gt;, select ‚ÄúNo‚Äù.&lt;/p&gt;
&lt;p&gt;Alternatively: &lt;a href=&#34;https://stackoverflow.com/questions/49721356/trouble-downloading-rlang-with-tidyverse&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/49721356/trouble-downloading-rlang-with-tidyverse&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;there-is-no-package-broom&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;there is no package ‚Äòbroom‚Äô&lt;/h1&gt;
&lt;p&gt;The explanation would be a deep dive into the notion of &lt;em&gt;dependencies&lt;/em&gt; (beyond the scope of the course). For now, we dive right into this case‚Äôs dependencies. Run these commands in the console.&lt;/p&gt;
&lt;p&gt;If a choice appears that says something like &lt;code&gt;Do you want to install from sources the package which needs compilation?.&lt;/code&gt;, select ‚ÄúNo‚Äù.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;install.packages(&#34;backports&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then &lt;code&gt;install.packages(&#34;zeallot&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then &lt;code&gt;install.packages(&#34;broom&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;then &lt;code&gt;install.packages(&#34;tidyverse&#34;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://community.rstudio.com/t/fail-to-install-package-broom/11307/3&#34; class=&#34;uri&#34;&gt;https://community.rstudio.com/t/fail-to-install-package-broom/11307/3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.rstudio.com/t/error-lazy-loading-failed-for-package-broom/50777&#34; class=&#34;uri&#34;&gt;https://community.rstudio.com/t/error-lazy-loading-failed-for-package-broom/50777&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;rlang-andor-broom-still-do-not-work&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;rlang and/or broom still do not work&lt;/h1&gt;
&lt;p&gt;Let‚Äôs try this. &lt;code&gt;tidyverse&lt;/code&gt; is a &lt;em&gt;set&lt;/em&gt; of packages that are supposed to work together well and emulate programming practices from other programming languages. In our introductory forays into &lt;code&gt;R&lt;/code&gt; programming, we do not need every package in the &lt;code&gt;tidyverse&lt;/code&gt;. Therefore, the simplest work-around is to load the needed packages individually.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#### instead of library(&amp;quot;tidyverse&amp;quot;) ####
library(&amp;quot;dplyr&amp;quot;)    #for the pipe function %&amp;gt;% and other SQL commands
library(&amp;quot;ggplot2&amp;quot;)  #modern data visualization
#library(&amp;quot;readr&amp;quot;)    #to load CSV data files
#library(&amp;quot;readxl&amp;quot;)   #to load Excel data files
#library(&amp;quot;stringr&amp;quot;)  #manipulate strings and regular expressions
#library(&amp;quot;tidyr&amp;quot;)    #to reshape data frames with functions like gather or spread&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;how-do-we-know-which-is-the-rmd-file-and-which-is-the-html-file&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How do we know which is the RMD file and which is the HTML file?&lt;/h1&gt;
&lt;p&gt;It will be useful if you can see file types in your computer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;instructions for &lt;a href=&#34;http://kb.winzip.com/kb/entry/26/&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;instructions for &lt;a href=&#34;https://www.idownloadblog.com/2014/10/29/how-to-show-or-hide-filename-extensions-in-os-x-yosemite/&#34;&gt;Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, the HTML file will probably have a similar icon as your web browser (Chrome, Firefox, etc.)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Installation</title>
      <link>https://dsollberger.netlify.com/post/r-installation-for-students/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/r-installation-for-students/</guid>
      <description>


&lt;p&gt;If you are planning to do the &lt;code&gt;R&lt;/code&gt; assignments on your own computer (recommended), then here is a quick outline for obtaining the software.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;There are two separate software programs&lt;/em&gt;. Most people find it easier to use &lt;code&gt;RStudio&lt;/code&gt;. than just &lt;code&gt;R&lt;/code&gt;, but you need to install &lt;code&gt;R&lt;/code&gt; first before installing &lt;code&gt;RStudio&lt;/code&gt; (analogously speaking: you need an cell phone before you can use an cell phone case).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If you have R and RStudio from a previous course, you still need to update to the current versions!&lt;/em&gt; (version 3.6.2 of R and version 1.2.5033 of RStudio)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;downloading-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Downloading R&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;The Comprehensive R Archive Network&lt;/a&gt; (CRAN)&lt;/p&gt;
&lt;p&gt;Windows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click ‚ÄúDownload R for Windows‚Äù&lt;/li&gt;
&lt;li&gt;click ‚Äúinstall R for the first time‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúDownload R 3.6.2 for Windows‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúSave File‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click ‚ÄúDownload R for (Mac) OS X‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúR-3.6.2.pkg‚Äù&lt;/li&gt;
&lt;li&gt;click ‚ÄúOk‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installing R&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows: double-check icon for R-3.6.2-win.exe&lt;/li&gt;
&lt;li&gt;Mac: double-click icon for R-3.6.2.pkg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the rest of these steps, it is okay to accept the default selections (but I will outline them here for posterity):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;give computer permission to install&lt;/li&gt;
&lt;li&gt;select language&lt;/li&gt;
&lt;li&gt;agree to GNU General Public License&lt;/li&gt;
&lt;li&gt;select destination location&lt;/li&gt;
&lt;li&gt;select components&lt;/li&gt;
&lt;li&gt;Startup options: select ‚ÄúNo (accept defaults)‚Äù&lt;/li&gt;
&lt;li&gt;select Start Menu Folder&lt;/li&gt;
&lt;li&gt;select Additional Tasks&lt;/li&gt;
&lt;li&gt;(wait a minute or two for installation to take place)&lt;/li&gt;
&lt;li&gt;‚ÄúClick Finish to exit Setup‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;downloading-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Downloading RStudio&lt;/h1&gt;
&lt;p&gt;Go to the &lt;a href=&#34;https://rstudio.com/products/rstudio/download/#download&#34;&gt;RStudio Desktop download page&lt;/a&gt; (i.e.¬†we are using the &lt;em&gt;free&lt;/em&gt;, desktop version of RStudio)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows: click RStudio-1.2.5033.exe, click ‚ÄúSave File‚Äù&lt;/li&gt;
&lt;li&gt;Mac: click RStudio-1.2.5033.dmg, click ‚ÄúOk‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installing RStudio&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows: double-check icon for RStudio-1.2.5033.exe&lt;/li&gt;
&lt;li&gt;Mac: double-click icon for RStudio-1.2.5033.dmg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the rest of these steps, it is okay to accept the default selections (but I will outline them here for posterity):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;give computer permission to install&lt;/li&gt;
&lt;li&gt;‚ÄúClick Next to continue‚Äù&lt;/li&gt;
&lt;li&gt;Choose Install Location&lt;/li&gt;
&lt;li&gt;Choose Start Menu Folder&lt;/li&gt;
&lt;li&gt;(wait a minute or two for installation to take place)&lt;/li&gt;
&lt;li&gt;‚ÄúClick Finish to close Setup‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;code-packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Code Packages&lt;/h1&gt;
&lt;p&gt;For R coding, we will often need more code‚Äîcalled code packages. To ease our coding sessions, please run the following lines of code before class (in the lower-left &lt;code&gt;console&lt;/code&gt; area of RStudio, just has to be done once this semester).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;package_list &amp;lt;- c(&amp;quot;tidyverse&amp;quot;, &amp;quot;readxl&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;titanic&amp;quot;)
install.packages(package_list)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;file-types&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;File Types&lt;/h1&gt;
&lt;p&gt;Also, while we are learning how I want homework assignments to be submitted, it will be useful if you can see file types in your computer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;instructions for &lt;a href=&#34;http://kb.winzip.com/kb/entry/26/&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;instructions for &lt;a href=&#34;https://www.idownloadblog.com/2014/10/29/how-to-show-or-hide-filename-extensions-in-os-x-yosemite/&#34;&gt;Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Duolingo Leagues</title>
      <link>https://dsollberger.netlify.com/post/duolingo-leagues/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/duolingo-leagues/</guid>
      <description>


&lt;p&gt;&lt;code&gt;Duolingo&lt;/code&gt;, the language learning app, places users in groups of 50 and assigns a &lt;code&gt;league&lt;/code&gt; to each user to encourage competition. The leagues are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bronze, Silver, Gold, Sapphire, Ruby, Emerald, Amethyst, Pearl, Obsidian, and Diamond (in that increasing order)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;what-proportion-of-duolingo-users-are-in-each-league&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What proportion of Duolingo users are in each league?&lt;/h1&gt;
&lt;p&gt;The rules are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;everyone starts in the Bronze League&lt;/li&gt;
&lt;li&gt;the top 15 percent of each group gets promoted to the next league up (measured weekly)&lt;/li&gt;
&lt;li&gt;the bottom 10 percent of each group is related downward&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, I will try out some stochastic processes calculations to answer that question.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;leagues &amp;lt;- c(&amp;quot;Bronze&amp;quot;, &amp;quot;Silver&amp;quot;, &amp;quot;Gold&amp;quot;, &amp;quot;Sapphire&amp;quot;, &amp;quot;Ruby&amp;quot;,
             &amp;quot;Emerald&amp;quot;, &amp;quot;Amethyst&amp;quot;, &amp;quot;Pearl&amp;quot;, &amp;quot;Obsidian&amp;quot;, &amp;quot;Diamond&amp;quot;)

transition_matrix &amp;lt;- matrix( rep(0, 100), 10)

# trying shortcuts
diag(transition_matrix[-10,-1]) &amp;lt;- 15 #top 15 percent of each group gets promoted
diag(transition_matrix[-1,-10]) &amp;lt;- 10 #bottom 10 percent of each group is relegated
diag(transition_matrix)         &amp;lt;- 75 #the rest stay where they are

# fix the corners
transition_matrix[1,1]    &amp;lt;- 85
transition_matrix[10, 10] &amp;lt;- 85

# make row-stochastic (i.e. so each row adds up to one)
transition_matrix &amp;lt;- transition_matrix/100

# R allows user to label rows and columns
rownames(transition_matrix) &amp;lt;- leagues
colnames(transition_matrix) &amp;lt;- leagues

print(transition_matrix)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          Bronze Silver Gold Sapphire Ruby Emerald Amethyst Pearl Obsidian
## Bronze     0.85   0.15 0.00     0.00 0.00    0.00     0.00  0.00     0.00
## Silver     0.10   0.75 0.15     0.00 0.00    0.00     0.00  0.00     0.00
## Gold       0.00   0.10 0.75     0.15 0.00    0.00     0.00  0.00     0.00
## Sapphire   0.00   0.00 0.10     0.75 0.15    0.00     0.00  0.00     0.00
## Ruby       0.00   0.00 0.00     0.10 0.75    0.15     0.00  0.00     0.00
## Emerald    0.00   0.00 0.00     0.00 0.10    0.75     0.15  0.00     0.00
## Amethyst   0.00   0.00 0.00     0.00 0.00    0.10     0.75  0.15     0.00
## Pearl      0.00   0.00 0.00     0.00 0.00    0.00     0.10  0.75     0.15
## Obsidian   0.00   0.00 0.00     0.00 0.00    0.00     0.00  0.10     0.75
## Diamond    0.00   0.00 0.00     0.00 0.00    0.00     0.00  0.00     0.10
##          Diamond
## Bronze      0.00
## Silver      0.00
## Gold        0.00
## Sapphire    0.00
## Ruby        0.00
## Emerald     0.00
## Amethyst    0.00
## Pearl       0.00
## Obsidian    0.15
## Diamond     0.85&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Knowing some about stochastic processes, we can either implement an initial distribution and employ matrix-vector multiplication over many iterations, or we can find an eigenvector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;findStatDist &amp;lt;- function(P){
  # This function will compute the stationary distribution for a transition matrix
  # Input: row-stochastic matrix P
  # Output: row vector pi_vec
  
  # obtain left-eigenvector for lambda = 1
  x &amp;lt;- eigen(t(P))$vectors[,1] 
  
  # normalize the eigenvector in the one-norm
  pi_vec &amp;lt;- x / sum(x)
  pi_vec #return this vector
}

answer &amp;lt;- as.data.frame(round(100*findStatDist(transition_matrix)))

# R allows user to label rows and columns
rownames(answer) &amp;lt;- leagues
colnames(answer) &amp;lt;- &amp;quot;percentage&amp;quot;

print(answer)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          percentage
## Bronze            3
## Silver            4
## Gold              5
## Sapphire          7
## Ruby              9
## Emerald          11
## Amethyst         13
## Pearl            15
## Obsidian         16
## Diamond          17&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hikes I&#39;ve Completed</title>
      <link>https://dsollberger.netlify.com/post/hikes-i-ve-completed/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/hikes-i-ve-completed/</guid>
      <description>


&lt;p&gt;Here I will plot some of the hikes I have done as elevation (from sea level) versus distance. I was inspired by &lt;a href=&#34;https://www.reddit.com/r/dataisbeautiful/comments/bwm184/my_first_attempt_at_data_visualization_hikes_ive/&#34;&gt;this Reddit post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today‚Äôs code was great practice with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_segment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_label_repel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and using &lt;code&gt;xlim&lt;/code&gt; and &lt;code&gt;ylim&lt;/code&gt; to expand the plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggrepel)
library(tidyverse)
library(readxl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_info &amp;lt;- read_excel(&amp;quot;hikes.xlsx&amp;quot;, sheet = &amp;quot;info&amp;quot;)
df_info %&amp;gt;% print()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 6
##   Region    trail                distance trailhead elevation  peak
##   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Tahoe     Mt Tallac                 5.1      6445      3290  9735
## 2 Tahoe     Flume                     6.4      6980      1420  8400
## 3 Tahoe     Mt Rose                   5.4      8388      2388 10776
## 4 Tahoe     Relay Peak                4.7      8388      1515  9903
## 5 Tahoe     Donner Peak               1.9      6175       882  7057
## 6 Yosemite  Four-Mile                 4.7      4000      3200  7200
## 7 Yosemite  Nevada Falls              4.4      4000      2191  6191
## 8 Yosemite  Upper Yosemite Falls      3.6      4000      3175  7175
## 9 Mt Diablo Waterfall                 4         374      1709  2083&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_info %&amp;gt;%
  mutate(start = 0) %&amp;gt;% #the first x-value for each line segment
  ggplot() +
  geom_segment(aes(x = start, y = trailhead, 
                   xend = distance, yend = peak, 
                   color = Region)) +
  geom_label_repel(aes(x = distance, y = peak, 
                       color = Region,
                       label = trail),
                   box.padding = 1,
                   segment.color = &amp;quot;grey50&amp;quot;,
                   segment.size = 0.5) +
  geom_point(aes(x = distance, y = peak, color = Region), size = 5) +
  labs(title = &amp;quot;Hikes I&amp;#39;ve Completed&amp;quot;,
       subtitle = &amp;quot;Derek Sollberger&amp;quot;,
       caption = &amp;quot;2010 to 2019&amp;quot;,
       x = &amp;quot;One-Way Distance (in miles)&amp;quot;,
       y = &amp;quot;Elevation (in feet)&amp;quot;) +
  theme_minimal() +
  xlim(0,8) +
  ylim(0, 15000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-01-11-hikes-i-ve-completed_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gender of Frasier Characters</title>
      <link>https://dsollberger.netlify.com/post/gender-of-frasier-characters/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/gender-of-frasier-characters/</guid>
      <description>


&lt;p&gt;‚ÄúI am not a man‚Ä¶‚Äù&lt;/p&gt;
&lt;p&gt;For work, I need to take a list of names and try to infer the gender. Here I try an R package on the character names in the TV show &lt;em&gt;Fraiser&lt;/em&gt;.&lt;/p&gt;
&lt;div id=&#34;the-gender-package&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The gender package&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;gender&amp;quot;) #works fine

## user needs to download database too
#install_genderdata_package() #did not work (&amp;quot;error reading from connection&amp;quot;)

## as suggested by the bug report at https://github.com/ropensci/drat/issues/6
#install.packages(&amp;quot;devtools&amp;quot;)
#library(devtools)
#devtools::install_github(&amp;quot;ropensci/genderdata&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;trial-run&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Trial Run&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gender)
library(ggpubr)
library(tidyverse)

gender(&amp;quot;frasier&amp;quot;, method = &amp;quot;ssa&amp;quot;, years = c(1940, 1990))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 6
##   name    proportion_male proportion_female gender year_min year_max
##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 frasier               1                 0 male       1940     1990&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cast-of-characters&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Cast of Characters&lt;/h1&gt;
&lt;p&gt;Now I will try to run the &lt;code&gt;gender&lt;/code&gt; function over a list of names (criteria: characters that appeared in at least 6 episodes).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#making a data frame of characters (i.e. the TV show characters)
name &amp;lt;- c(&amp;quot;frasier&amp;quot;, &amp;quot;daphne&amp;quot;, &amp;quot;niles&amp;quot;, &amp;quot;roz&amp;quot;, &amp;quot;martin&amp;quot;, 
          &amp;quot;eddie&amp;quot;, &amp;quot;bulldog&amp;quot;, &amp;quot;kenny&amp;quot;, &amp;quot;gil&amp;quot;, &amp;quot;noel&amp;quot;, 
          &amp;quot;gertrude&amp;quot;, &amp;quot;donny&amp;quot;, &amp;quot;lilith&amp;quot;, &amp;quot;bebe&amp;quot;, &amp;quot;mel&amp;quot;,
          &amp;quot;ronee&amp;quot;, &amp;quot;alice&amp;quot;, &amp;quot;julia&amp;quot;, &amp;quot;frederick&amp;quot;, &amp;quot;simon&amp;quot;,
          &amp;quot;lana&amp;quot;, &amp;quot;sherry&amp;quot;, &amp;quot;kirby&amp;quot;, &amp;quot;charlotte&amp;quot;)
start_year &amp;lt;- 1940
end_year &amp;lt;- 1990
df &amp;lt;- data.frame(name, start_year, end_year, stringsAsFactors=FALSE)
main_cast &amp;lt;- df %&amp;gt;% slice(1:5)

gender_df(df, method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 23 x 6
##    name      proportion_male proportion_female gender year_min year_max
##  * &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 alice              0.0033            0.997  female     1940     1990
##  2 bebe               0                 1      female     1940     1990
##  3 charlotte          0.0026            0.997  female     1940     1990
##  4 daphne             0.0004            1.00   female     1940     1990
##  5 donny              0.996             0.0039 male       1940     1990
##  6 eddie              0.959             0.0414 male       1940     1990
##  7 frasier            1                 0      male       1940     1990
##  8 frederick          0.995             0.0052 male       1940     1990
##  9 gertrude           0.0008            0.999  female     1940     1990
## 10 gil                1                 0      male       1940     1990
## # ... with 13 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sorting-the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sorting the Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results &amp;lt;- gender_df(df, method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;))

results_classified &amp;lt;- results %&amp;gt;%
  select(name, proportion_male, gender) %&amp;gt;%
  arrange(desc(proportion_male)) 

ggtexttable(results_classified, rows = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-01-09-gender-of-frasier-characters_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that ‚ÄúMel‚Äù is a female character in the TV show. The calculations are tougher when the input is a nickname.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# just the main cast
main_cast_classified &amp;lt;- gender_df(main_cast, 
          method = &amp;quot;ssa&amp;quot;, name_col = &amp;quot;name&amp;quot;, 
          year_col = c(&amp;quot;start_year&amp;quot;, &amp;quot;end_year&amp;quot;)) %&amp;gt;%
  select(name, proportion_male, gender) %&amp;gt;%
  arrange(desc(proportion_male))

ggtexttable(main_cast_classified, rows = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2020-01-09-gender-of-frasier-characters_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>https://dsollberger.netlify.com/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;Academic supports the popular &lt;a href=&#34;https://plot.ly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly&lt;/a&gt; chart format.&lt;/p&gt;
&lt;p&gt;Save your Plotly JSON in your page folder, for example &lt;code&gt;chart.json&lt;/code&gt;, and then add the &lt;code&gt;{{&amp;lt; chart data=&amp;quot;chart&amp;quot; &amp;gt;}}&lt;/code&gt; shortcode where you would like the chart to appear.&lt;/p&gt;
&lt;p&gt;Demo:&lt;/p&gt;


&lt;div id=&#34;chart-128473596&#34; class=&#34;chart&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  (function() {
    let a = setInterval( function() {
      if ( typeof window.Plotly === &#39;undefined&#39; ) {
        return;
      }
      clearInterval( a );

      Plotly.d3.json(&#34;./line-chart.json&#34;, function(chart) {
        Plotly.plot(&#39;chart-128473596&#39;, chart.data, chart.layout, {responsive: true});
      });
    }, 500 );
  })();
&lt;/script&gt;
&lt;p&gt;You might also find the &lt;a href=&#34;http://plotly-json-editor.getforge.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly JSON Editor&lt;/a&gt; useful.&lt;/p&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$...$&lt;/code&gt; or &lt;code&gt;$$...$$&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}&lt;em&gt;{n}) - \nabla F(\mathbf{x}&lt;/em&gt;{n-1}) \right |^2}$$&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$\nabla F(\mathbf{x}_{n})$&lt;/code&gt; renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp;amp; \text{if }k=1, \\\\
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$f(k;p_{0}^{&lt;em&gt;}) = \begin{cases}p_{0}^{&lt;/em&gt;} &amp;amp; \text{if }k=1, \\
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;callouts&#34;&gt;Callouts&lt;/h3&gt;
&lt;p&gt;Academic supports a &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/#callouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for callouts&lt;/a&gt;, also referred to as &lt;em&gt;asides&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% callout note %}} ... {{% /callout %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% callout note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /callout %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;spoilers&#34;&gt;Spoilers&lt;/h3&gt;
&lt;p&gt;Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; spoiler text=&amp;quot;Click to view the spoiler&amp;quot; &amp;gt;}}
You found me!
{{&amp;lt; /spoiler &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Click to view the spoiler&lt;/summary&gt;
  &lt;p&gt;You found me!&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal  
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python  
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it üôå&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>https://dsollberger.netlify.com/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;4/6/2019&lt;/p&gt;
&lt;p&gt;Dear DatASci,&lt;/p&gt;
&lt;p&gt;I write to ask you for your input in developing a group response to these recent events.&lt;/p&gt;
&lt;p&gt;Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here: &lt;a href=&#34;https://www.datacamp.com/community/blog/note-to-our-community&#34; class=&#34;uri&#34;&gt;https://www.datacamp.com/community/blog/note-to-our-community&lt;/a&gt;. To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event. The employee reported the event a few months later, which means that the official statement finally appeared about a full year later. Furthermore, DataCamp only released that statement after a unified complaint from over 100 instructors.&lt;/p&gt;
&lt;p&gt;At this moment, I wish to personally condemn the perpetrator and the leadership at DataCamp over their actions and mismanagement of their company culture.&lt;/p&gt;
&lt;p&gt;It is simple to state that I do not condone the behavior of that employee and the peers. However, it is difficult to reconcile the event with my relationship with the DataCamp company itself. The educational material has allowed me to increase my status at my own workplace, and I have subsequently and frequently recommended DataCamp to those who also wished to improve their technical skills. During the Spring semester and Summer session of 2018, I led efforts to connect our DatASci club and graduate students with the online courses offered by DataCamp.&lt;/p&gt;
&lt;p&gt;In addition to coordinating the use of the education product, I have met several wonderful DataCamp employees and instructors at conferences‚Äîall while being unaware of negligent events happening in the background. I might have even met the perpetrator too.&lt;/p&gt;
&lt;p&gt;This news coming out of DataCamp is quite antithetical to the culture of the data science community. Just the day before in the Twitter space, we were praising the data science community on being diverse, inclusive, and very genial to programmers of all skill levels. Unfortunately, the actions made by DataCamp is a step backward and will leave a scar. We can do better.&lt;/p&gt;
&lt;p&gt;The views here presented in this letter are my own and do not reflect the opinion or stances of my colleagues at UC Merced for the simple reason that this letter is the dissemination of the news to my peers in the DatASci graduate student organization and my coworkers at UC Merced. If we need to solidify a view of the DataCamp business and our relationship with this education partner and the values of vendors, I will welcome future conversation about these matters.&lt;/p&gt;
&lt;p&gt;Sincerely,
Derek Sollberger
Continuing Lecturer at UC Merced&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>https://dsollberger.netlify.com/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;4/6/2019&lt;/p&gt;
&lt;p&gt;Dear DatASci,&lt;/p&gt;
&lt;p&gt;I write to ask you for your input in developing a group response to these recent events.&lt;/p&gt;
&lt;p&gt;Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here:  &lt;a href=&#34;https://www.datacamp.com/community/blog/note-to-our-community&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.datacamp.com/community/blog/note-to-our-community&lt;/a&gt;.  To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event.  The employee reported the event a few months later, which means that the official statement finally appeared about a full year later.  Furthermore, DataCamp only released that statement after a unified complaint from over 100 instructors.&lt;/p&gt;
&lt;p&gt;At this moment, I wish to personally condemn the perpetrator and the leadership at DataCamp over their actions and mismanagement of their company culture.&lt;/p&gt;
&lt;p&gt;It is simple to state that I do not condone the behavior of that employee and the peers.  However, it is difficult to reconcile the event with my relationship with the DataCamp company itself.  The educational material has allowed me to increase my status at my own workplace, and I have subsequently and frequently recommended DataCamp to those who also wished to improve their technical skills.  During the Spring semester and Summer session of 2018, I led efforts to connect our DatASci club and graduate students with the online courses offered by DataCamp.&lt;/p&gt;
&lt;p&gt;In addition to coordinating the use of the education product, I have met several wonderful DataCamp employees and instructors at conferences&amp;mdash;all while being unaware of negligent events happening in the background.  I might have even met the perpetrator too.&lt;/p&gt;
&lt;p&gt;This news coming out of DataCamp is quite antithetical to the culture of the data science community.  Just the day before in the Twitter space, we were praising the data science community on being diverse, inclusive, and very genial to programmers of all skill levels.  Unfortunately, the actions made by DataCamp is a step backward and will leave a scar.  We can do better.&lt;/p&gt;
&lt;p&gt;The views here presented in this letter are my own and do not reflect the opinion or stances of my colleagues at UC Merced for the simple reason that this letter is the dissemination of the news to my peers in the DatASci graduate student organization and my coworkers at UC Merced.  If we need to solidify a view of the DataCamp business and our relationship with this education partner and the values of vendors, I will welcome future conversation about these matters.&lt;/p&gt;
&lt;p&gt;Sincerely,
Derek Sollberger
Continuing Lecturer at UC Merced&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Random Walks (draft)</title>
      <link>https://dsollberger.netlify.com/post/random-walks-draft/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/random-walks-draft/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;p-12&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;p = 1/2&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# parameters
p &amp;lt;- 0.5
Tmax = 60

# start at the origin
x = 0
y = 0
t = 0
df &amp;lt;- data.frame(x,y,t)

# random walk
for(i in 1:Tmax){
  t &amp;lt;- t + 1
  if(runif(1) &amp;lt; p){
    x &amp;lt;- x - 1
  } else {
    x &amp;lt;- x + 1
  }
  
  # reset process if dot leaves view
  if(abs(x) &amp;gt; 10){
    x &amp;lt;- 0
  }
  
  this_step &amp;lt;- data.frame(x,y,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x,y)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_point(color = &amp;quot;blue&amp;quot;, size = 10) +
  labs(title = &amp;quot;Random Walk (p = 1/2)&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1) +
  shadow_wake(colour = &amp;quot;gray&amp;quot;, wake_length = 0.2, alpha = 0.4)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-2-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;histogram&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;histogram&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 1/2
Tmax = 60
N &amp;lt;- 100 # number of starting &amp;quot;dots&amp;quot;

# start at the origin
x &amp;lt;- rep(0,N)
t &amp;lt;- rep(0,N)
df &amp;lt;- data.frame(x,t)

# random walk
for(i in 1:Tmax){
  for(j in 1:N){
    if(runif(1) &amp;lt; p){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  t &amp;lt;- rep(i,N)
  
  this_step &amp;lt;- data.frame(x,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_bar(fill = &amp;quot;blue&amp;quot;, stat = &amp;quot;count&amp;quot;) +
  labs(title = &amp;quot;Random Walk (p = 1/2)&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-3-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-random-walks&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Multiple Random Walks&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pL &amp;lt;- 3/4
pM &amp;lt;- 1/2
pR &amp;lt;- 7/16
Tmax = 60
N &amp;lt;- 300 # number of starting &amp;quot;dots&amp;quot; (use a number divisible by 3)

# start at the origin
x &amp;lt;- rep(0,N)
t &amp;lt;- rep(0,N)
group &amp;lt;- c(rep(&amp;quot;transient left&amp;quot;, N/3),
           rep(&amp;quot;recurrent&amp;quot;, N/3), 
           rep(&amp;quot;transient right&amp;quot;, N/3))
df &amp;lt;- data.frame(x,t, group)

# random walk
for(i in 1:Tmax){
  for(j in 1:(N/3)){
    if(runif(1) &amp;lt; pL){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  for(j in (N/3+1):(2*N/3)){
    if(runif(1) &amp;lt; pM){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  for(j in (2*N/3+1):N){
    if(runif(1) &amp;lt; pR){
      x[j] &amp;lt;- x[j] - 1
    } else {
      x[j] &amp;lt;- x[j] + 1
    }
  }
  
  t &amp;lt;- rep(i,N)
  this_step &amp;lt;- data.frame(x,t,group)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_bar(aes(fill = group),
           stat = &amp;quot;count&amp;quot;, position=position_dodge()) +
  labs(title = &amp;quot;Random Walks&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(trans=&amp;#39;log2&amp;#39;, breaks = NULL) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals

## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-4-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drunkards-walk&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Drunkard‚Äôs Walk&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# parameters
Tmax = 60

# start at the origin
x = 0
y = 0
t = 0
df &amp;lt;- data.frame(x,y,t)

# random walk
for(i in 1:Tmax){
  t &amp;lt;- t + 1
  rand_num &amp;lt;- runif(1)
  if(rand_num &amp;lt; 0.25){
    x &amp;lt;- x - 1
  } else if(rand_num &amp;lt; 0.5){
    y &amp;lt;- y - 1
  } else if(rand_num &amp;lt; 0.75){
    x &amp;lt;- x + 1
  } else {
    y &amp;lt;- y + 1
  }
  
  # reset process if dot leaves view
  if(abs(x) &amp;gt; 10){
    x &amp;lt;- 0
    y &amp;lt;- 0
  }
  if(abs(y) &amp;gt; 10){
    x &amp;lt;- 0
    y &amp;lt;- 0
  }
  
  this_step &amp;lt;- data.frame(x,y,t)
  df &amp;lt;- rbind(df, this_step)
}

p &amp;lt;- ggplot(df, aes(x,y)) +
  coord_cartesian(xlim = c(-10, 10)) +
  geom_point(color = &amp;quot;blue&amp;quot;, size = 10) +
  labs(title = &amp;quot;Drunkard&amp;#39;s Walk&amp;quot;,
       subtitle = &amp;quot;t = {closest_state}&amp;quot;,
       caption = &amp;quot;Math 181&amp;quot;,
       x = &amp;quot;&amp;quot;,
       y = &amp;quot;&amp;quot;) +
  scale_x_continuous(breaks = -10:10) +
  scale_y_continuous(breaks = -10:10) +
  theme_minimal() +
  transition_states(t, transition_length = 1, state_length = 1) +
  shadow_wake(colour = &amp;quot;gray&amp;quot;, wake_length = 0.2, alpha = 0.4)

animate(p, fps = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-25-random-walks-draft_files/figure-html/unnamed-chunk-5-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Valentine&#39;s Day 2019</title>
      <link>https://dsollberger.netlify.com/post/valentine-s-day-2019/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/valentine-s-day-2019/</guid>
      <description>


&lt;p&gt;In this short project, I hope to draw a heart through an animation of appearing dots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)
library(&amp;quot;ggforce&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;draw-a-heart&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Draw a Heart&lt;/h1&gt;
&lt;p&gt;Here I will place two circles centered at &lt;span class=&#34;math inline&#34;&gt;\((\pm 1, 1)\)&lt;/span&gt; with the same radius &lt;span class=&#34;math inline&#34;&gt;\(r = \sqrt{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;circles &amp;lt;- data.frame(
  x0 = c(-1,1),
  y0 = rep(1,2),
  r = rep(1, 2)
)

right_pt &amp;lt;- (sqrt(2) + 1) / sqrt(2)
left_pt &amp;lt;-  -1*right_pt
f &amp;lt;- function(x){abs(x) - sqrt(2)}

ggplot(data.frame(x = c(left_pt, right_pt)), aes(x)) +
  coord_fixed() +
  geom_circle(aes(x0 = x0, y0 = y0, r = r), data = circles, inherit.aes = FALSE) +
  stat_function(fun = f, geom = &amp;quot;line&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;generate-some-dots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Generate Some Dots&lt;/h1&gt;
&lt;p&gt;Now let‚Äôs see if I can get some red dots into a heart shape and green dots outside of the heart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# initialization
N &amp;lt;- 10000
x &amp;lt;- runif(N, -2, 2)
y &amp;lt;- runif(N, -sqrt(2), 2)
colors = c(&amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;, rep(&amp;quot;green&amp;quot;, N-2)) #factor levels set early
state = rep(1, N)

# separate colors
for (i in 4:N){
  if (y[i] &amp;lt; 1){
    if (y[i] &amp;gt; (abs(x[i]) - sqrt(2))){colors[i] = &amp;quot;red&amp;quot;}
  } else {
    if(sqrt((x[i] - 1)^2 + (y[i] - 1)^2) &amp;lt; 1 | 
       sqrt((x[i] + 1)^2 + (y[i] - 1)^2) &amp;lt; 1){colors[i] = &amp;quot;red&amp;quot;}
  }
}

dot_df &amp;lt;- data.frame(x,y, colors, state)
dot_df %&amp;gt;%
  ggplot(aes(x = x, y = y)) +
    coord_fixed() +
    geom_point(color = colors) +
    theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation&lt;/h1&gt;
&lt;p&gt;My initial plan was to have the dots appear one at a time to gradually make the heart, but the data storage was prohibitive. This back up plan was to literally make a new set of dots for each animation frame‚Äîand color the dots again!‚Äîand it comes with a neat ‚Äúheartbeat‚Äù effect. The render time for the animated GIF was about 2 minutes on my computer.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max_iter &amp;lt;- 14 #number of animation frames

for(j in 1:max_iter){
  x &amp;lt;- runif(N, -2, 2)
  y &amp;lt;- runif(N, -sqrt(2), 2)
  colors = c(&amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;, rep(&amp;quot;green&amp;quot;, N-2)) #factor levels set early
  
  for (i in 4:N){
    if (y[i] &amp;lt; 1){
      if (y[i] &amp;gt; (abs(x[i]) - sqrt(2))){colors[i] = &amp;quot;red&amp;quot;}
    } else {
      if(sqrt((x[i] - 1)^2 + (y[i] - 1)^2) &amp;lt; 1 | 
         sqrt((x[i] + 1)^2 + (y[i] - 1)^2) &amp;lt; 1){colors[i] = &amp;quot;red&amp;quot;}
    }
  }

  state &amp;lt;- rep(j, N)
  this_df &amp;lt;- data.frame(x, y, colors, state)
  #colnames(this_df) &amp;lt;- c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;, &amp;quot;colors&amp;quot;, &amp;quot;state&amp;quot;)
  dot_df &amp;lt;- rbind(dot_df, this_df)
}

dot_df %&amp;gt;%
  ggplot(aes(x = x, y = y)) +
    coord_fixed() +
    geom_point(color = dot_df$colors) +
    labs(title = &amp;quot;Valentine&amp;#39;s Day 2019&amp;quot;,
         subtitle = &amp;quot;Frame: {closest_state}&amp;quot;,
         caption = &amp;quot;Made by Derek Sollberger with the #gganimate package&amp;quot;) +
    theme_minimal() +
    transition_states(state, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-14-valentine-s-day-2019_files/figure-html/unnamed-chunk-4-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>https://dsollberger.netlify.com/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/jupyter/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./index_1_0.png&#34; alt=&#34;png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-python-and-jupyterlab&#34;&gt;Install Python and JupyterLab&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and JupyterLab.&lt;/p&gt;
&lt;p&gt;Alternatively, install JupyterLab with &lt;code&gt;pip3 install jupyterlab&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;
&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code&gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;jupyter&lt;/code&gt; command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p&gt;
&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;
&lt;p&gt;The first cell of your Jupter notebook will contain your post metadata (&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;front matter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Jupter, choose &lt;em&gt;Markdown&lt;/em&gt; as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other Academic metadata here...
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit the metadata of your post, using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; as a guide to the available options.&lt;/p&gt;
&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;This post was created with Jupyter. The orginal files can be found at &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-r-workshop/</guid>
      <description>


&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;gganimate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lattice&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;ggstance&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     geom_errorbarh, GeomErrorbarh&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
##  learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
##  learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## The &amp;#39;mosaic&amp;#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;mosaic&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:Matrix&amp;#39;:
## 
##     mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:dplyr&amp;#39;:
## 
##     count, do, tally&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:ggplot2&amp;#39;:
## 
##     stat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     max, mean, min, prod, range, sample, sum&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Weather)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$city)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Weather$year)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample-statistics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sample Statistics&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(Weather$high_temp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 71.32421&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(Weather$precip)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(Weather$avg_wind)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.865026&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plotting&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regression&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Regression&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hypothesis-testing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Hypothesis Testing&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;animation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animation&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>https://dsollberger.netlify.com/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/introduction-to-r-workshop/</guid>
      <description>&lt;h1 id=&#34;packages&#34;&gt;Packages&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)
install.packages(workshop_packages)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;gganimate&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;mosaic&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: dplyr
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lattice
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggformula
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggstance
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;ggstance&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:ggplot2&#39;:
## 
##     geom_errorbarh, GeomErrorbarh
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## New to ggformula?  Try the tutorials: 
## 	learnr::run_tutorial(&amp;quot;introduction&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
## 	learnr::run_tutorial(&amp;quot;refining&amp;quot;, package = &amp;quot;ggformula&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: mosaicData
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Matrix
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## The &#39;mosaic&#39; package masks several functions from core packages in order to add 
## additional features.  The original behavior of these functions should not be affected by this.
## 
## Note: If you use the Matrix package, be sure to load it BEFORE loading mosaic.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;mosaic&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:Matrix&#39;:
## 
##     mean
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:dplyr&#39;:
## 
##     count, do, tally
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:ggplot2&#39;:
## 
##     stat
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     binom.test, cor, cor.test, cov, fivenum, IQR, median,
##     prop.test, quantile, sd, t.test, var
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     max, mean, min, prod, range, sample, sum
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;data&#34;&gt;Data&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(Weather)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 25
## # Groups:   city, year [1]
##   city  date        year month   day high_temp avg_temp low_temp high_dewpt
##   &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 Auck~ 2016-01-01  2016     1     1        68       65       62         64
## 2 Auck~ 2016-01-02  2016     1     2        68       66       64         64
## 3 Auck~ 2016-01-03  2016     1     3        77       72       66         70
## 4 Auck~ 2016-01-04  2016     1     4        73       66       60         66
## 5 Auck~ 2016-01-05  2016     1     5        69       62       55         55
## 6 Auck~ 2016-01-06  2016     1     6        69       63       57         54
## # ... with 16 more variables: avg_dewpt &amp;lt;dbl&amp;gt;, low_dewpt &amp;lt;dbl&amp;gt;,
## #   high_humidity &amp;lt;dbl&amp;gt;, avg_humidity &amp;lt;dbl&amp;gt;, low_humidity &amp;lt;dbl&amp;gt;,
## #   high_hg &amp;lt;dbl&amp;gt;, avg_hg &amp;lt;dbl&amp;gt;, low_hg &amp;lt;dbl&amp;gt;, high_vis &amp;lt;dbl&amp;gt;,
## #   avg_vis &amp;lt;dbl&amp;gt;, low_vis &amp;lt;dbl&amp;gt;, high_wind &amp;lt;dbl&amp;gt;, avg_wind &amp;lt;dbl&amp;gt;,
## #   low_wind &amp;lt;dbl&amp;gt;, precip &amp;lt;chr&amp;gt;, events &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$city)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Auckland   Beijing   Chicago    Mumbai San Diego 
##       731       731       731       731       731
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table(Weather$year)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 2016 2017 
## 1830 1825
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;sample-statistics&#34;&gt;Sample Statistics&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mean(Weather$high_temp)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 71.32421
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;median(Weather$precip)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sd(Weather$avg_wind)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.865026
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;plotting&#34;&gt;Plotting&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Chicago &amp;lt;- subset(Weather, city == &amp;quot;Chicago&amp;quot;)

# boxplots
ggplot(Chicago, aes(x = month, y = high_temp, group = month, fill = month)) +
  geom_boxplot() +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;month&amp;quot;,
       y = &amp;quot;high temperature&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h1 id=&#34;regression&#34;&gt;Regression&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Chicago, aes(x = high_temp, y = low_temp, color = year)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  labs(title = &amp;quot;Chicago Weather (2016-2017)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h1 id=&#34;hypothesis-testing&#34;&gt;Hypothesis Testing&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;SanDiego &amp;lt;- subset(Weather, city == &amp;quot;San Diego&amp;quot;)

# Do Chicago and San Diego have the same high temperatures?
t.test(Chicago$high_temp, SanDiego$high_temp, alternative = &amp;quot;two.sided&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 	Welch Two Sample t-test
## 
## data:  Chicago$high_temp and SanDiego$high_temp
## t = -14.221, df = 886.31, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -13.21560 -10.01012
## sample estimates:
## mean of x mean of y 
##  61.00821  72.62107
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;animation&#34;&gt;Animation&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(Weather, aes(x = high_temp, y = low_temp, color = city)) +
  geom_point() +
  labs(title = &amp;quot;Worldwide Weather (2016-2017)&amp;quot;,
       caption = &amp;quot;Source: Mosaic Foundation&amp;quot;,
       subtitle = &amp;quot;(by months)&amp;quot;,
       x = &amp;quot;high temperature&amp;quot;,
       y = &amp;quot;low temperature&amp;quot;) +
  theme_minimal() +
  transition_states(month, transition_length = 1, state_length = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;2019-02-05-introduction-to-r-workshop_files/figure-html/unnamed-chunk-8-1.gif&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;!-- --&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gganatogram and gganimate</title>
      <link>https://dsollberger.netlify.com/post/gganatogram-and-gganimate/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/gganatogram-and-gganimate/</guid>
      <description>


&lt;p&gt;Today I wanted to see if I could create a slideshow of pictures from the &lt;code&gt;gganatogram&lt;/code&gt; package. I wanted to combine them with the &lt;code&gt;gganimate&lt;/code&gt; package, but I have not figured out how to get that to work. (In particular, the &lt;code&gt;gganatogram()&lt;/code&gt; function seems to return a different list layout than &lt;code&gt;ggplot&lt;/code&gt; objects.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganatogram)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggpolypath&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gganimate)
library(profvis)

N &amp;lt;- 25 # number of cell samples&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;num_cell_parts &amp;lt;- nrow(cell_key$cell)

# randomly select a random number of cell parts
part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))

cell_num &amp;lt;- rep(1, length(part_picker))
this_cell &amp;lt;- cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ]
cell_samples &amp;lt;- cbind(this_cell, cell_num)


for(j in 2:N){
  part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))
  cell_num &amp;lt;- rep(j, length(part_picker))
  this_cell &amp;lt;- cbind( cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ], cell_num)
  cell_samples &amp;lt;- rbind(cell_samples, this_cell)
  
  # figure_list[j] &amp;lt;- gganatogram(data = this_cell,
  #           outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) + 
  # theme_void() + 
  # coord_fixed()
  
  png(filename = paste0(j, &amp;quot;.png&amp;quot;))
  
  p &amp;lt;- gganatogram(data = this_cell,
            outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) +
  theme_void() +
  coord_fixed() +
    labs(title = &amp;quot;Sample of Cell Parts&amp;quot;,
         subtitle = paste0(&amp;quot;sample &amp;quot;, j, &amp;quot; of &amp;quot;, N),
         caption = &amp;quot;Bio 18, UC Merced&amp;quot;)
  
  plot(p)
  
  dev.off()
  
  # pause(0.5)
}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://dsollberger.netlify.com/img/cell_samples.gif&#34; alt=&#34;the picture&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;the picture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;What I ended up doing to produce the picture above was using the &lt;code&gt;png()&lt;/code&gt; and &lt;code&gt;dev.off()&lt;/code&gt; functions to simply output individual pictures into my computer, and then using the &lt;a href=&#34;https://gifmaker.me/&#34;&gt;GIFmaker&lt;/a&gt; website to combine the images into an animated GIF.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curse of Dimensionality</title>
      <link>https://dsollberger.netlify.com/post/curse-of-dimensionality/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/curse-of-dimensionality/</guid>
      <description>


&lt;p&gt;Today, I hope to present a quick glimpse at the phenomenon called the ‚ÄúCurse of Dimensionality‚Äù. For this demonstration, I am simply calculating how much random data stays within two standard deviations (in the Euclidean norm) as we go from one dimension to higher dimensions.&lt;/p&gt;
&lt;div id=&#34;random-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Random Data&lt;/h3&gt;
&lt;p&gt;Here are 10 vectors of 100 random numbers each sampled from the standard normal distribution stored as a matrix ‚Ä¶&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;X &amp;lt;- matrix(rnorm(1000), nrow = 100, ncol = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚Ä¶ and as a data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(X)
head(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           X1          X2          X3          X4         X5         X6
## 1  0.0256453  0.28398713  0.67057945  1.09584061  0.3824753  1.4061483
## 2 -0.6176034 -0.40257645  1.13756561 -0.25761710 -0.1488482 -0.1959629
## 3 -0.5235474 -0.68893524 -0.70737197  0.80125649  0.4926702 -1.9662689
## 4 -0.3737617  0.06833939 -0.02937106 -0.60665832  0.2656111  1.2102051
## 5 -0.9429225  0.05136859  1.89588703  0.30911255 -0.2143345 -0.2801334
## 6  0.4515558 -0.31945406 -2.42236506  0.06607036  0.3371893 -0.3928504
##             X7         X8          X9         X10
## 1  0.671601688 -1.9165923 -0.81464512  0.01496321
## 2 -0.005786507  0.2001263  1.59233921  0.53711798
## 3 -0.712297275  0.8505601 -2.58287100  1.04165643
## 4  0.892004771 -1.0628529  0.37102924  0.19434494
## 5 -1.365184181  0.3970239  0.08127754  2.02421067
## 6  0.746595767 -1.1335422 -0.54150029 -0.56877836&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;one-dimension&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;One Dimension&lt;/h3&gt;
&lt;p&gt;For normally distributed data, we expect that about 95% of data falls within two standard deviations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x1 &amp;lt;- X[,1]
within2sd &amp;lt;- abs(x1) &amp;lt;= 2
df1 &amp;lt;- data.frame(x1, within2sd)
mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.96&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 96 percent of the data in the first vector is within two standard deviations of the mean.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
df1 %&amp;gt;% 
  ggplot(aes(x = x1, , y = 0, color = within2sd)) +
  geom_point() + 
  labs(title = &amp;quot;One Dimension of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Two Dimensions&lt;/h3&gt;
&lt;p&gt;However, when we go into two or more dimensions, the colloquial ‚Äú95%‚Äù expection starts to fade. To aid calculations, the &lt;code&gt;row_norms&lt;/code&gt; function in the &lt;code&gt;slam&lt;/code&gt; package uses the Euclidean norm by default. To aid visualization, we will use a helper function (found on Stack Overflow at &lt;a href=&#34;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2&lt;/a&gt;) to draw one circle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(slam)
within2sd &amp;lt;- row_norms(X[,1:2]) &amp;lt;= 2

gg_circle &amp;lt;- function(r = 1, xc = 0, yc = 0, color=&amp;quot;black&amp;quot;, fill=NA, ...) {
    x &amp;lt;- xc + r*cos(seq(0, pi, length.out=100))
    ymax &amp;lt;- yc + r*sin(seq(0, pi, length.out=100))
    ymin &amp;lt;- yc + r*sin(seq(0, -pi, length.out=100))
    annotate(&amp;quot;ribbon&amp;quot;, x=x, ymin=ymin, ymax=ymax, color=color, fill=fill, ...)
}

df2 &amp;lt;- data.frame(X[,1:2], within2sd)
df2 %&amp;gt;%
  ggplot(aes(x = X1, y = X2, color = within2sd)) +
  geom_point() + 
  gg_circle(r = 2, color = &amp;quot;red&amp;quot;) +
  coord_fixed() + 
  labs(title = &amp;quot;Two Dimensions of Normal Distribution Data&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(within2sd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.88&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, 88 percent of the data in the first 2 vectors is within two standard deviations of the mean.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;higher-dimensions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Higher Dimensions&lt;/h3&gt;
&lt;p&gt;Plotting scatterplots in higher dimensions is much more complicated, but we can still perform the &lt;code&gt;norm&lt;/code&gt; calculations pretty quickly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 10 #total number of dimensions
within2sd &amp;lt;- rep(0, N) #initialization

# one dimension
within2sd[1] &amp;lt;- mean(abs(x1) &amp;lt;= 2)

# higher dimensions
for(d in 2:N){
  within2sd[d] &amp;lt;- mean(row_norms(X[,1:d]) &amp;lt;= 2)
}

# plot
dimensions &amp;lt;- 1:N
df &amp;lt;- data.frame(dimensions, within2sd)
df %&amp;gt;%
  ggplot(aes(x = dimensions, y = within2sd)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, fill = &amp;quot;blue&amp;quot;) +
  scale_x_continuous(&amp;quot;Dimensions&amp;quot;, breaks = 1:N)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-01-08-curse-of-dimensionality_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Graduation Rates</title>
      <link>https://dsollberger.netlify.com/post/graduation-rates/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/graduation-rates/</guid>
      <description>


&lt;p&gt;In this post, I want to run an example of absorbing states in stochastic processes. This example is based on Example 3.29 in &lt;em&gt;Introduction to Stochastic Processes&lt;/em&gt; in R by Robert Dobrow.&lt;/p&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;The data I have assembled is based on &lt;a href=&#34;https://irds.ucmerced.edu/student-data&#34;&gt;IRDS reports&lt;/a&gt; from my own University of California at Merced.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# weights
weights &amp;lt;- c(20, 70, 0, 0, 10, 0, 
       0, 5, 89, 0, 6, 0, 
       0, 0, 3, 94, 3, 0, 
       0, 0, 0, 24, 1, 76, 
       0, 0, 0, 0, 100, 0, 
       0, 0, 0, 0, 0, 100)
sparse_weights &amp;lt;- weights[weights &amp;gt; 0]

# transition matrix (row stochastic)
P &amp;lt;- matrix(weights, nrow = 6, byrow = TRUE)*0.01

# states
rownames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
colnames(P) &amp;lt;- c(&amp;quot;Freshman&amp;quot;, &amp;quot;Sophomore&amp;quot;, &amp;quot;Junior&amp;quot;, &amp;quot;Senior&amp;quot;, &amp;quot;Dropped&amp;quot;, &amp;quot;Graduated&amp;quot;)
P&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Freshman Sophomore Junior Senior Dropped Graduated
## Freshman       0.2      0.70   0.00   0.00    0.10      0.00
## Sophomore      0.0      0.05   0.89   0.00    0.06      0.00
## Junior         0.0      0.00   0.03   0.94    0.03      0.00
## Senior         0.0      0.00   0.00   0.24    0.01      0.76
## Dropped        0.0      0.00   0.00   0.00    1.00      0.00
## Graduated      0.0      0.00   0.00   0.00    0.00      1.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This formulation assumes that about 10 percent of students drop after the first year, and about 24 percent of seniors continue to take classes into the fifth year or more.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;network-graph&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Network Graph&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)
network &amp;lt;- graph_from_adjacency_matrix(P, mode = &amp;quot;directed&amp;quot;, weighted = TRUE)
plot(network,
     edge.arrow.size = 0.5,
     edge.color = &amp;quot;#D4AE00&amp;quot;,
     edge.label = sparse_weights,
     layout = layout_in_circle(network))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-01-08-graduation-rates_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;absorbing-states&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Absorbing States&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# canonical form
Q &amp;lt;- P[1:4, 1:4]
R &amp;lt;- P[1:4, 5:6]

# fundamental matrix (inverse of (I - Q))
fundamental_matrix &amp;lt;- solve(diag(4) - Q)

# absorption
absorption &amp;lt;- fundamental_matrix %*% R
round(100*absorption)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Dropped Graduated
## Freshman       22        79
## Sophomore      10        91
## Junior          4        97
## Senior          1       100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This model predicts that, starting with incoming students, about 79 percent of those students will eventually graduate while about 21 percent will eventually drop from UC Merced enrollment.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My First gganimate Plot</title>
      <link>https://dsollberger.netlify.com/post/my-first-gganimate-plot/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/my-first-gganimate-plot/</guid>
      <description>


&lt;p&gt;Today I finally read a &lt;a href=&#34;https://gganimate.com/articles/gganimate.html&#34;&gt;tutorial&lt;/a&gt; on &lt;code&gt;gganimate&lt;/code&gt;, and here I will build my first example. My hope is to eventually simulate traversal on a directed graph.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(gganimate)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;create-node-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Create Node Data&lt;/h1&gt;
&lt;p&gt;For this example, I will have 3 nodes (located at 3 vertices of a triangle), 100 dots distributed among the nodes, and a new placement over 21 states in time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;N &amp;lt;- 100 # number of dots
T &amp;lt;- 20 # number of iterations

node_names &amp;lt;- c(&amp;quot;Node 1&amp;quot;, &amp;quot;Node 2&amp;quot;, &amp;quot;Node 3&amp;quot;)
iter &amp;lt;- rep(0, N)
node &amp;lt;- rep(&amp;quot;Node 1&amp;quot;, N)
x &amp;lt;- 10 + rnorm(N, 0, 2)
y &amp;lt;- 20 + rnorm(N, 0, 2)
states &amp;lt;- data.frame(iter, node, x, y)

for(t in 1:T){
  iter &amp;lt;- rep(t, N)
  node &amp;lt;- sample(node_names, N, replace = TRUE)
  x &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 10 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 20 + rnorm(N, 0, 2),
    TRUE             ~ 30 + rnorm(N, 0, 2)
  )
  y &amp;lt;- case_when(
    node == &amp;quot;Node 1&amp;quot; ~ 20 + rnorm(N, 0, 2),
    node == &amp;quot;Node 2&amp;quot; ~ 30 + rnorm(N, 0, 2),
    TRUE             ~ 10 + rnorm(N, 0, 2)
  )
  this_state &amp;lt;- data.frame(iter, node, x, y)
  
  states &amp;lt;- rbind(states, this_state)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-network&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plot Network&lt;/h1&gt;
&lt;p&gt;Having made a new set of data at each state, the main tool is to use &lt;code&gt;transition_states&lt;/code&gt; over the iterations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;states %&amp;gt;% 
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = node), alpha = 0.33) +
  labs(title = &amp;quot;Draft of Network Animation&amp;quot;,
       subtitle = &amp;quot;Iteration: {closest_state} of 20&amp;quot;,
       caption = &amp;quot;Simulation of random placement&amp;quot;) +
  theme_minimal() +
  transition_states(iter, transition_length = 1, state_length = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2019-01-08-my-first-gganimate-plot_files/figure-html/unnamed-chunk-3-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SAMPLe talk (Fall 2018)</title>
      <link>https://dsollberger.netlify.com/post/sample-talk-fall-2018/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/sample-talk-fall-2018/</guid>
      <description>


&lt;div id=&#34;ggplot2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot2&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/activelearning&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/activelearning&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://rpubs.com/dsollberger/scc&#34; class=&#34;uri&#34;&gt;http://rpubs.com/dsollberger/scc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SHW3/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SHW3/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;flex-dashboard&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Flex Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/shw7/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/shw7/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shiny-and-htmlwidgets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shiny and htmlwidgets&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://dsollberger.shinyapps.io/SAMPLe/&#34; class=&#34;uri&#34;&gt;https://dsollberger.shinyapps.io/SAMPLe/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Supreme Court Confirmations (1967-present)</title>
      <link>https://dsollberger.netlify.com/post/supreme-court-confirmations-1967-present/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/supreme-court-confirmations-1967-present/</guid>
      <description>
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://dsollberger.netlify.com/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://dsollberger.netlify.com/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;https://dsollberger.netlify.com/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://dsollberger.netlify.com/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://dsollberger.netlify.com/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://dsollberger.netlify.com/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Following up on &lt;a href=&#34;https://twitter.com/rachelwellford/status/1048308997219082240&#34;&gt;Rachel Wellford‚Äôs tweet&lt;/a&gt; about Senate votes for Supreme Court confirmations, I decided to try to graph the data. Below, I have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;code&gt;ggplot&lt;/code&gt; picture with decent labeling&lt;/li&gt;
&lt;li&gt;a searchable &lt;code&gt;datatable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;plotly&lt;/code&gt; interactive graph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The data came from &lt;a href=&#34;https://www.senate.gov/pagelayout/reference/nominations/Nominations.htm&#34;&gt;Senate.gov&lt;/a&gt;. I chose to focus on 1967 onward because it appeared that voting procedures were slightly different before Thurgood Marshall‚Äôs nomination process. Otherwise, I would have chosen to go back to when the Senate first had 100 members.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;DT&amp;quot;)
library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;ggrepel&amp;quot;)
library(&amp;quot;plotly&amp;quot;)
library(&amp;quot;readxl&amp;quot;)
scc &amp;lt;- read_excel(&amp;quot;../../static/Supreme Court confirmations.xlsx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ggplot&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text_repel() +
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2018-10-07-supreme-court-confirmations-1967-present_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;datatable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Datatable&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT::datatable(scc)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;,&#34;19&#34;],[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],[&#34;2018-07-10T00:00:00Z&#34;,&#34;2017-02-01T00:00:00Z&#34;,&#34;2010-05-10T00:00:00Z&#34;,&#34;2009-06-01T00:00:00Z&#34;,&#34;2005-11-10T00:00:00Z&#34;,&#34;2005-09-06T00:00:00Z&#34;,&#34;1994-05-17T00:00:00Z&#34;,&#34;1993-07-22T00:00:00Z&#34;,&#34;1991-07-08T00:00:00Z&#34;,&#34;1990-07-25T00:00:00Z&#34;,&#34;1987-11-30T00:00:00Z&#34;,&#34;1986-06-24T00:00:00Z&#34;,&#34;1981-08-19T00:00:00Z&#34;,&#34;1975-11-28T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1971-10-22T00:00:00Z&#34;,&#34;1970-04-15T00:00:00Z&#34;,&#34;1969-05-23T00:00:00Z&#34;,&#34;1967-06-13T00:00:00Z&#34;],[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],[&#34;2018-10-06T00:00:00Z&#34;,&#34;2017-04-07T00:00:00Z&#34;,&#34;2010-08-05T00:00:00Z&#34;,&#34;2009-08-06T00:00:00Z&#34;,&#34;2006-01-31T00:00:00Z&#34;,&#34;2005-09-29T00:00:00Z&#34;,&#34;1994-07-29T00:00:00Z&#34;,&#34;1993-08-03T00:00:00Z&#34;,&#34;1991-10-15T00:00:00Z&#34;,&#34;1990-10-02T00:00:00Z&#34;,&#34;1998-02-03T00:00:00Z&#34;,&#34;1986-09-17T00:00:00Z&#34;,&#34;1981-09-21T00:00:00Z&#34;,&#34;1975-12-17T00:00:00Z&#34;,&#34;1971-12-10T00:00:00Z&#34;,&#34;1971-12-06T00:00:00Z&#34;,&#34;1970-05-12T00:00:00Z&#34;,&#34;1969-06-09T00:00:00Z&#34;,&#34;1967-08-30T00:00:00Z&#34;],[&#34;Donald Trump&#34;,&#34;Donald Trump&#34;,&#34;Barack Obama&#34;,&#34;Barack Obama&#34;,&#34;George W. Bush&#34;,&#34;George W. Bush&#34;,&#34;Bill Clinton&#34;,&#34;Bill Clinton&#34;,&#34;George H.W. Bush&#34;,&#34;George H.W. Bush&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Ronald Reagan&#34;,&#34;Gerald Ford&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Richard Nixon&#34;,&#34;Lyndon Johnson&#34;],[&#34;Brett&#34;,&#34;Neil&#34;,&#34;Elena&#34;,&#34;Sonia&#34;,&#34;Samuel&#34;,&#34;John&#34;,&#34;Steven&#34;,&#34;Ruth Bader&#34;,&#34;Clarence&#34;,&#34;David&#34;,&#34;Anthony&#34;,&#34;Antonin&#34;,&#34;Sandra Day&#34;,&#34;John Paul&#34;,&#34;William&#34;,&#34;Lewis&#34;,&#34;Harry&#34;,&#34;Warren&#34;,&#34;Thurgood&#34;],[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;Nominee&lt;\/th&gt;\n      &lt;th&gt;Nominated&lt;\/th&gt;\n      &lt;th&gt;Yea&lt;\/th&gt;\n      &lt;th&gt;Nay&lt;\/th&gt;\n      &lt;th&gt;Confirmed&lt;\/th&gt;\n      &lt;th&gt;President&lt;\/th&gt;\n      &lt;th&gt;First&lt;\/th&gt;\n      &lt;th&gt;Last&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[3,4]},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;plotly&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotly&lt;/h3&gt;
&lt;p&gt;Here is a slightly interactive graph built with a combination of &lt;code&gt;ggplot&lt;/code&gt; and &lt;code&gt;plotly&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;basemap &amp;lt;- ggplot(scc, aes(x = Nay, y = Yea, label = Last)) +
  geom_point() +
  geom_text(nudge_x = 5) + # geom_text_repel is not supported by Plotly yet
  labs(x = &amp;quot;Nay votes&amp;quot;, y = &amp;quot;Yea votes&amp;quot;, 
       title = &amp;quot;Supreme Court Confirmations (1967 to present)&amp;quot;,
       subtitle = &amp;quot;Marshall to Kavanaugh&amp;quot;,
       caption = &amp;quot;Source: Senate.gov&amp;quot;) + 
  xlim(c(-10, 60)) +
  ylim(c(40, 110))
ggplotly(basemap)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;opacity&#34;:1,&#34;size&#34;:5.66929133858268,&#34;symbol&#34;:&#34;circle&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;}},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[53,50,42,36,47,27,14,8,53,14,5,5,5,5,31,6,5,8,16],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Kavanaugh&#34;,&#34;Gorsuch&#34;,&#34;Kagan&#34;,&#34;Sotomayor&#34;,&#34;Alito&#34;,&#34;Roberts&#34;,&#34;Breyer&#34;,&#34;Ginsburg&#34;,&#34;Thomas&#34;,&#34;Souter&#34;,&#34;Kennedy&#34;,&#34;Scalia&#34;,&#34;O&#39;Conner&#34;,&#34;Stevens&#34;,&#34;Rehnquist&#34;,&#34;Powell&#34;,&#34;Blackmun&#34;,&#34;Burger&#34;,&#34;Marshall&#34;],&#34;hovertext&#34;:[&#34;Nay: 48&lt;br /&gt;Yea: 50&lt;br /&gt;Last: Kavanaugh&#34;,&#34;Nay: 45&lt;br /&gt;Yea: 54&lt;br /&gt;Last: Gorsuch&#34;,&#34;Nay: 37&lt;br /&gt;Yea: 63&lt;br /&gt;Last: Kagan&#34;,&#34;Nay: 31&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Sotomayor&#34;,&#34;Nay: 42&lt;br /&gt;Yea: 58&lt;br /&gt;Last: Alito&#34;,&#34;Nay: 22&lt;br /&gt;Yea: 78&lt;br /&gt;Last: Roberts&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 87&lt;br /&gt;Last: Breyer&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 96&lt;br /&gt;Last: Ginsburg&#34;,&#34;Nay: 48&lt;br /&gt;Yea: 52&lt;br /&gt;Last: Thomas&#34;,&#34;Nay:  9&lt;br /&gt;Yea: 90&lt;br /&gt;Last: Souter&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 97&lt;br /&gt;Last: Kennedy&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Scalia&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 99&lt;br /&gt;Last: O&#39;Conner&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 98&lt;br /&gt;Last: Stevens&#34;,&#34;Nay: 26&lt;br /&gt;Yea: 68&lt;br /&gt;Last: Rehnquist&#34;,&#34;Nay:  1&lt;br /&gt;Yea: 89&lt;br /&gt;Last: Powell&#34;,&#34;Nay:  0&lt;br /&gt;Yea: 94&lt;br /&gt;Last: Blackmun&#34;,&#34;Nay:  3&lt;br /&gt;Yea: 73&lt;br /&gt;Last: Burger&#34;,&#34;Nay: 11&lt;br /&gt;Yea: 69&lt;br /&gt;Last: Marshall&#34;],&#34;textfont&#34;:{&#34;size&#34;:14.6645669291339,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;},&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null}],&#34;layout&#34;:{&#34;margin&#34;:{&#34;t&#34;:43.7625570776256,&#34;r&#34;:7.30593607305936,&#34;b&#34;:40.1826484018265,&#34;l&#34;:43.1050228310502},&#34;plot_bgcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;paper_bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;title&#34;:&#34;Supreme Court Confirmations (1967 to present)&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:17.5342465753425},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-13.5,63.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;tickvals&#34;:[0,20,40,60],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;0&#34;,&#34;20&#34;,&#34;40&#34;,&#34;60&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;y&#34;,&#34;title&#34;:&#34;Nay votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[36.5,113.5],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;tickvals&#34;:[40,60,80,100],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;40&#34;,&#34;60&#34;,&#34;80&#34;,&#34;100&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;x&#34;,&#34;title&#34;:&#34;Yea votes&#34;,&#34;titlefont&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;shapes&#34;:[{&#34;type&#34;:&#34;rect&#34;,&#34;fillcolor&#34;:null,&#34;line&#34;:{&#34;color&#34;:null,&#34;width&#34;:0,&#34;linetype&#34;:[]},&#34;yref&#34;:&#34;paper&#34;,&#34;xref&#34;:&#34;paper&#34;,&#34;x0&#34;:0,&#34;x1&#34;:1,&#34;y0&#34;:0,&#34;y1&#34;:1}],&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;bordercolor&#34;:&#34;transparent&#34;,&#34;borderwidth&#34;:1.88976377952756,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;barmode&#34;:&#34;relative&#34;},&#34;config&#34;:{&#34;doubleClick&#34;:&#34;reset&#34;,&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;attrs&#34;:{&#34;160cd611208&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{},&#34;type&#34;:&#34;scatter&#34;},&#34;160c1b9a1bd8&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;label&#34;:{}}},&#34;cur_data&#34;:&#34;160cd611208&#34;,&#34;visdat&#34;:{&#34;160cd611208&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;160c1b9a1bd8&#34;:[&#34;function (y) &#34;,&#34;x&#34;]},&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Here is a slightly interactive graph with readable labels:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t &amp;lt;- list(
  family = &amp;quot;sans serif&amp;quot;,
  size = 14,
  color = toRGB(&amp;quot;grey80&amp;quot;))

plot_ly(scc, x = ~Nay, y = ~Yea, text = ~Nominee) %&amp;gt;%
  add_markers() %&amp;gt;%
  add_text(textfont = t, textposition = &amp;quot;top right&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160c25b918be&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160c25b918be&#34;,&#34;attrs&#34;:{&#34;160c25b918be&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;inherit&#34;:true},&#34;160c25b918be.1&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:&#34;top right&#34;,&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:true},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;text&#34;:[&#34;Brett Kavanaugh&#34;,&#34;Neil Gorsuch&#34;,&#34;Elena Kagan&#34;,&#34;Sonia Sotomayor&#34;,&#34;Samuel Alito&#34;,&#34;John Roberts&#34;,&#34;Steven Breyer&#34;,&#34;Ruth Bader Ginsburg&#34;,&#34;Clarence Thomas&#34;,&#34;David Souter&#34;,&#34;Anthony Kennedy&#34;,&#34;Antonin Scalia&#34;,&#34;Sandra Day O&#39;Connor&#34;,&#34;John Paul Stevens&#34;,&#34;William Rehnquist&#34;,&#34;Lewis Powell&#34;,&#34;Harry Blackmun&#34;,&#34;Warren Burger&#34;,&#34;Thurgood Marshall&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;text&#34;,&#34;textfont&#34;:{&#34;family&#34;:&#34;sans serif&#34;,&#34;size&#34;:14,&#34;color&#34;:&#34;rgba(204,204,204,1)&#34;},&#34;textposition&#34;:[&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;,&#34;top right&#34;],&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Finally, here is a fully interactive graph, but the labels are not revealed until someone hovers their mouse cursor over the points:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_ly(scc, x = ~Nay, y = ~Yea, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;markers&amp;#39;,
        hoverinfo = &amp;#39;text&amp;#39;,
        text = ~paste(&amp;#39;&amp;lt;b&amp;gt;Nominee:&amp;lt;/b&amp;gt; &amp;#39;, Nominee,
                      &amp;#39;&amp;lt;br&amp;gt; Yea: &amp;#39;, Yea,
                      &amp;#39;&amp;lt;br&amp;gt; Nay: &amp;#39;, Nay,
                      &amp;#39;&amp;lt;br&amp;gt; Nominated: &amp;#39;, Nominated,
                      &amp;#39;&amp;lt;br&amp;gt; Confirmed: &amp;#39;, Confirmed,
                      &amp;#39;&amp;lt;br&amp;gt; President: &amp;#39;, President))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;160cb0ac56&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;160cb0ac56&#34;,&#34;attrs&#34;:{&#34;160cb0ac56&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;text&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Nay&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;Yea&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[{&#34;name&#34;:&#34;Collaborate&#34;,&#34;icon&#34;:{&#34;width&#34;:1000,&#34;ascent&#34;:500,&#34;descent&#34;:-50,&#34;path&#34;:&#34;M487 375c7-10 9-23 5-36l-79-259c-3-12-11-23-22-31-11-8-22-12-35-12l-263 0c-15 0-29 5-43 15-13 10-23 23-28 37-5 13-5 25-1 37 0 0 0 3 1 7 1 5 1 8 1 11 0 2 0 4-1 6 0 3-1 5-1 6 1 2 2 4 3 6 1 2 2 4 4 6 2 3 4 5 5 7 5 7 9 16 13 26 4 10 7 19 9 26 0 2 0 5 0 9-1 4-1 6 0 8 0 2 2 5 4 8 3 3 5 5 5 7 4 6 8 15 12 26 4 11 7 19 7 26 1 1 0 4 0 9-1 4-1 7 0 8 1 2 3 5 6 8 4 4 6 6 6 7 4 5 8 13 13 24 4 11 7 20 7 28 1 1 0 4 0 7-1 3-1 6-1 7 0 2 1 4 3 6 1 1 3 4 5 6 2 3 3 5 5 6 1 2 3 5 4 9 2 3 3 7 5 10 1 3 2 6 4 10 2 4 4 7 6 9 2 3 4 5 7 7 3 2 7 3 11 3 3 0 8 0 13-1l0-1c7 2 12 2 14 2l218 0c14 0 25-5 32-16 8-10 10-23 6-37l-79-259c-7-22-13-37-20-43-7-7-19-10-37-10l-248 0c-5 0-9-2-11-5-2-3-2-7 0-12 4-13 18-20 41-20l264 0c5 0 10 2 16 5 5 3 8 6 10 11l85 282c2 5 2 10 2 17 7-3 13-7 17-13z m-304 0c-1-3-1-5 0-7 1-1 3-2 6-2l174 0c2 0 4 1 7 2 2 2 4 4 5 7l6 18c0 3 0 5-1 7-1 1-3 2-6 2l-173 0c-3 0-5-1-8-2-2-2-4-4-4-7z m-24-73c-1-3-1-5 0-7 2-2 3-2 6-2l174 0c2 0 5 0 7 2 3 2 4 4 5 7l6 18c1 2 0 5-1 6-1 2-3 3-5 3l-174 0c-3 0-5-1-7-3-3-1-4-4-5-6z&#34;},&#34;click&#34;:&#34;function(gd) { \n        // is this being viewed in RStudio?\n        if (location.search == &#39;?viewer_pane=1&#39;) {\n          alert(&#39;To learn about plotly for collaboration, visit:\\n https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;);\n        } else {\n          window.open(&#39;https://cpsievert.github.io/plotly_book/plot-ly-for-collaboration.html&#39;, &#39;_blank&#39;);\n        }\n      }&#34;}],&#34;cloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[48,45,37,31,42,22,9,3,48,9,0,0,0,0,26,1,0,3,11],&#34;y&#34;:[50,54,63,68,58,78,87,96,52,90,97,98,99,98,68,89,94,73,69],&#34;mode&#34;:&#34;markers&#34;,&#34;hoverinfo&#34;:[&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;],&#34;text&#34;:[&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Brett Kavanaugh &lt;br&gt; Yea:  50 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  2018-07-10 &lt;br&gt; Confirmed:  2018-10-06 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Neil Gorsuch &lt;br&gt; Yea:  54 &lt;br&gt; Nay:  45 &lt;br&gt; Nominated:  2017-02-01 &lt;br&gt; Confirmed:  2017-04-07 &lt;br&gt; President:  Donald Trump&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Elena Kagan &lt;br&gt; Yea:  63 &lt;br&gt; Nay:  37 &lt;br&gt; Nominated:  2010-05-10 &lt;br&gt; Confirmed:  2010-08-05 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sonia Sotomayor &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  31 &lt;br&gt; Nominated:  2009-06-01 &lt;br&gt; Confirmed:  2009-08-06 &lt;br&gt; President:  Barack Obama&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Samuel Alito &lt;br&gt; Yea:  58 &lt;br&gt; Nay:  42 &lt;br&gt; Nominated:  2005-11-10 &lt;br&gt; Confirmed:  2006-01-31 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Roberts &lt;br&gt; Yea:  78 &lt;br&gt; Nay:  22 &lt;br&gt; Nominated:  2005-09-06 &lt;br&gt; Confirmed:  2005-09-29 &lt;br&gt; President:  George W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Steven Breyer &lt;br&gt; Yea:  87 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1994-05-17 &lt;br&gt; Confirmed:  1994-07-29 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Ruth Bader Ginsburg &lt;br&gt; Yea:  96 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1993-07-22 &lt;br&gt; Confirmed:  1993-08-03 &lt;br&gt; President:  Bill Clinton&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Clarence Thomas &lt;br&gt; Yea:  52 &lt;br&gt; Nay:  48 &lt;br&gt; Nominated:  1991-07-08 &lt;br&gt; Confirmed:  1991-10-15 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  David Souter &lt;br&gt; Yea:  90 &lt;br&gt; Nay:  9 &lt;br&gt; Nominated:  1990-07-25 &lt;br&gt; Confirmed:  1990-10-02 &lt;br&gt; President:  George H.W. Bush&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Anthony Kennedy &lt;br&gt; Yea:  97 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1987-11-30 &lt;br&gt; Confirmed:  1998-02-03 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Antonin Scalia &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1986-06-24 &lt;br&gt; Confirmed:  1986-09-17 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Sandra Day O&#39;Connor &lt;br&gt; Yea:  99 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1981-08-19 &lt;br&gt; Confirmed:  1981-09-21 &lt;br&gt; President:  Ronald Reagan&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  John Paul Stevens &lt;br&gt; Yea:  98 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1975-11-28 &lt;br&gt; Confirmed:  1975-12-17 &lt;br&gt; President:  Gerald Ford&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  William Rehnquist &lt;br&gt; Yea:  68 &lt;br&gt; Nay:  26 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-10 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Lewis Powell &lt;br&gt; Yea:  89 &lt;br&gt; Nay:  1 &lt;br&gt; Nominated:  1971-10-22 &lt;br&gt; Confirmed:  1971-12-06 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Harry Blackmun &lt;br&gt; Yea:  94 &lt;br&gt; Nay:  0 &lt;br&gt; Nominated:  1970-04-15 &lt;br&gt; Confirmed:  1970-05-12 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Warren Burger &lt;br&gt; Yea:  73 &lt;br&gt; Nay:  3 &lt;br&gt; Nominated:  1969-05-23 &lt;br&gt; Confirmed:  1969-06-09 &lt;br&gt; President:  Richard Nixon&#34;,&#34;&lt;b&gt;Nominee:&lt;\/b&gt;  Thurgood Marshall &lt;br&gt; Yea:  69 &lt;br&gt; Nay:  11 &lt;br&gt; Nominated:  1967-06-13 &lt;br&gt; Confirmed:  1967-08-30 &lt;br&gt; President:  Lyndon Johnson&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[&#34;config.modeBarButtonsToAdd.0.click&#34;],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Degree-One Polynomials</title>
      <link>https://dsollberger.netlify.com/post/degree-one-polynomials/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/degree-one-polynomials/</guid>
      <description>


&lt;div id=&#34;problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The question that one of my teaching assistants posed was ‚ÄúWhat is the difference between &lt;code&gt;lm(y ~ x)&lt;/code&gt; and &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; for linear regression in R?‚Äù That is, it is quickly apparent that those commands produce different results, but for the same intention. Here I will try to explore the underlying difference.&lt;/p&gt;
&lt;p&gt;Disclaimer: I know that the following discussion is incomplete. These are simply notes that I threw together overnight.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exposition&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exposition&lt;/h2&gt;
&lt;p&gt;For a quick study, we can observe that the commands &lt;code&gt;lm(y ~ x)&lt;/code&gt; and &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; produce different results:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 50 ordered pairs of random numbers
x &amp;lt;- runif(50)
y &amp;lt;- runif(50, -3, 3)

# first linear model
lm1 &amp;lt;- lm(y ~ x)

# second linear model
lm2 &amp;lt;- lm(y ~ poly(x, 1))

# found coefficients
lm1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x)
## 
## Coefficients:
## (Intercept)            x  
##    -0.03135     -0.37976&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ poly(x, 1))
## 
## Coefficients:
## (Intercept)   poly(x, 1)  
##     -0.2030      -0.7187&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# plot
plot(x,y, main = &amp;quot;quick scatterplot and linear regression&amp;quot;)
points(mean(x), mean(y), col = &amp;quot;purple&amp;quot;, pch = 8)
abline(lm1, col = &amp;quot;red&amp;quot;, lwd = 3)
abline(lm2, col = &amp;quot;blue&amp;quot;, lwd = 3)
legend(0.5, 2, 
       c(&amp;quot;lm(y ~ x)&amp;quot;, &amp;quot;lm(y ~ poly(x, 1))&amp;quot;),
       col = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;),
       lwd = c(3,3))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://dsollberger.netlify.com/post/2018-09-30-degree-one-polynomials_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We observe that &lt;code&gt;lm(y ~ x)&lt;/code&gt; goes though the sample means &lt;span class=&#34;math inline&#34;&gt;\((\bar{x}, \bar{y})\)&lt;/span&gt;, while &lt;code&gt;lm(y ~ (poly,1))&lt;/code&gt; does not. Oddly enough, if we apply a metric such as the coefficient of determination (&lt;span class=&#34;math inline&#34;&gt;\(R^{2}\)&lt;/span&gt;), then the model metrics are the same!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(lm1)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.01688544&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(lm2)$adj.r.squared&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.01688544&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;Some searches on the web point toward how the &lt;code&gt;poly&lt;/code&gt; command uses &lt;a href=&#34;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&#34;&gt;othogonal polynomials&lt;/a&gt; by default. That is, modeling with &lt;span class=&#34;math display&#34;&gt;\[\hat{y} = a + bx + cx^{2} + ...\]&lt;/span&gt; is easy to interpret, higher degree terms will not add much to the predictive ability for our regression models (e.g. &lt;span class=&#34;math inline&#34;&gt;\(x^7\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(x^8\)&lt;/span&gt; are ‚Äútoo close‚Äù within some interval). Side note: with the &lt;span class=&#34;math display&#34;&gt;\[{1, x, x^{2}, ...}\]&lt;/span&gt; basis, we learn that the &lt;a href=&#34;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&#34;&gt;Vandermonde matrix&lt;/a&gt; for this basis has a &lt;em&gt;high condition number&lt;/em&gt; and calculations with this route are &lt;em&gt;ill-conditioned&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;coefficients-of-orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Coefficients of Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;There has been a &lt;a href=&#34;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&#34;&gt;lot of discussion&lt;/a&gt; about how &lt;code&gt;poly&lt;/code&gt; works and its internal and recursive algorithm to produce a set of orthogonal polynomials over an interval of values. Here I hope to produce a simple example where we can follow the numbers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 1:5       # mean is 3
y &amp;lt;- 15*x + 18 # line of slope 15 and y-intercept 18&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the &lt;code&gt;lm&lt;/code&gt; command quickly recovers the slope and intercept&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_raw &amp;lt;- lm(y ~ x)
lm_raw&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x)
## 
## Coefficients:
## (Intercept)            x  
##          18           15&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the route with orthogonal polynomials yields different coefficients.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_orth &amp;lt;- lm(y ~ poly(x,1))
lm_orth&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ poly(x, 1))
## 
## Coefficients:
## (Intercept)   poly(x, 1)  
##       63.00        47.43&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can &lt;a href=&#34;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&#34;&gt;extract the coefficents&lt;/a&gt; from the orthogonal polynomial route, along with some normalization factors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- attributes(poly(x,1))$coefs$alpha
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n &amp;lt;- attributes(poly(x,1))$coefs$norm2
n&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1  5 10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;building-orthogonal-polynomials&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building Orthogonal Polynomials&lt;/h2&gt;
&lt;p&gt;There are several ways to build orthogonal polynomials, and here I will try out the &lt;a href=&#34;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&#34;&gt;Gram-Schmidt process&lt;/a&gt;. For the base case, &lt;span class=&#34;math display&#34;&gt;\[p_{0} := 1\]&lt;/span&gt; The degree-one term is &lt;span class=&#34;math display&#34;&gt;\[p_{1}(x) = x - \frac{&amp;lt;x, p_{0}&amp;gt;}{&amp;lt;p_{0}, p_{0}&amp;gt;} = x - \frac{\int_{1}^{5} \! x \, dx}{\int_{1}^{5} \, dx} = x - 3\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that &lt;span class=&#34;math inline&#34;&gt;\(p_{1}(x) = x - 3\)&lt;/span&gt; is centered at the mean &lt;span class=&#34;math inline&#34;&gt;\(\bar{x} = 3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Combining the coefficients found from &lt;code&gt;lm(y ~ poly(x,1))&lt;/code&gt; and a normalization factor from above, we get&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{y} = 63 + 47.43 \cdot \frac{x - 3}{\sqrt{10}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which is indeed &lt;span class=&#34;math inline&#34;&gt;\(\hat{y} = 18 + 15x\)&lt;/span&gt; when simplified (up to rounding error, too much hand-waving, and a missing number).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&#34; class=&#34;uri&#34;&gt;https://mathoverflow.net/questions/38864/visualizing-orthogonal-polynomials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&#34; class=&#34;uri&#34;&gt;https://math.stackexchange.com/questions/2211054/condition-number-for-polynomial-interpolation-matrix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/39031172/how-poly-generates-orthogonal-polynomials-how-to-understand-the-coefs-ret&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&#34; class=&#34;uri&#34;&gt;https://stackoverflow.com/questions/26728289/extracting-orthogonal-polynomial-coefficients-from-rs-poly-function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&#34; class=&#34;uri&#34;&gt;http://www.math.tamu.edu/~yvorobet/MATH304-503/Lect4-04web.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>https://dsollberger.netlify.com/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/trying-out-flexdashboard/</guid>
      <description>


&lt;p&gt;Thanks to Dr.¬†Elaine McVey‚Äôs course at DataCamp, I feel that I can convert my Data Science course‚Äôs lab assignments and slides to &lt;code&gt;flexdashboard&lt;/code&gt;. Today, I converted the first lab assignment. The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.&lt;/p&gt;
&lt;p&gt;To convert my lab, which was previously in an R Markdown document for HTML output, I had to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;explicitly used &lt;code&gt;echo = TRUE&lt;/code&gt; in each code block that should be presented to the student&lt;/li&gt;
&lt;li&gt;used the &lt;code&gt;\huge&lt;/code&gt; LaTeX font size modifier on math-mode elements&lt;/li&gt;
&lt;li&gt;changed the YAML heading to call for &lt;code&gt;output:   flexdashboard::flex_dashboard: orientation: columns&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From there, I also started to arrange the ‚Äúparagraphs‚Äù into separate columns for a nice arrangement.&lt;/p&gt;
&lt;p&gt;&lt;img src = &#34;for%20Twitter.jpg&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>https://dsollberger.netlify.com/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/trying-out-flexdashboard/</guid>
      <description>&lt;p&gt;Thanks to Dr. Elaine McVey&amp;rsquo;s course at DataCamp, I feel that I can convert my Data Science course&amp;rsquo;s lab assignments and slides to &lt;code&gt;flexdashboard&lt;/code&gt;.  Today, I converted the first lab assignment.  The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.&lt;/p&gt;
&lt;p&gt;To convert my lab, which was previously in an R Markdown document for HTML output, I had to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;explicitly used &lt;code&gt;echo = TRUE&lt;/code&gt; in each code block that should be presented to the student&lt;/li&gt;
&lt;li&gt;used the &lt;code&gt;\huge&lt;/code&gt; LaTeX font size modifier on math-mode elements&lt;/li&gt;
&lt;li&gt;changed the YAML heading to call for &lt;code&gt;output: flexdashboard::flex_dashboard: orientation: columns&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From there, I also started to arrange the &amp;ldquo;paragraphs&amp;rdquo; into separate columns for a nice arrangement.&lt;/p&gt;
&lt;img src = &#34;for Twitter.jpg&#34;&gt;
</description>
    </item>
    
    <item>
      <title>Semester Schedule Planner</title>
      <link>https://dsollberger.netlify.com/post/semester-schedule-planner/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/semester-schedule-planner/</guid>
      <description>


&lt;p&gt;As a lecturer at UC Merced, each semester I find myself needing to figure out how many days I get to teach. Furthermore, I like to plan out my lecture schedule down to the days themselves. Here I hope to use some &lt;code&gt;R&lt;/code&gt; code to quickly figure out (say) which days are on Tuesday or Thursday.&lt;/p&gt;
&lt;div id=&#34;construction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Construction&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;R&lt;/code&gt;, the &lt;code&gt;seq&lt;/code&gt; command can be used with dates easily.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semester_dates &amp;lt;- seq(as.Date(&amp;quot;2018-08-22&amp;quot;), as.Date(&amp;quot;2018-12-07&amp;quot;), by = &amp;quot;days&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When working with time data, the &lt;code&gt;xts&lt;/code&gt; package (‚Äúextensible time series‚Äù) offers convenient tools for manipulating time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;xts&amp;quot;)
xts_dates &amp;lt;- as.xts( rep(NA, length(semester_dates)), order.by = semester_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The convention is that ‚Äú0‚Äù is a Sunday, ‚Äú1‚Äù is a Monday, ‚Ä¶, and ‚Äú5‚Äù is a Friday.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;monday-and-wednesday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monday and Wednesday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Mondays &amp;lt;- xts_dates[.indexwday(xts_dates) == 1]
head(Mondays)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-27   NA
## 2018-09-03   NA
## 2018-09-10   NA
## 2018-09-17   NA
## 2018-09-24   NA
## 2018-10-01   NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;MW_dates &amp;lt;- xts_dates[.indexwday(xts_dates) %in% c(1, 3)]
head(MW_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-22   NA
## 2018-08-27   NA
## 2018-08-29   NA
## 2018-09-03   NA
## 2018-09-05   NA
## 2018-09-10   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tuesday-and-thursday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tuesday and Thursday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TuTh_dates &amp;lt;- xts_dates[.indexwday(xts_dates) %in% c(2, 4)]
head(TuTh_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-23   NA
## 2018-08-28   NA
## 2018-08-30   NA
## 2018-09-04   NA
## 2018-09-06   NA
## 2018-09-11   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;friday&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Friday&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Fri_dates &amp;lt;- xts_dates[.indexwday(xts_dates) == 5]
head(Fri_dates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            [,1]
## 2018-08-24   NA
## 2018-08-31   NA
## 2018-09-07   NA
## 2018-09-14   NA
## 2018-09-21   NA
## 2018-09-28   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exporting-the-time-series&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exporting the Time Series&lt;/h2&gt;
&lt;p&gt;From here, I might still want to use Excel for data entry in my planning. &lt;code&gt;xts&lt;/code&gt; objects are still &lt;code&gt;zoo&lt;/code&gt; objects.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#write.zoo(Mondays, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
#write.zoo(MW_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
#write.zoo(TuTh_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)
write.zoo(Fri_dates, sep = &amp;quot;,&amp;quot;, file = &amp;quot;schedule.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I have a spreadsheet with the dates already arranged!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s see if I can make posts (mostly) through RStudio</title>
      <link>https://dsollberger.netlify.com/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</guid>
      <description>


&lt;p&gt;Let‚Äôs see if I can make posts (mostly) through RStudio&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trying out GitHub Pages with Blogdown</title>
      <link>https://dsollberger.netlify.com/post/trying-out-github-pages-with-blogdown/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/trying-out-github-pages-with-blogdown/</guid>
      <description>


&lt;p&gt;Today I am trying to get a &lt;code&gt;blogdown&lt;/code&gt; site to work with GitHub pages, but I cannot seem to get the posts to link correctly with relative links.&lt;/p&gt;
&lt;p&gt;Well, I hope to delete the pre-included widgets for now since I do not have publications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Customizing the homepage with widgets</title>
      <link>https://dsollberger.netlify.com/post/widgets/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/widgets/</guid>
      <description>&lt;p&gt;Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;About/biography&lt;/li&gt;
&lt;li&gt;Selected publications&lt;/li&gt;
&lt;li&gt;Recent publications&lt;/li&gt;
&lt;li&gt;Recent news/blog posts&lt;/li&gt;
&lt;li&gt;Projects&lt;/li&gt;
&lt;li&gt;Selected talks&lt;/li&gt;
&lt;li&gt;Recent talks&lt;/li&gt;
&lt;li&gt;Contact&lt;/li&gt;
&lt;li&gt;Tag cloud&lt;/li&gt;
&lt;li&gt;Hero (introduction)&lt;/li&gt;
&lt;li&gt;Custom widget (demonstrated with the &lt;em&gt;teaching&lt;/em&gt; example)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don&amp;rsquo;t need and customize the parameters of the widgets you wish to keep.&lt;/p&gt;
&lt;p&gt;The parameters for each widget vary. They can be found in the preamble/frontmatter (between the pair of &lt;code&gt;+++&lt;/code&gt;) for each widget installed in the &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;p&gt;By default, publications will be displayed in a simple list. If you prefer a more detailed list with abstract and image, you can enable the detailed publication list on the homepage by setting &lt;code&gt;list_format = 2&lt;/code&gt; in &lt;code&gt;content/home/publications.md&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;add-a-widget-to-the-homepage&#34;&gt;Add a widget to the homepage&lt;/h2&gt;
&lt;p&gt;To add a widget manually, copy the relevant widget from &lt;code&gt;themes/academic/exampleSite/content/home/&lt;/code&gt; to your &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Widget identifiers are set to their respective filenames, so a &lt;code&gt;content/home/about.md&lt;/code&gt; widget can be linked from the navigation bar by setting the relevant URL as &lt;code&gt;&amp;quot;#about&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This means that if you want to use multiple instances of a widget, each widget will be assigned a unique ID based on the filename that you set. You can then use that ID for linking, like in the above example.&lt;/p&gt;
&lt;h2 id=&#34;using-the-custom-widget&#34;&gt;Using the custom widget&lt;/h2&gt;
&lt;p&gt;You can use the custom widget to create your own home page sections.&lt;/p&gt;
&lt;p&gt;Simply duplicate (copy/paste) and rename the example &lt;em&gt;teaching&lt;/em&gt; file at &lt;code&gt;content/home/teaching.md&lt;/code&gt;. Then edit the section title, weight (refer to &lt;em&gt;Ordering sections&lt;/em&gt; below), and content as desired.&lt;/p&gt;
&lt;p&gt;You may also wish to add a navigation link to the top of the page that points to the new section. This can be achieved by adding something similar to the following lines to your &lt;code&gt;config.toml&lt;/code&gt;, where the URL will consist of the first title word in lowercase:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[menu.main]]
    name = &amp;quot;Research&amp;quot;
    url = &amp;quot;#research&amp;quot;
    weight = 10
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;remove-a-widget-from-the-homepage&#34;&gt;Remove a widget from the homepage&lt;/h2&gt;
&lt;p&gt;If you do not require a particular widget, you can simply delete any associated files from the &lt;code&gt;content/home/&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;To remove a navigation link from the top of the page, remove the associated &lt;code&gt;[[menu.main]]&lt;/code&gt; entry in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ordering-widgets&#34;&gt;Ordering widgets&lt;/h2&gt;
&lt;p&gt;The order that the homepage widgets are displayed in is defined by the &lt;code&gt;weight&lt;/code&gt; parameter in each of the files in the &lt;code&gt;content/home/&lt;/code&gt; directory. The widgets are displayed in ascending order of their &lt;code&gt;weight&lt;/code&gt;, so you can simply edit the &lt;code&gt;weight&lt;/code&gt; parameters as desired.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Managing content</title>
      <link>https://dsollberger.netlify.com/post/managing-content/</link>
      <pubDate>Mon, 18 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/managing-content/</guid>
      <description>&lt;p&gt;This is a brief guide to managing content with the Academic framework. Content can include publications, projects, talks, news/blog articles, and widget pages. After you have read this guide about creating and managing content, you may also be interested to learn about &lt;a href=&#34;https://dsollberger.netlify.com/post/writing-markdown-latex/&#34;&gt;writing content with Markdown, LaTeX, and Shortcodes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To enable LaTeX math rendering for a page, you should include &lt;code&gt;math = true&lt;/code&gt; in the page&amp;rsquo;s &lt;code&gt;+++&lt;/code&gt; preamble, as demonstrated in the included example site. Otherwise, to enable math on the homepage or for all pages, you must globally set &lt;code&gt;math = true&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To disable source code highlighting by default for all pages, set &lt;code&gt;highlight = false&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. You can then enable source code highlighting only on pages that need it by setting &lt;code&gt;highlight = true&lt;/code&gt; in that page&amp;rsquo;s preamble. See the &lt;a href=&#34;https://dsollberger.netlify.com/post/writing-markdown-latex/#code-highlighting&#34;&gt;code-highlighting docs&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;To display a featured image in content page headers, the parameters below can be inserted towards the end of a page&amp;rsquo;s &lt;code&gt;+++&lt;/code&gt; preamble. It is assumed that the image is located in your &lt;code&gt;static/img/&lt;/code&gt; folder, so the full path in the example below will be &lt;code&gt;static/img/headers/getting-started.png&lt;/code&gt;. The &lt;code&gt;caption&lt;/code&gt; parameter can be used to write an image caption or credit.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[header]
image = &amp;quot;headers/getting-started.png&amp;quot;
caption = &amp;quot;Image credit: [**Academic**](https://github.com/gcushen/hugo-academic/)&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;p&gt;If you wish to prevent a featured image automatically being used for a post&amp;rsquo;s thumbnail on the homepage, the &lt;code&gt;preview = false&lt;/code&gt; parameter can be added to &lt;code&gt;[header]&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#create-a-publication&#34;&gt;Create a publication&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#create-a-blog-post&#34;&gt;Create a blog post&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#create-a-project&#34;&gt;Create a project&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#create-a-talk&#34;&gt;Create a talk&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#create-a-widget-page&#34;&gt;Create a widget page&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#create-other-pages-eg-cv&#34;&gt;Create other pages (e.g. CV)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#manage-archive-pages&#34;&gt;Manage archive pages&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#removing-content&#34;&gt;Removing content&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#view-your-updated-site&#34;&gt;View your updated site&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#deploy-your-site&#34;&gt;Deploy your site&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;
&lt;h2 id=&#34;create-a-publication&#34;&gt;Create a publication&lt;/h2&gt;
&lt;p&gt;To create a new publication:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new publication/my-paper-name.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the default variables at the top of &lt;code&gt;content/publication/my-paper-name.md&lt;/code&gt; to include the details of your publication. The &lt;code&gt;url_&lt;/code&gt; variables are used to generate links associated with your publication, such as for viewing PDFs of papers. Here is an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+++
title = &amp;quot;A publication title, such as title of a paper&amp;quot;

# Date first published.
date = &amp;quot;2013-07-01&amp;quot;

# Authors. Comma separated list, e.g. `[&amp;quot;Bob Smith&amp;quot;, &amp;quot;David Jones&amp;quot;]`.
authors = [&amp;quot;First author&#39;s name&amp;quot;, &amp;quot;Second author&#39;s name&amp;quot;]

# Publication type.
# Legend:
# 0 = Uncategorized
# 1 = Conference proceedings
# 2 = Journal
# 3 = Work in progress
# 4 = Technical report
# 5 = Book
# 6 = Book chapter
publication_types = [&amp;quot;1&amp;quot;]

# Publication name and optional abbreviated version.
publication = &amp;quot;In *International Conference on Academic*. You may use *Markdown* for italics etc.&amp;quot;
publication_short = &amp;quot;In *ICA*&amp;quot;

# Abstract and optional shortened version.
abstract = &amp;quot;The abstract. Markdown and math can be used (note that math may require escaping as detailed in the red alert box below).&amp;quot;
abstract_short = &amp;quot;A short version of the abstract.&amp;quot;

# Featured image thumbnail (optional)
image_preview = &amp;quot;&amp;quot;

# Is this a selected publication? (true/false)
selected = true

# Projects (optional).
#   Associate this publication with one or more of your projects.
#   Simply enter the filename (excluding &#39;.md&#39;) of your project file in `content/project/`.
#   E.g. `projects = [&amp;quot;deep-learning&amp;quot;]` references `content/project/deep-learning.md`.
projects = []

# Links (optional).
url_pdf = &amp;quot;pdf/my-paper-name.pdf&amp;quot;
url_preprint = &amp;quot;&amp;quot;
url_code = &amp;quot;&amp;quot;
url_dataset = &amp;quot;&amp;quot;
url_project = &amp;quot;&amp;quot;
url_slides = &amp;quot;&amp;quot;
url_video = &amp;quot;&amp;quot;
url_poster = &amp;quot;&amp;quot;
url_source = &amp;quot;&amp;quot;

# Custom links (optional).
#   Uncomment line below to enable. For multiple links, use the form `[{...}, {...}, {...}]`.
# url_custom = [{name = &amp;quot;Custom Link&amp;quot;, url = &amp;quot;http://example.org&amp;quot;}]

# Does the content use math formatting?
math = true

# Does the content use source code highlighting?
highlight = true

# Featured image
# Place your image in the `static/img/` folder and reference its filename below, e.g. `image = &amp;quot;example.jpg&amp;quot;`.
[header]
image = &amp;quot;headers/bubbles-wide.jpg&amp;quot;
caption = &amp;quot;My caption üòÑ&amp;quot;

+++

Further details on your publication can be written here using *Markdown* for formatting. This text will be displayed on the Publication Detail page.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;url_&lt;/code&gt; links can either point to local or web content. Associated local publication content, such as PDFs, may be copied to a &lt;code&gt;static/pdf/&lt;/code&gt; folder and referenced like &lt;code&gt;url_pdf = &amp;quot;pdf/my-paper-name.pdf&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also associate custom link buttons with the publication by adding the following block within the variable preamble above, which is denoted by &lt;code&gt;+++&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url_custom = [{name = &amp;quot;Custom Link 1&amp;quot;, url = &amp;quot;http://example.org&amp;quot;},
              {name = &amp;quot;Custom Link 2&amp;quot;, url = &amp;quot;http://example.org&amp;quot;}]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you set &lt;code&gt;list_format=2&lt;/code&gt; to enable a detailed listing of publications in the Publication Widget (&lt;code&gt;home/publications.md&lt;/code&gt;) or Publication Archive (&lt;code&gt;publication/_index.md&lt;/code&gt;), then there are a few more optional variables that you can include in the publication page preamble. You may use &lt;code&gt;abstract_short = &amp;quot;friendly summary of abstract&amp;quot;&lt;/code&gt; and &lt;code&gt;publication_short = &amp;quot;abbreviated publication details&amp;quot;&lt;/code&gt; to display a friendly summary of the abstract and abbreviate the publication details, respectively. Furthermore, there is the option to display a different image on the homepage to the publication detail page by setting &lt;code&gt;image_preview = &amp;quot;my-image.jpg&amp;quot;&lt;/code&gt;. This can be useful if you wish to scale down the image for the homepage or simply if you just wish to show a different image for the preview.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
&lt;p&gt;Any double quotes (&lt;code&gt;&amp;quot;&lt;/code&gt;) or backslashes (e.g. LaTeX &lt;code&gt;\times&lt;/code&gt;) occurring within the value of any frontmatter parameter (such as the &lt;em&gt;abstract&lt;/em&gt;) should be escaped with a backslash (&lt;code&gt;\&lt;/code&gt;). For example, the symbol &lt;code&gt;&amp;quot;&lt;/code&gt; and LaTeX text &lt;code&gt;\times&lt;/code&gt; become &lt;code&gt;\&amp;quot;&lt;/code&gt; and &lt;code&gt;\\times&lt;/code&gt;, respectively. Refer to the &lt;a href=&#34;https://github.com/toml-lang/toml#user-content-string&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOML documentation&lt;/a&gt; for more info.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;create-a-blog-post&#34;&gt;Create a blog post&lt;/h2&gt;
&lt;p&gt;To create a blog/news article:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new post/my-article-name.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the newly created file &lt;code&gt;content/post/my-article-name.md&lt;/code&gt; with your full title and content.&lt;/p&gt;
&lt;p&gt;Hugo will automatically generate summaries of posts that appear on the homepage. If you are dissatisfied with an automated summary, you can either limit the summary length by appropriately placing &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; in the article body, or completely override the automated summary by adding a &lt;code&gt;summary&lt;/code&gt; parameter to the &lt;code&gt;+++&lt;/code&gt; preamble such that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;summary = &amp;quot;Summary of my post.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To disable commenting for a specific post, you can add &lt;code&gt;disable_comments = true&lt;/code&gt; to the post &lt;code&gt;+++&lt;/code&gt; preamble. Or to disable commenting for all posts, you can either set &lt;code&gt;disqusShortname = &amp;quot;&amp;quot;&lt;/code&gt; or &lt;code&gt;disable_comments = true&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-a-project&#34;&gt;Create a project&lt;/h2&gt;
&lt;p&gt;To create a project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new project/my-project-name.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the newly created file &lt;code&gt;content/project/my-project-name.md&lt;/code&gt;. Either you can link the project to an external project website by setting the &lt;code&gt;external_link = &amp;quot;http://external-project.com&amp;quot;&lt;/code&gt; variable at the top of the file, or you can add content (below the final &lt;code&gt;+++&lt;/code&gt;) in order to render a project page on your website.&lt;/p&gt;
&lt;h2 id=&#34;create-a-talk&#34;&gt;Create a talk&lt;/h2&gt;
&lt;p&gt;To create a talk:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new talk/my-talk-name.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the newly created file &lt;code&gt;content/talk/my-talk-name.md&lt;/code&gt; with your full talk title and details. Note that many of the talk parameters are similar to the publication parameters.&lt;/p&gt;
&lt;h2 id=&#34;create-a-widget-page&#34;&gt;Create a widget page&lt;/h2&gt;
&lt;p&gt;So you would like to create a page which utilizes Academic&amp;rsquo;s widget system, similar to the homepage?&lt;/p&gt;
&lt;p&gt;Create a new folder in your &lt;code&gt;content&lt;/code&gt; folder, naming it with your new page name. In this example, we will create a &lt;em&gt;courses&lt;/em&gt; page by creating a &lt;code&gt;content/courses/&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Within your new &lt;code&gt;content/courses/&lt;/code&gt; folder, create a file named &lt;code&gt;_index.md&lt;/code&gt; containing the following parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+++
title = &amp;quot;Courses&amp;quot;
date = 2017-01-01
widgets = true
+++
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install widgets into your &lt;code&gt;content/courses/&lt;/code&gt; folder. To achieve this, widgets can be copied from your &lt;code&gt;content/home/&lt;/code&gt; folder or downloaded from &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-other-pages-eg-cv&#34;&gt;Create other pages (e.g. CV)&lt;/h2&gt;
&lt;p&gt;For other types of content, it is possible to create your own custom pages. For example, let&amp;rsquo;s create a &lt;code&gt;cv.md&lt;/code&gt; page for your Curriculum Vitae in your &lt;code&gt;content&lt;/code&gt; folder. Copy across the frontmatter from the top of one of your post files, adapting it as necessary, and editing your Markdown content below. You can then link to your new page by adding the code &lt;code&gt;[My CV]{{&amp;lt; ref &amp;quot;cv.md&amp;quot; &amp;gt;}}&lt;/code&gt; to any of your existing content.&lt;/p&gt;
&lt;p&gt;Alternatively, for the above example, we could use a PDF of your Curriculum Vitae. For this purpose, create a folder called &lt;code&gt;files&lt;/code&gt; within your &lt;code&gt;static&lt;/code&gt; folder and move a PDF file named &lt;code&gt;cv.pdf&lt;/code&gt; to that location, so we have a &lt;code&gt;static/files/cv.pdf&lt;/code&gt; file path. The PDF can then be linked to from any content by using the code: &lt;code&gt;{{% staticref &amp;quot;files/cv.pdf&amp;quot; %}}Download my CV{{% /staticref %}}&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;manage-archive-pages&#34;&gt;Manage archive pages&lt;/h2&gt;
&lt;p&gt;The archive (or &lt;em&gt;node index&lt;/em&gt;) pages (e.g. &lt;code&gt;/post/&lt;/code&gt;) are the special pages which list all of your content. They can exist for blog posts, publications, and talks. The homepage widgets will automatically link to the archive pages when you have more items of content than can be displayed in the widget. Therefore, if you don&amp;rsquo;t have much content, you may not see the automatic links yet - but you can also manually link to them using a normal Markdown formatted link in your content.&lt;/p&gt;
&lt;p&gt;You can edit the title and add your own content, such as an introduction, by copying the following content &lt;code&gt;_index.md&lt;/code&gt; files from the example site to the same structure within your &lt;code&gt;content/&lt;/code&gt; folder:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/themes/academic/exampleSite/content/post/_index.md
/themes/academic/exampleSite/content/publication/_index.md
/themes/academic/exampleSite/content/talk/_index.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the &lt;code&gt;title&lt;/code&gt; parameter in each &lt;code&gt;_index.md&lt;/code&gt; as desired and add any content after the &lt;code&gt;+++&lt;/code&gt; preamble/frontmatter ends. You will notice that the &lt;code&gt;_index.md&lt;/code&gt; files differ slightly, with some having special options available for the associated content type. For example, &lt;code&gt;publication/_index.md&lt;/code&gt; contains an option for setting the citation style of the listings which appear on the publication archive page.&lt;/p&gt;
&lt;h2 id=&#34;removing-content&#34;&gt;Removing content&lt;/h2&gt;
&lt;p&gt;Generally, to remove content, simply delete the relevant file from your &lt;code&gt;content/post&lt;/code&gt;, &lt;code&gt;content/publication&lt;/code&gt;, &lt;code&gt;content/project&lt;/code&gt;, or &lt;code&gt;content/talk&lt;/code&gt; folder.&lt;/p&gt;
&lt;h2 id=&#34;view-your-updated-site&#34;&gt;View your updated site&lt;/h2&gt;
&lt;p&gt;After you have made changes to your site, you can view it by running the &lt;code&gt;hugo server&lt;/code&gt; command and then opening &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;localhost:1313&lt;/a&gt; in your web browser.&lt;/p&gt;
&lt;h2 id=&#34;deploy-your-site&#34;&gt;Deploy your site&lt;/h2&gt;
&lt;p&gt;Finally, you can build the static website to a &lt;code&gt;public/&lt;/code&gt; folder ready for deployment using the &lt;code&gt;hugo&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;You may then deploy your site by copying the &lt;code&gt;public/&lt;/code&gt; directory (by FTP, SFTP, WebDAV, Rsync, git push, etc.) to your production web server.&lt;/p&gt;
&lt;p&gt;Note that running &lt;code&gt;hugo&lt;/code&gt; does not remove any previously generated files before building. Therefore, it&amp;rsquo;s best practice to delete your &lt;code&gt;public/&lt;/code&gt; directory prior to running &lt;code&gt;hugo&lt;/code&gt; to ensure no old or interim files are deployed to your server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Writing content with Markdown, LaTeX, and Shortcodes</title>
      <link>https://dsollberger.netlify.com/post/writing-markdown-latex/</link>
      <pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/writing-markdown-latex/</guid>
      <description>&lt;p&gt;Content can be written using &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt;, and &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Shortcodes&lt;/a&gt;. Additionally, HTML may be used for advanced formatting.&lt;/p&gt;
&lt;p&gt;This article gives an overview of the most common formatting options.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#sub-headings&#34;&gt;Sub-headings&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#emphasis&#34;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ordered-lists&#34;&gt;Ordered lists&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#unordered-lists&#34;&gt;Unordered lists&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#images&#34;&gt;Images&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#emojis&#34;&gt;Emojis&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#blockquote&#34;&gt;Blockquote&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#footnotes&#34;&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#code-highlighting&#34;&gt;Code highlighting&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#highlighting-options&#34;&gt;Highlighting options&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#twitter-tweet&#34;&gt;Twitter tweet&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#youtube&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vimeo&#34;&gt;Vimeo&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#github-gist&#34;&gt;GitHub gist&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#speaker-deck&#34;&gt;Speaker Deck&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#rm-latex-math&#34;&gt;$\rm \LaTeX$ math&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#multiline-equations&#34;&gt;Multiline equations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#publication-abstracts&#34;&gt;Publication abstracts&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#table&#34;&gt;Table&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#alerts&#34;&gt;Alerts&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;
&lt;h2 id=&#34;sub-headings&#34;&gt;Sub-headings&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Italics with *asterisks* or _underscores_.

Bold with **asterisks** or __underscores__.

Combined emphasis with **asterisks and _underscores_**.

Strikethrough with ~~two tildes~~.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ordered-lists&#34;&gt;Ordered lists&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;1. First item
2. Another item
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;unordered-lists&#34;&gt;Unordered lists&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;* First item
* Another item
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;
&lt;p&gt;Images may be added to a page by placing them in your &lt;code&gt;static/img/&lt;/code&gt; folder and referencing them using one of the following two notations:&lt;/p&gt;
&lt;p&gt;A general image:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![alternative text for search engines](/img/screenshot.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A numbered figure with caption:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; figure src=&amp;quot;/img/screenshot.png&amp;quot; title=&amp;quot;Figure Caption&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;[I&#39;m a link](https://www.google.com)
[A post]({{&amp;lt; ref &amp;quot;post/hi.md&amp;quot; &amp;gt;}})
[A publication]({{&amp;lt; ref &amp;quot;publication/hi.md&amp;quot; &amp;gt;}})
[A project]({{&amp;lt; ref &amp;quot;project/hi.md&amp;quot; &amp;gt;}})
[Another section]({{&amp;lt; relref &amp;quot;hi.md#who&amp;quot; &amp;gt;}})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable linking to a file, such as a PDF, first place the file in your &lt;code&gt;static/files/&lt;/code&gt; folder and then link to it using the following form:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% staticref &amp;quot;files/cv.pdf&amp;quot; &amp;quot;newtab&amp;quot; %}}Download my CV{{% /staticref %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The optional &lt;code&gt;&amp;quot;newtab&amp;quot;&lt;/code&gt; argument for &lt;code&gt;staticref&lt;/code&gt; will cause the link to be opened in a new tab.&lt;/p&gt;
&lt;h2 id=&#34;emojis&#34;&gt;Emojis&lt;/h2&gt;
&lt;p&gt;See the &lt;a href=&#34;http://www.webpagefx.com/tools/emoji-cheat-sheet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emoji cheat sheet&lt;/a&gt; for available emoticons. The following serves as an example, but you should remove the spaces between each emoji name and pair of semicolons:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I : heart : Academic : smile :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ‚ù§Ô∏è Academic üòÑ&lt;/p&gt;
&lt;h2 id=&#34;blockquote&#34;&gt;Blockquote&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote.
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;I have more [^1] to say.

[^1]: Footnote example.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have more &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; to say.&lt;/p&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code highlighting&lt;/h2&gt;
&lt;p&gt;Pass the &lt;em&gt;language&lt;/em&gt; of the code, such as &lt;code&gt;python&lt;/code&gt;, as a parameter after three backticks:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;highlighting-options&#34;&gt;Highlighting options&lt;/h3&gt;
&lt;p&gt;The Academic theme uses &lt;a href=&#34;https://highlightjs.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;highlight.js&lt;/a&gt; for source code highlighting, and highlighting is enabled by default for all pages. However, several configuration options are supported that allow finer-grained control over highlight.js.&lt;/p&gt;
&lt;p&gt;The following table lists the supported options for configuring highlight.js, along with their expected type and a short description. A &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;config.toml&lt;/strong&gt; column means the value can be set globally in &lt;code&gt;config.toml&lt;/code&gt;, and a &amp;ldquo;yes&amp;rdquo; in the &lt;strong&gt;preamble&lt;/strong&gt; column means that the value can be set locally in a particular page&amp;rsquo;s preamble.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;option&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;preamble&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;enable/disable highlighting&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_languages&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;slice&lt;/td&gt;
&lt;td&gt;choose additional languages&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;highlight_style&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;choose a highlighting style&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;option-highlight&#34;&gt;Option &lt;code&gt;highlight&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;highlight&lt;/code&gt; option allows enabling or disabling the inclusion of highlight.js, either globally or for a particular page. If the option is unset, it has the same effect as if you had specified &lt;code&gt;highlight = true&lt;/code&gt;. That is, the highlight.js javascript and css files will be included in every page. If you&amp;rsquo;d like to only include highlight.js files on pages that actually require source code highlighting, you can set &lt;code&gt;highlight = false&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;, and then override it by setting &lt;code&gt;highlight = true&lt;/code&gt; in the preamble of any pages that require source code highlighting. Conversely, you could enable highlighting globally, and disable it locally for pages that do not require it. Here is a table that shows whether highlighting will be enabled for a page, based on the values of &lt;code&gt;highlight&lt;/code&gt; set in &lt;code&gt;config.toml&lt;/code&gt; and/or the page&amp;rsquo;s preamble.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;config.toml&lt;/th&gt;
&lt;th&gt;page preamble&lt;/th&gt;
&lt;th&gt;highlighting enabled for page?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unset or true&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;unset or false&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;option-highlight_languages&#34;&gt;Option &lt;code&gt;highlight_languages&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option allows you to specify additional languages that are supported by highlight.js, but are not considered &amp;ldquo;common&amp;rdquo; and therefore are not supported by default. For example, if you want source code highlighting for Go and clojure in all pages, set &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;, &amp;quot;clojure&amp;quot;]&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. If, on the other hand, you want to enable a language only for a specific page, you can set &lt;code&gt;highlight_languages&lt;/code&gt; in that page&amp;rsquo;s preamble.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; options specified in &lt;code&gt;config.toml&lt;/code&gt; and in a page&amp;rsquo;s preamble are additive. That is, if &lt;code&gt;config.toml&lt;/code&gt; contains, &lt;code&gt;highlight_languages = [&amp;quot;go&amp;quot;]&lt;/code&gt; and the page&amp;rsquo;s preamble contains &lt;code&gt;highlight_languages = [&amp;quot;ocaml&amp;quot;]&lt;/code&gt;, then javascript files for &lt;em&gt;both&lt;/em&gt; go and ocaml will be included for that page.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;highlight_languages&lt;/code&gt; option is set, then the corresponding javascript files will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available languages, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;languages&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;highlight_languages&lt;/code&gt; option provides an easy and convenient way to include support for additional languages to be severed from a CDN. If serving unmodified files from cdnjs doesn&amp;rsquo;t meet your needs, you can include javascript files for additional language support via one of the methods described in the &lt;a href=&#34;https://dsollberger.netlify.com/post/getting-started/#third-party-and-local-scripts-js&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;option-highlight_style&#34;&gt;Option &lt;code&gt;highlight_style&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option allows you to select an alternate css style for highlighted code. For example, if you wanted to use the solarized-dark style, you could set &lt;code&gt;highlight_style = &amp;quot;solarized-dark&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option is unset, the default is to use the file &lt;code&gt;/css/highlight.min.css&lt;/code&gt;, either the one provided by the Academic theme, or else the one in your local &lt;code&gt;static&lt;/code&gt; directory.  The &lt;code&gt;/css/highlight.min.css&lt;/code&gt; file provided by Academic is equivalent to the &lt;code&gt;github&lt;/code&gt; style from highlight.js.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;highlight_style&lt;/code&gt; option &lt;em&gt;is&lt;/em&gt; set, then &lt;code&gt;/css/highlight.min.css&lt;/code&gt; is ignored, and the corresponding css file will be served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs server&lt;/a&gt;. To see a list of available styles, visit the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs page&lt;/a&gt; and search for links with the word &amp;ldquo;styles&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;highlight.js demo page&lt;/a&gt; for examples of available styles.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;p&gt;Not all styles listed on the &lt;a href=&#34;https://highlightjs.org/static/demo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;highlight.js demo page&lt;/a&gt; are available from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs server&lt;/a&gt;. If you want to use a style that is not served by cdnjs, just leave &lt;code&gt;highlight_style&lt;/code&gt; unset, and place the corresponding css file in &lt;code&gt;/static/css/highlight.min.css&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;p&gt;If you don&amp;rsquo;t want to change the default style that ships with Academic but you do want the style file served from the &lt;a href=&#34;https://cdnjs.com/libraries/highlight.js/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdnjs server&lt;/a&gt;, set &lt;code&gt;highlight_style = &amp;quot;github&amp;quot;&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;highlight_style&lt;/code&gt; option is only recognized when set in &lt;code&gt;config.toml&lt;/code&gt;. Setting &lt;code&gt;highlight_style&lt;/code&gt; in your page&amp;rsquo;s preamble has no effect.&lt;/p&gt;
&lt;h2 id=&#34;twitter-tweet&#34;&gt;Twitter tweet&lt;/h2&gt;
&lt;p&gt;To include a single tweet, pass the tweet‚Äôs ID from the tweet&amp;rsquo;s URL as parameter to the shortcode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; tweet 666616452582129664 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;youtube&#34;&gt;Youtube&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vimeo&#34;&gt;Vimeo&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;github-gist&#34;&gt;GitHub gist&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; gist USERNAME GIST-ID  &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;speaker-deck&#34;&gt;Speaker Deck&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; speakerdeck 4e8126e72d853c0060001f97 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;rm-latex-math&#34;&gt;$\rm \LaTeX$ math&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-TeX&#34;&gt;$$\left [ ‚Äì \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;$$\left [ ‚Äì \frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2} + V \right ] \Psi = i \hbar \frac{\partial}{\partial t} \Psi$$&lt;/p&gt;
&lt;p&gt;Alternatively, inline math can be written by wrapping the formula with only a single &lt;code&gt;$&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is inline: $\mathbf{y} = \mathbf{X}\boldsymbol\beta + \boldsymbol\varepsilon$&lt;/p&gt;
&lt;p&gt;Note that Markdown special characters need to be escaped with a backslash so they are treated as math rather than Markdown. For example, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; become &lt;code&gt;\*&lt;/code&gt; and &lt;code&gt;\_&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h3 id=&#34;multiline-equations&#34;&gt;Multiline equations&lt;/h3&gt;
&lt;p&gt;The standard LaTeX line break consisting of 2 backslashes needs to be replaced with 6 backslashes:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-TeX&#34;&gt;$$f(k;p\_0^\*) = \begin{cases} p\_0^\* &amp;amp; \text{if }k=1, \\\\\\
1-p\_0^\* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;publication-abstracts&#34;&gt;Publication abstracts&lt;/h3&gt;
&lt;p&gt;As Hugo and Academic attempt to parse TOML, Markdown, and LaTeX content in the abstract, the following guidelines should be followed just for the publication &lt;code&gt;abstract&lt;/code&gt; and &lt;code&gt;abstract_short&lt;/code&gt; fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;escape each LaTeX backslash (&lt;code&gt;\&lt;/code&gt;) with an extra backslash, yielding &lt;code&gt;\\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;escape each LaTeX underscore (&lt;code&gt;_&lt;/code&gt;) with two backslashes, yielding &lt;code&gt;\\_&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, &lt;code&gt;abstract = &amp;quot;${O(d_{\max})}$&amp;quot;&lt;/code&gt; becomes &lt;code&gt;abstract = &amp;quot;${O(d\\_{\\max})}$&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;table&#34;&gt;Table&lt;/h2&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Markdown&#34;&gt;| Command           | Description                    |
| ------------------| ------------------------------ |
| `hugo`            | Build your website.            |
| `hugo serve -w`   | View your website.             |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Build your website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hugo serve -w&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;View your website.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;alerts&#34;&gt;Alerts&lt;/h2&gt;
&lt;p&gt;Alerts are a useful feature that add side content such as tips, notes, or warnings to your articles. They are especially handy when writing educational tutorial-style articles. Use the corresponding shortcodes to enable alerts inside your content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% alert note %}}
Here&#39;s a tip or note...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will display the following &lt;em&gt;note&lt;/em&gt; block:&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;p&gt;Here&amp;rsquo;s a tip or note&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;{{% alert warning %}}
Here&#39;s some important information...
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will display the following &lt;em&gt;warning&lt;/em&gt; block:&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
&lt;p&gt;Here&amp;rsquo;s some important information&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;A table of contents may be particularly useful for long posts or tutorial/documentation type content. Use the &lt;code&gt;{{% toc %}}&lt;/code&gt; shortcode anywhere you wish within your Markdown content to automatically generate a table of contents.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Footnote example.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions (FAQ)</title>
      <link>https://dsollberger.netlify.com/post/faq/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/faq/</guid>
      <description>&lt;p&gt;Common questions and answers will be listed here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I cloned/downloaded Academic but Hugo produces errors when using it with my existing Hugo site&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Academic is a website &lt;em&gt;framework&lt;/em&gt; rather than just a &lt;em&gt;theme&lt;/em&gt;. Therefore, you must follow the full installation guide found on the Demo/Documentation website or in the Github Readme. If you still have problems, first try running Hugo on the Academic Example Site found in the &lt;code&gt;themes/academic/exampleSite&lt;/code&gt; folder and then compare the configuration parameters in the Example Site&amp;rsquo;s &lt;code&gt;config.toml&lt;/code&gt; and content files with the files in your existing site.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hosting your site with Netlify or Cloudflare and experience strange behavior such as filters not working?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Disable post-processing steps such as &lt;em&gt;minification&lt;/em&gt; in your Netlify/Cloudflare admin panel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Publications and other content are not sorted by newest first&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hugo/TOML require that the value for the &lt;code&gt;date&lt;/code&gt; field should be in &lt;a href=&#34;https://github.com/toml-lang/toml#local-date-time&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOML format&lt;/a&gt;, as per frontmatter of the &lt;code&gt;content/publication/&lt;/code&gt; files in the example site. If you want to use a partial date, such as year, you should still complete a full date to make a valid TOML date format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Issue parsing LaTeX in publication abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s consider the following LaTeX which fails to parse correctly:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;abstract = &amp;quot;${O(d_{\max})}$&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a side effect of Academic and Hugo attempting to parse TOML, Markdown and LaTeX content in the abstract. The solution is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;escape each LaTeX backslash (&lt;code&gt;\&lt;/code&gt;) with an extra backslash, yielding &lt;code&gt;\\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;escape each LaTeX underscore (&lt;code&gt;_&lt;/code&gt;) with two backslashes, yielding &lt;code&gt;\\_&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, editing the above example, we get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;abstract = &amp;quot;${O(d\\_{\\max})}$&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Cannot achieve line break in multiline equation (LaTeX/Mathjax)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\\&lt;/code&gt; usually achieves a line break in a multiline LaTeX/Mathjax equation, but due to Hugo&amp;rsquo;s Markdown parser it doesn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Solution: use 6 backslashes for a line break, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\begin{eqnarray} 
y &amp;amp;=&amp;amp; 1+1   \\\\\\
&amp;amp;=&amp;amp; 2
\end{eqnarray}$$
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://dsollberger.netlify.com/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      <guid>https://dsollberger.netlify.com/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://dsollberger.netlify.com/dsollberger/blog/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll to Hugo</title>
      <link>https://dsollberger.netlify.com/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>https://dsollberger.netlify.com/post/migrate-from-jekyll/</guid>
      <description>&lt;p&gt;Here are a few tips for migrating an existing website from Jekyll to Hugo. These tips can be applied in conjunction with following Hugo Academic&amp;rsquo;s &lt;a href=&#34;https://dsollberger.netlify.com/post/getting-started/&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;‚ñæ &amp;lt;root&amp;gt;/
    ‚ñæ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;should become&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;‚ñæ &amp;lt;root&amp;gt;/
    ‚ñæ static/
        ‚ñæ images/
            logo.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;fix-content&#34;&gt;Fix content&lt;/h2&gt;
&lt;p&gt;Depending on the amount of customization that was done for each post in Jekyll, this step will require more or less effort. There are no hard and fast rules here except that &lt;code&gt;hugo server --watch&lt;/code&gt; and the Hugo Academic example site are your friends. Test your changes and fix errors as needed.&lt;/p&gt;
&lt;h2 id=&#34;publish&#34;&gt;Publish&lt;/h2&gt;
&lt;p&gt;The default is for Jekyll to publish the website to a &lt;code&gt;_site&lt;/code&gt; directory, whereas Hugo publishes to a &lt;code&gt;public&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2 id=&#34;a-practical-example&#34;&gt;A practical example&lt;/h2&gt;
&lt;p&gt;Alexandre Normand migrated his website from Jekyll to Hugo in less than a day. You can see all his changes by looking at this GitHub &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b81495423294208cc74d610&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diff&lt;/a&gt;. However, bear in mind that this example is &lt;strong&gt;not specific to the Academic theme nor does it use the latest version of Hugo&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
