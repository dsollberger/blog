<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Median Data Scientist</title>
    <link>/post/</link>
    <description>Recent content in Posts on The Median Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 -0800</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TidyTuesday: Roman Emperors</title>
      <link>/post/tidytuesday-roman-emperors/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday-roman-emperors/</guid>
      <description>IntroductionToday, for practice with ggplot2, I wish to replicate @JoshuaFeldman’s wonderful #TidyTuesday submission about the dataset of Roman emperors.
library(&amp;quot;tidyverse&amp;quot;)TidyTuesday’s Roman Emperor dataset — posted on August 13, 2019# TidyTuesday&amp;#39;s given line of code to load the dataemperors &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv&amp;quot;)Exploring the Datadim(emperors)## [1] 68 16colnames(emperors)## [1] &amp;quot;index&amp;quot; &amp;quot;name&amp;quot; &amp;quot;name_full&amp;quot; &amp;quot;birth&amp;quot; &amp;quot;death&amp;quot; ## [6] &amp;quot;birth_cty&amp;quot; &amp;quot;birth_prv&amp;quot; &amp;quot;rise&amp;quot; &amp;quot;reign_start&amp;quot; &amp;quot;reign_end&amp;quot; ## [11] &amp;quot;cause&amp;quot; &amp;quot;killer&amp;quot; &amp;quot;dynasty&amp;quot; &amp;quot;era&amp;quot; &amp;quot;notes&amp;quot; ## [16] &amp;quot;verif_who&amp;quot;emperors %&amp;gt;%filter(birth_prv !</description>
    </item>
    
    <item>
      <title>Recent Supreme Court Cases</title>
      <link>/post/recent-supreme-court-cases/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/recent-supreme-court-cases/</guid>
      <description>Introductionlibrary(&amp;quot;tidyverse&amp;quot;)Today, I am going to create an overly simplified view of the past 10 Supreme Court decisions for the sake of coding practice with the ggplot package.
data source: SCOTUS Bloguseful tool: Convert Town’s “Column to Comma Separated Values” functionDataJust in case anyone actually uses my blog post, I will type out the data manually instead of load a separate CSV file so that anyone can copy-and-paste the code for replicability.</description>
    </item>
    
    <item>
      <title>Fall Plans for American Universities</title>
      <link>/post/fall-plans-for-american-universities/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/fall-plans-for-american-universities/</guid>
      <description>IntroductionToday’s coding practice is based on the following article and data source (there is literally a “Get the Data” link):
Here’s a List of Colleges’ Plans for Reopening in the Falllibrary(&amp;quot;geofacet&amp;quot;)library(&amp;quot;rvest&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)# load datadf_raw &amp;lt;- read_csv(&amp;quot;data-w8lLG.csv&amp;quot;)colnames(df_raw)## [1] &amp;quot;Institution&amp;quot; &amp;quot;Control&amp;quot; &amp;quot;State&amp;quot; &amp;quot;Category&amp;quot;Data Wrangling# filter out Excel artifacts (trivial, empty rows)df &amp;lt;- df_raw %&amp;gt;%filter(Institution != &amp;quot;#REF!&amp;quot;)#States as factorsstates_alphabetically &amp;lt;- sort(unique(df$State))df$State_factor &amp;lt;- factor(df$State,levels = states_alphabetically)#extracting text from urls (rvest!</description>
    </item>
    
    <item>
      <title>R Installation (Summer 2020)</title>
      <link>/post/r-installation-summer-2020/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-installation-summer-2020/</guid>
      <description>If you are planning to do the R assignments on your own computer (recommended), then here is a quick outline for obtaining the software.
There are two separate software programs. Most people find it easier to use RStudio. than just R, but you need to install R first before installing RStudio (analogously speaking: you need an cell phone before you can use an cell phone case).If you have R and RStudio from a previous course, you still need to update to the current versions!</description>
    </item>
    
    <item>
      <title>Geofacet plot vingette</title>
      <link>/post/geofacet-plot-vingette/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/geofacet-plot-vingette/</guid>
      <description>Today I am going to try to make a geofacet graph using the GAI (Global Acceptability Index) data. My goal is to show trends in LGBT acceptance in Europe between the years 2003 and 2017.
Sources and toolsSocial Acceptance of LGBT People in 174 Countries publication from the UCLA School of Law Williams Institutegeofacet R packageList of European nationsConvert Town to convert spreadsheet columns to comma-separated listslibrary(&amp;quot;geofacet&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)Dataraw_data &amp;lt;- read_csv(&amp;quot;gai.</description>
    </item>
    
    <item>
      <title>Mapping Social Acceptance of LGBT People</title>
      <link>/post/mapping-social-acceptance-of-lgbt-people/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/mapping-social-acceptance-of-lgbt-people/</guid>
      <description>Inspired by this morning’s meeting of the Bisexual Research Group, I am going to draft a quick map of LGBT acceptance in Africa.
Sources and toolsSocial Acceptance of LGBT People in 174 Countries publication from the UCLA School of Law Williams InstituteList of African nationsSimplyPDF to extract table of data from a PDF documentConvert Town to convert spreadsheet columns to comma-separated listslibrary(&amp;quot;tidyverse&amp;quot;)Datarank &amp;lt;- 1:174countries_text &amp;lt;- &amp;quot;Iceland,Netherlands,Norway,Canada,Spain,Belgium,Ireland,Sweden,Denmark,Nepal,Great Britain,Luxembourg,Malta,Uruguay,New Zealand,Germany,Finland,Switzerland,Puerto Rico,Australia,United States,France,Argentina,Austria,Brazil,Cape Verde,Chile,Philippines,Hong Kong,Italy,Portugal,Mexico,South Africa,Costa Rica,Cuba,Czech Republic,Colombia,Slovenia,Venezuela,Taiwan,Ecuador,Nicaragua,Bahrain,Bolivia,Israel,Suriname,Laos,Syria,Panama,El Salvador,Mauritius,Northern Cyprus,Peru,Croatia,Dominican Republic,Namibia,Honduras,Paraguay,Cyprus,Thailand,Slovakia,Greece,Mozambique,Andorra,Hungary,Japan,South Korea,Estonia,Myanmar,Poland,Bangladesh,Barbados,Cambodia,Guatemala,Singapore,Sao Tome and Principe,Trinidad and Tobago,Guyana,Bulgaria,Vietnam,India,Botswana,Grenada,Latvia,Turkey,Bahamas,Belize,Saint Kitts and Nevis,Malaysia,Serbia,Algeria,Lithuania,Jamaica,Dominica,Romania,Bhutan,Lebanon,Saint Lucia,Swaziland,Lesotho,China,Antigua and Barbuda,Angola,Yemen,Benin,Haiti,Uzbekistan,Libya,Montenegro,Tunisia,Saint Vincent and the Grenadines,Kuwait,Uganda,Jordan,Albania,Belarus,Gambia,Morocco,Kenya,Russia,Democratic Republic of the Congo,Ukraine,Qatar,Palestine,Madagascar,Tanzania,Cote d&amp;#39;Ivoire,Republic of the Congo,Iraq,Gabon,Kazakhstan,Sudan,Bosnia Herzegovina,Sierra Leone,Macedonia,Comoros,Saudi Arabia,Burkina Faso,Togo,Kyrgyzstan,Ghana,Mongolia,Rwanda,Kosovo,Cameroon,Nigeria,Zambia,Central African Republic,Zimbabwe,Indonesia,Djibouti,Chad,Niger,Mali,Guinea,Afghanistan,Liberia,Moldova,Georgia,Burundi,South Sudan,Mauritania,Sri Lanka,Iran,Pakistan,Malawi,Nagorno- Karabakh,Armenia,Egypt,Ethiopia,Somaliland,Senegal,Azerbaijan,Tajikistan&amp;quot;country &amp;lt;- str_split(countries_text,&amp;quot;,&amp;quot;)[[1]]GAI_text &amp;lt;- &amp;quot;8.</description>
    </item>
    
    <item>
      <title>Vote by Mail data</title>
      <link>/post/vote-by-mail-data/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/vote-by-mail-data/</guid>
      <description>library(&amp;quot;dplyr&amp;quot;)library(&amp;quot;ggplot2&amp;quot;)DataToday I am going to try to make a choropleth (map + data) of the percentage of registered voters that sent in ballots for the 2018 elections in the USA. I gathered the data from and by the following sites:
Few States Are Prepared To Switch To Voting By Mail. That Could Make For A Messy Election — FiveThirtyEight artcle from April 27, 2020How to Create a Comma Separated List from an Excel Column — from University of Pennsylvaniastates &amp;lt;- tolower( sort(c(state.</description>
    </item>
    
    <item>
      <title>Analysis of NYT Sample of Covid-19 Obituaries</title>
      <link>/post/analysis-of-nyt-sample-of-covid-19-obituaries/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/analysis-of-nyt-sample-of-covid-19-obituaries/</guid>
      <description>Obtaining the DataOn May 24, 2020, the New York Times published an article called “An Incalcuable Loss”
&amp;quot;America is fast approaching a grim milestone in the coronavirus outbreak — each figure here represents one of the nearly 100,000 lives lost so far. But a count reveals only so much. Memories, gathered from obituaries across the country, help us to reckon with what was lost.&amp;quot;What I am trying to do today is summarize the 1001 obituaries.</description>
    </item>
    
    <item>
      <title>Introduction to Unsupervised Learning</title>
      <link>/post/introduction-to-unsupervised-learning/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-unsupervised-learning/</guid>
      <description>Unsupervised LearningSupervised learning has the goal of making predictions with a set of known labels for the response variable.In unsupervised learning, we try to find structure in the data of the response variable without predetermined labels.Goal: organize the items available in the Animal Crossing video game
Data set: Animal CrossingSource: VillagerDB, MetaCritic, and TidyTuesday
Animal Crossing Tidy Tuesdaylibrary(&amp;quot;ggrepel&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)# critic &amp;lt;- readr::read_tsv(&amp;#39;https://raw.</description>
    </item>
    
    <item>
      <title>Introduction to Unsupervised Learning</title>
      <link>/post/introduction-to-unsupervised-learning/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-unsupervised-learning/</guid>
      <description>Unsupervised Learning  Supervised learning has the goal of making predictions with a set of known labels for the response variable. In unsupervised learning, we try to find structure in the data of the response variable without predetermined labels.  Goal: organize the items available in the Animal Crossing video game
Data set: Animal Crossing Source: VillagerDB, MetaCritic, and TidyTuesday
 Animal Crossing Tidy Tuesday  library(&amp;quot;ggrepel&amp;quot;) library(&amp;quot;tidyverse&amp;quot;) # critic &amp;lt;- readr::read_tsv(&#39;https://raw.</description>
    </item>
    
    <item>
      <title>Supervised Learning</title>
      <link>/post/supervised-learning/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/supervised-learning/</guid>
      <description>Supervised LearningSupervised learning has the goal of making predictions with a set of known labels for the response variable.In unsupervised learning, we try to find structure in the data of the response variable without predetermined labels.Goal: predict the personality type of each character in Animal Crossing
Data set: Animal CrossingSource: VillagerDB, MetaCritic, and TidyTuesday
Animal Crossing Tidy Tuesdaylibrary(&amp;quot;caret&amp;quot;)library(&amp;quot;randomForest&amp;quot;)library(&amp;quot;tidymodels&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)# critic &amp;lt;- readr::read_tsv(&amp;#39;https://raw.</description>
    </item>
    
    <item>
      <title>Introduction to Machine Learning</title>
      <link>/post/introduction-to-machine-learning/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-machine-learning/</guid>
      <description>Goals for todayintroduce machine learning (ideas and terminology)introduce tidymodels packagepractice with a TidyTuesday data setlibrary(&amp;quot;tidymodels&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)Data: Tour de FranceSource: TidyTuesday data set from April 7, 2020
tdf_winners &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-07/tdf_winners.csv&amp;#39;)str(tdf_winners)## Classes &amp;#39;spec_tbl_df&amp;#39;, &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;: 106 obs. of 19 variables:## $ edition : num 1 2 3 4 5 6 7 8 9 10 ...## $ start_date : Date, format: &amp;quot;1903-07-01&amp;quot; &amp;quot;1904-07-02&amp;quot; .</description>
    </item>
    
    <item>
      <title>Introduction to Bioconductor</title>
      <link>/post/introduction-to-bioconductor/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-bioconductor/</guid>
      <description>“Bioconductor provides tools for the analysis and comprehension of high-throughput genomic data. Bioconductor uses the R statistical programming language, and is open source and open development.”
https://www.bioconductor.org/
library(&amp;quot;dplyr&amp;quot;)library(&amp;quot;ggplot2&amp;quot;)InstallationTo install core packages, type the following in an R command window.
This may take around 5 minutesWhen the option for updating packages appears, type in “a” for “all”#leave as eval = FALSE when knittingif (!</description>
    </item>
    
    <item>
      <title>Troubleshooting for R, RStudio, and Tidyverse installation</title>
      <link>/post/r-troubleshooting-for-students/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-troubleshooting-for-students/</guid>
      <description>Why doesn’t my R look like your R [software]?RStudio says that it cannot find the R binaries.We cannot install software (on iPad, Chromebook, etc.)tidyverse cannot be found[package] is not available for R version …there is no package ‘rlang’there is no package ‘broom’rlang and/or broom still do not workHow do we know which is the RMD file and which is the HTML file?</description>
    </item>
    
    <item>
      <title>R Installation</title>
      <link>/post/r-installation-for-students/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-installation-for-students/</guid>
      <description>If you are planning to do the R assignments on your own computer (recommended), then here is a quick outline for obtaining the software.
There are two separate software programs. Most people find it easier to use RStudio. than just R, but you need to install R first before installing RStudio (analogously speaking: you need an cell phone before you can use an cell phone case).If you have R and RStudio from a previous course, you still need to update to the current versions!</description>
    </item>
    
    <item>
      <title>Duolingo Leagues</title>
      <link>/post/duolingo-leagues/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/duolingo-leagues/</guid>
      <description>Duolingo, the language learning app, places users in groups of 50 and assigns a league to each user to encourage competition. The leagues are
Bronze, Silver, Gold, Sapphire, Ruby, Emerald, Amethyst, Pearl, Obsidian, and Diamond (in that increasing order)What proportion of Duolingo users are in each league?The rules are
everyone starts in the Bronze Leaguethe top 15 percent of each group gets promoted to the next league up (measured weekly)the bottom 10 percent of each group is related downwardIn this post, I will try out some stochastic processes calculations to answer that question.</description>
    </item>
    
    <item>
      <title>Hikes I&#39;ve Completed</title>
      <link>/post/hikes-i-ve-completed/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/hikes-i-ve-completed/</guid>
      <description>Here I will plot some of the hikes I have done as elevation (from sea level) versus distance. I was inspired by this Reddit post
Today’s code was great practice with
geom_segmentgeom_label_repeland using xlim and ylim to expand the plot.
library(ggrepel)library(tidyverse)library(readxl)df_info &amp;lt;- read_excel(&amp;quot;hikes.xlsx&amp;quot;, sheet = &amp;quot;info&amp;quot;)df_info %&amp;gt;% print()## # A tibble: 9 x 6## Region trail distance trailhead elevation peak## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 Tahoe Mt Tallac 5.</description>
    </item>
    
    <item>
      <title>Gender of Frasier Characters</title>
      <link>/post/gender-of-frasier-characters/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/gender-of-frasier-characters/</guid>
      <description>“I am not a man…”
For work, I need to take a list of names and try to infer the gender. Here I try an R package on the character names in the TV show Fraiser.
The gender package#install.packages(&amp;quot;gender&amp;quot;) #works fine## user needs to download database too#install_genderdata_package() #did not work (&amp;quot;error reading from connection&amp;quot;)## as suggested by the bug report at https://github.com/ropensci/drat/issues/6#install.packages(&amp;quot;devtools&amp;quot;)#library(devtools)#devtools::install_github(&amp;quot;ropensci/genderdata&amp;quot;)Trial Runlibrary(gender)library(ggpubr)library(tidyverse)gender(&amp;quot;frasier&amp;quot;, method = &amp;quot;ssa&amp;quot;, years = c(1940, 1990))## # A tibble: 1 x 6## name proportion_male proportion_female gender year_min year_max## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 frasier 1 0 male 1940 1990Cast of CharactersNow I will try to run the gender function over a list of names (criteria: characters that appeared in at least 6 episodes).</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.
4/6/2019
Dear DatASci,
I write to ask you for your input in developing a group response to these recent events.
Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here: https://www.datacamp.com/community/blog/note-to-our-community. To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event.</description>
    </item>
    
    <item>
      <title>Response to DataCamp&#39;s 20190404 Community Post</title>
      <link>/post/response-to-datacamp-s-20190404-community-post/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/response-to-datacamp-s-20190404-community-post/</guid>
      <description>This is the letter I sent out to my data science organization about the news that came out of DataCamp this week.
4/6/2019
Dear DatASci,
I write to ask you for your input in developing a group response to these recent events.
Overnight on Thursday, April 4, DataCamp released a statement in their official blog that you can find here: https://www.datacamp.com/community/blog/note-to-our-community. To summarize, in October of 2017, an executive at the company sexually harassed an employee at a company social event.</description>
    </item>
    
    <item>
      <title>Random Walks (draft)</title>
      <link>/post/random-walks-draft/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/random-walks-draft/</guid>
      <description>library(&amp;quot;gganimate&amp;quot;)library(&amp;quot;ggplot2&amp;quot;)p = 1/2# parametersp &amp;lt;- 0.5Tmax = 60# start at the originx = 0y = 0t = 0df &amp;lt;- data.frame(x,y,t)# random walkfor(i in 1:Tmax){t &amp;lt;- t + 1if(runif(1) &amp;lt; p){x &amp;lt;- x - 1} else {x &amp;lt;- x + 1}# reset process if dot leaves viewif(abs(x) &amp;gt; 10){x &amp;lt;- 0}this_step &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>Valentine&#39;s Day 2019</title>
      <link>/post/valentine-s-day-2019/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/valentine-s-day-2019/</guid>
      <description>In this short project, I hope to draw a heart through an animation of appearing dots.
library(&amp;quot;gganimate&amp;quot;)library(&amp;quot;ggforce&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)Draw a HeartHere I will place two circles centered at \((\pm 1, 1)\) with the same radius \(r = \sqrt{2}\).
circles &amp;lt;- data.frame(x0 = c(-1,1),y0 = rep(1,2),r = rep(1, 2))right_pt &amp;lt;- (sqrt(2) + 1) / sqrt(2)left_pt &amp;lt;- -1*right_ptf &amp;lt;- function(x){abs(x) - sqrt(2)}ggplot(data.frame(x = c(left_pt, right_pt)), aes(x)) +coord_fixed() +geom_circle(aes(x0 = x0, y0 = y0, r = r), data = circles, inherit.</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>Packagesworkshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)install.packages(workshop_packages)library(&amp;quot;gganimate&amp;quot;)## Loading required package: ggplot2library(&amp;quot;ggplot2&amp;quot;)library(&amp;quot;mosaic&amp;quot;)## Loading required package: dplyr## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, union## Loading required package: lattice## Loading required package: ggformula## Loading required package: ggstance## ## Attaching package: &amp;#39;ggstance&amp;#39;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:## ## geom_errorbarh, GeomErrorbarh## ## New to ggformula?</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>Packages workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;) install.packages(workshop_packages)  library(&amp;quot;gganimate&amp;quot;)  ## Loading required package: ggplot2  library(&amp;quot;ggplot2&amp;quot;) library(&amp;quot;mosaic&amp;quot;)  ## Loading required package: dplyr  ## ## Attaching package: &#39;dplyr&#39;  ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag  ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union  ## Loading required package: lattice  ## Loading required package: ggformula  ## Loading required package: ggstance  ## ## Attaching package: &#39;ggstance&#39;  ## The following objects are masked from &#39;package:ggplot2&#39;: ## ## geom_errorbarh, GeomErrorbarh  ## ## New to ggformula?</description>
    </item>
    
    <item>
      <title>gganatogram and gganimate</title>
      <link>/post/gganatogram-and-gganimate/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gganatogram-and-gganimate/</guid>
      <description>Today I wanted to see if I could create a slideshow of pictures from the gganatogram package. I wanted to combine them with the gganimate package, but I have not figured out how to get that to work. (In particular, the gganatogram() function seems to return a different list layout than ggplot objects.)
library(gganatogram)## Loading required package: ggpolypath## Loading required package: ggplot2library(gganimate)library(profvis)N &amp;lt;- 25 # number of cell samplesnum_cell_parts &amp;lt;- nrow(cell_key$cell)# randomly select a random number of cell partspart_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))cell_num &amp;lt;- rep(1, length(part_picker))this_cell &amp;lt;- cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ]cell_samples &amp;lt;- cbind(this_cell, cell_num)for(j in 2:N){part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))cell_num &amp;lt;- rep(j, length(part_picker))this_cell &amp;lt;- cbind( cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ], cell_num)cell_samples &amp;lt;- rbind(cell_samples, this_cell)# figure_list[j] &amp;lt;- gganatogram(data = this_cell,# outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) + # theme_void() + # coord_fixed()png(filename = paste0(j, &amp;quot;.</description>
    </item>
    
    <item>
      <title>Curse of Dimensionality</title>
      <link>/post/curse-of-dimensionality/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/curse-of-dimensionality/</guid>
      <description>Today, I hope to present a quick glimpse at the phenomenon called the “Curse of Dimensionality”. For this demonstration, I am simply calculating how much random data stays within two standard deviations (in the Euclidean norm) as we go from one dimension to higher dimensions.
Random DataHere are 10 vectors of 100 random numbers each sampled from the standard normal distribution stored as a matrix …
X &amp;lt;- matrix(rnorm(1000), nrow = 100, ncol = 10)… and as a data frame.</description>
    </item>
    
    <item>
      <title>Graduation Rates</title>
      <link>/post/graduation-rates/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/graduation-rates/</guid>
      <description>In this post, I want to run an example of absorbing states in stochastic processes. This example is based on Example 3.29 in Introduction to Stochastic Processes in R by Robert Dobrow.
DataThe data I have assembled is based on IRDS reports from my own University of California at Merced.
# weightsweights &amp;lt;- c(20, 70, 0, 0, 10, 0, 0, 5, 89, 0, 6, 0, 0, 0, 3, 94, 3, 0, 0, 0, 0, 24, 1, 76, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100)sparse_weights &amp;lt;- weights[weights &amp;gt; 0]# transition matrix (row stochastic)P &amp;lt;- matrix(weights, nrow = 6, byrow = TRUE)*0.</description>
    </item>
    
    <item>
      <title>My First gganimate Plot</title>
      <link>/post/my-first-gganimate-plot/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-gganimate-plot/</guid>
      <description>Today I finally read a tutorial on gganimate, and here I will build my first example. My hope is to eventually simulate traversal on a directed graph.
library(tidyverse)library(gganimate)Create Node DataFor this example, I will have 3 nodes (located at 3 vertices of a triangle), 100 dots distributed among the nodes, and a new placement over 21 states in time.
N &amp;lt;- 100 # number of dotsT &amp;lt;- 20 # number of iterationsnode_names &amp;lt;- c(&amp;quot;Node 1&amp;quot;, &amp;quot;Node 2&amp;quot;, &amp;quot;Node 3&amp;quot;)iter &amp;lt;- rep(0, N)node &amp;lt;- rep(&amp;quot;Node 1&amp;quot;, N)x &amp;lt;- 10 + rnorm(N, 0, 2)y &amp;lt;- 20 + rnorm(N, 0, 2)states &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>SAMPLe talk (Fall 2018)</title>
      <link>/post/sample-talk-fall-2018/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sample-talk-fall-2018/</guid>
      <description>ggplot2http://rpubs.com/dsollberger/activelearning
Plotlyhttp://rpubs.com/dsollberger/scc
Shiny Dashboardhttps://dsollberger.shinyapps.io/SHW3/
Flex Dashboardhttps://dsollberger.shinyapps.io/shw7/
Shiny and htmlwidgetshttps://dsollberger.shinyapps.io/SAMPLe/
</description>
    </item>
    
    <item>
      <title>Supreme Court Confirmations (1967-present)</title>
      <link>/post/supreme-court-confirmations-1967-present/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/supreme-court-confirmations-1967-present/</guid>
      <description>IntroductionFollowing up on Rachel Wellford’s tweet about Senate votes for Supreme Court confirmations, I decided to try to graph the data. Below, I have
a ggplot picture with decent labelinga searchable datatablea plotly interactive graphThe data came from Senate.gov. I chose to focus on 1967 onward because it appeared that voting procedures were slightly different before Thurgood Marshall’s nomination process.</description>
    </item>
    
    <item>
      <title>Degree-One Polynomials</title>
      <link>/post/degree-one-polynomials/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/degree-one-polynomials/</guid>
      <description>ProblemThe question that one of my teaching assistants posed was “What is the difference between lm(y ~ x) and lm(y ~ (poly,1)) for linear regression in R?” That is, it is quickly apparent that those commands produce different results, but for the same intention. Here I will try to explore the underlying difference.
Disclaimer: I know that the following discussion is incomplete. These are simply notes that I threw together overnight.</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-flexdashboard/</guid>
      <description>Thanks to Dr. Elaine McVey’s course at DataCamp, I feel that I can convert my Data Science course’s lab assignments and slides to flexdashboard. Today, I converted the first lab assignment. The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.
To convert my lab, which was previously in an R Markdown document for HTML output, I had to</description>
    </item>
    
    <item>
      <title>Trying Out FlexDashboard</title>
      <link>/post/trying-out-flexdashboard/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-flexdashboard/</guid>
      <description>Thanks to Dr. Elaine McVey&amp;rsquo;s course at DataCamp, I feel that I can convert my Data Science course&amp;rsquo;s lab assignments and slides to flexdashboard. Today, I converted the first lab assignment. The hope is that the students can clearly see the instructions that I am trying to convey rather than facing a wall of text.
To convert my lab, which was previously in an R Markdown document for HTML output, I had to</description>
    </item>
    
    <item>
      <title>Semester Schedule Planner</title>
      <link>/post/semester-schedule-planner/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/semester-schedule-planner/</guid>
      <description>As a lecturer at UC Merced, each semester I find myself needing to figure out how many days I get to teach. Furthermore, I like to plan out my lecture schedule down to the days themselves. Here I hope to use some R code to quickly figure out (say) which days are on Tuesday or Thursday.
ConstructionIn R, the seq command can be used with dates easily.
semester_dates &amp;lt;- seq(as.</description>
    </item>
    
    <item>
      <title>Let&#39;s see if I can make posts (mostly) through RStudio</title>
      <link>/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/let-s-see-if-i-can-make-posts-mostly-through-rstudio/</guid>
      <description>Let’s see if I can make posts (mostly) through RStudio</description>
    </item>
    
    <item>
      <title>Trying out GitHub Pages with Blogdown</title>
      <link>/post/trying-out-github-pages-with-blogdown/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/trying-out-github-pages-with-blogdown/</guid>
      <description>Today I am trying to get a blogdown site to work with GitHub pages, but I cannot seem to get the posts to link correctly with relative links.
Well, I hope to delete the pre-included widgets for now since I do not have publications.</description>
    </item>
    
    <item>
      <title>Getting started with the Academic framework for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 -0700</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>The Academic framework enables you to easily create a beautifully simple personal or academic website using the Hugo static site generator.
Key features:
 Easily manage your homepage, blog posts, publications, talks, and projects Configurable widgets available for Biography, Publications, Projects, News/Blog, Talks, and Contact Need a different section? Just use the Custom widget! Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Table of Contents   Installation Getting Started  Core parameters Introduce yourself Customize the homepage Add your content Remove unused widgets and pages Themes Customization &amp;amp; updating  Advanced customization  Navigation menu Website icon Analytics Third party and local scripts (JS) Language and translation Permalinks Advanced style customization (CSS)  Updating Feedback &amp;amp; Contributing License   Installation  Install Hugo and create a new website by typing the following commands in your Terminal or Command Prompt app:</description>
    </item>
    
    <item>
      <title>Customizing the homepage with widgets</title>
      <link>/post/widgets/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 -0700</pubDate>
      
      <guid>/post/widgets/</guid>
      <description>Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:
 About/biography Selected publications Recent publications Recent news/blog posts Projects Selected talks Recent talks Contact Tag cloud Hero (introduction) Custom widget (demonstrated with the teaching example)  The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don&amp;rsquo;t need and customize the parameters of the widgets you wish to keep.</description>
    </item>
    
    <item>
      <title>Managing content</title>
      <link>/post/managing-content/</link>
      <pubDate>Mon, 18 Apr 2016 00:00:00 -0700</pubDate>
      
      <guid>/post/managing-content/</guid>
      <description>&lt;p&gt;This is a brief guide to managing content with the Academic framework. Content can include publications, projects, talks, news/blog articles, and widget pages. After you have read this guide about creating and managing content, you may also be interested to learn about &lt;a href=&#34;/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Markdown, LaTeX, and Shortcodes&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Writing content with Markdown, LaTeX, and Shortcodes</title>
      <link>/post/writing-markdown-latex/</link>
      <pubDate>Sun, 17 Apr 2016 00:00:00 -0700</pubDate>
      
      <guid>/post/writing-markdown-latex/</guid>
      <description>&lt;p&gt;Content can be written using &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt;, &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt;, and &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34;&gt;Hugo Shortcodes&lt;/a&gt;. Additionally, HTML may be used for advanced formatting. This article gives an overview of the most common formatting options.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions (FAQ)</title>
      <link>/post/faq/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 -0700</pubDate>
      
      <guid>/post/faq/</guid>
      <description>Common questions and answers will be listed here.
I cloned/downloaded Academic but Hugo produces errors when using it with my existing Hugo site
Academic is a website framework rather than just a theme. Therefore, you must follow the full installation guide found on the Demo/Documentation website or in the Github Readme. If you still have problems, first try running Hugo on the Academic Example Site found in the themes/academic/exampleSite folder and then compare the configuration parameters in the Example Site&amp;rsquo;s config.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll to Hugo</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 -0700</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Here are a few tips for migrating an existing website from Jekyll to Hugo. These tips can be applied in conjunction with following Hugo Academic&amp;rsquo;s getting started guide.
Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like</description>
    </item>
    
  </channel>
</rss>