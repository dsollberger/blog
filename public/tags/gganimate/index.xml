<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gganimate on The Median Data Scientist</title>
    <link>/tags/gganimate/</link>
    <description>Recent content in Gganimate on The Median Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 25 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/gganimate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Random Walks (draft)</title>
      <link>/post/random-walks-draft/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/random-walks-draft/</guid>
      <description>library(&amp;quot;gganimate&amp;quot;)library(&amp;quot;ggplot2&amp;quot;)p = 1/2# parametersp &amp;lt;- 0.5Tmax = 60# start at the originx = 0y = 0t = 0df &amp;lt;- data.frame(x,y,t)# random walkfor(i in 1:Tmax){t &amp;lt;- t + 1if(runif(1) &amp;lt; p){x &amp;lt;- x - 1} else {x &amp;lt;- x + 1}# reset process if dot leaves viewif(abs(x) &amp;gt; 10){x &amp;lt;- 0}this_step &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>Valentine&#39;s Day 2019</title>
      <link>/post/valentine-s-day-2019/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/valentine-s-day-2019/</guid>
      <description>In this short project, I hope to draw a heart through an animation of appearing dots.
library(&amp;quot;gganimate&amp;quot;)library(&amp;quot;ggforce&amp;quot;)library(&amp;quot;tidyverse&amp;quot;)Draw a HeartHere I will place two circles centered at \((\pm 1, 1)\) with the same radius \(r = \sqrt{2}\).
circles &amp;lt;- data.frame(x0 = c(-1,1),y0 = rep(1,2),r = rep(1, 2))right_pt &amp;lt;- (sqrt(2) + 1) / sqrt(2)left_pt &amp;lt;- -1*right_ptf &amp;lt;- function(x){abs(x) - sqrt(2)}ggplot(data.frame(x = c(left_pt, right_pt)), aes(x)) +coord_fixed() +geom_circle(aes(x0 = x0, y0 = y0, r = r), data = circles, inherit.</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>Packagesworkshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;)install.packages(workshop_packages)library(&amp;quot;gganimate&amp;quot;)## Loading required package: ggplot2library(&amp;quot;ggplot2&amp;quot;)library(&amp;quot;mosaic&amp;quot;)## Loading required package: dplyr## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, union## Loading required package: lattice## Loading required package: ggformula## Loading required package: ggstance## ## Attaching package: &amp;#39;ggstance&amp;#39;## The following objects are masked from &amp;#39;package:ggplot2&amp;#39;:## ## geom_errorbarh, GeomErrorbarh## ## New to ggformula?</description>
    </item>
    
    <item>
      <title>Introduction to R Workshop</title>
      <link>/post/introduction-to-r-workshop/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-r-workshop/</guid>
      <description>Packages workshop_packages &amp;lt;-c(&amp;quot;ggplot2&amp;quot;, &amp;quot;mosaic&amp;quot;, &amp;quot;gganimate&amp;quot;) install.packages(workshop_packages)  library(&amp;quot;gganimate&amp;quot;)  ## Loading required package: ggplot2  library(&amp;quot;ggplot2&amp;quot;) library(&amp;quot;mosaic&amp;quot;)  ## Loading required package: dplyr  ## ## Attaching package: &#39;dplyr&#39;  ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag  ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union  ## Loading required package: lattice  ## Loading required package: ggformula  ## Loading required package: ggstance  ## ## Attaching package: &#39;ggstance&#39;  ## The following objects are masked from &#39;package:ggplot2&#39;: ## ## geom_errorbarh, GeomErrorbarh  ## ## New to ggformula?</description>
    </item>
    
    <item>
      <title>gganatogram and gganimate</title>
      <link>/post/gganatogram-and-gganimate/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gganatogram-and-gganimate/</guid>
      <description>Today I wanted to see if I could create a slideshow of pictures from the gganatogram package. I wanted to combine them with the gganimate package, but I have not figured out how to get that to work. (In particular, the gganatogram() function seems to return a different list layout than ggplot objects.)
library(gganatogram)## Loading required package: ggpolypath## Loading required package: ggplot2library(gganimate)library(profvis)N &amp;lt;- 25 # number of cell samplesnum_cell_parts &amp;lt;- nrow(cell_key$cell)# randomly select a random number of cell partspart_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))cell_num &amp;lt;- rep(1, length(part_picker))this_cell &amp;lt;- cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ]cell_samples &amp;lt;- cbind(this_cell, cell_num)for(j in 2:N){part_picker &amp;lt;- sample(1:num_cell_parts, sample(1:num_cell_parts, 1))cell_num &amp;lt;- rep(j, length(part_picker))this_cell &amp;lt;- cbind( cell_key[[&amp;#39;cell&amp;#39;]][part_picker, ], cell_num)cell_samples &amp;lt;- rbind(cell_samples, this_cell)# figure_list[j] &amp;lt;- gganatogram(data = this_cell,# outline = FALSE, fillOutline=&amp;#39;steelblue&amp;#39;, organism=&amp;quot;cell&amp;quot;, fill=&amp;quot;colour&amp;quot;) + # theme_void() + # coord_fixed()png(filename = paste0(j, &amp;quot;.</description>
    </item>
    
    <item>
      <title>My First gganimate Plot</title>
      <link>/post/my-first-gganimate-plot/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/my-first-gganimate-plot/</guid>
      <description>Today I finally read a tutorial on gganimate, and here I will build my first example. My hope is to eventually simulate traversal on a directed graph.
library(tidyverse)library(gganimate)Create Node DataFor this example, I will have 3 nodes (located at 3 vertices of a triangle), 100 dots distributed among the nodes, and a new placement over 21 states in time.
N &amp;lt;- 100 # number of dotsT &amp;lt;- 20 # number of iterationsnode_names &amp;lt;- c(&amp;quot;Node 1&amp;quot;, &amp;quot;Node 2&amp;quot;, &amp;quot;Node 3&amp;quot;)iter &amp;lt;- rep(0, N)node &amp;lt;- rep(&amp;quot;Node 1&amp;quot;, N)x &amp;lt;- 10 + rnorm(N, 0, 2)y &amp;lt;- 20 + rnorm(N, 0, 2)states &amp;lt;- data.</description>
    </item>
    
  </channel>
</rss>